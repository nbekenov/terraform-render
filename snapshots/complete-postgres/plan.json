{
    "format_version": "1.1",
    "terraform_version": "1.2.1",
    "planned_values": {
        "root_module": {
            "child_modules": [
                {
                    "resources": [
                        {
                            "address": "module.db.random_password.master_password[0]",
                            "mode": "managed",
                            "type": "random_password",
                            "name": "master_password",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/random",
                            "schema_version": 1,
                            "values": {
                                "keepers": null,
                                "length": 16,
                                "lower": true,
                                "min_lower": 0,
                                "min_numeric": 0,
                                "min_special": 0,
                                "min_upper": 0,
                                "number": true,
                                "override_special": null,
                                "special": false,
                                "upper": true
                            },
                            "sensitive_values": {}
                        }
                    ],
                    "address": "module.db",
                    "child_modules": [
                        {
                            "resources": [
                                {
                                    "address": "module.db.module.db_parameter_group.aws_db_parameter_group.this[0]",
                                    "mode": "managed",
                                    "type": "aws_db_parameter_group",
                                    "name": "this",
                                    "index": 0,
                                    "provider_name": "registry.terraform.io/hashicorp/aws",
                                    "schema_version": 0,
                                    "values": {
                                        "description": "complete-postgresql parameter group",
                                        "family": "postgres14",
                                        "name_prefix": "complete-postgresql-",
                                        "parameter": [
                                            {
                                                "apply_method": "immediate",
                                                "name": "autovacuum",
                                                "value": "1"
                                            },
                                            {
                                                "apply_method": "immediate",
                                                "name": "client_encoding",
                                                "value": "utf8"
                                            }
                                        ],
                                        "tags": {
                                            "Environment": "dev",
                                            "Name": "complete-postgresql",
                                            "Owner": "user",
                                            "Sensitive": "low"
                                        },
                                        "tags_all": {
                                            "Environment": "dev",
                                            "Name": "complete-postgresql",
                                            "Owner": "user",
                                            "Sensitive": "low"
                                        }
                                    },
                                    "sensitive_values": {
                                        "parameter": [
                                            {},
                                            {}
                                        ],
                                        "tags": {},
                                        "tags_all": {}
                                    }
                                }
                            ],
                            "address": "module.db.module.db_parameter_group"
                        },
                        {
                            "resources": [
                                {
                                    "address": "module.db.module.db_instance.aws_cloudwatch_log_group.this[\"postgresql\"]",
                                    "mode": "managed",
                                    "type": "aws_cloudwatch_log_group",
                                    "name": "this",
                                    "index": "postgresql",
                                    "provider_name": "registry.terraform.io/hashicorp/aws",
                                    "schema_version": 0,
                                    "values": {
                                        "kms_key_id": null,
                                        "name": "/aws/rds/instance/complete-postgresql/postgresql",
                                        "name_prefix": null,
                                        "retention_in_days": 7,
                                        "tags": {
                                            "Environment": "dev",
                                            "Owner": "user"
                                        },
                                        "tags_all": {
                                            "Environment": "dev",
                                            "Owner": "user"
                                        }
                                    },
                                    "sensitive_values": {
                                        "tags": {},
                                        "tags_all": {}
                                    }
                                },
                                {
                                    "address": "module.db.module.db_instance.aws_cloudwatch_log_group.this[\"upgrade\"]",
                                    "mode": "managed",
                                    "type": "aws_cloudwatch_log_group",
                                    "name": "this",
                                    "index": "upgrade",
                                    "provider_name": "registry.terraform.io/hashicorp/aws",
                                    "schema_version": 0,
                                    "values": {
                                        "kms_key_id": null,
                                        "name": "/aws/rds/instance/complete-postgresql/upgrade",
                                        "name_prefix": null,
                                        "retention_in_days": 7,
                                        "tags": {
                                            "Environment": "dev",
                                            "Owner": "user"
                                        },
                                        "tags_all": {
                                            "Environment": "dev",
                                            "Owner": "user"
                                        }
                                    },
                                    "sensitive_values": {
                                        "tags": {},
                                        "tags_all": {}
                                    }
                                },
                                {
                                    "address": "module.db.module.db_instance.aws_db_instance.this[0]",
                                    "mode": "managed",
                                    "type": "aws_db_instance",
                                    "name": "this",
                                    "index": 0,
                                    "provider_name": "registry.terraform.io/hashicorp/aws",
                                    "schema_version": 1,
                                    "values": {
                                        "allocated_storage": 20,
                                        "allow_major_version_upgrade": false,
                                        "apply_immediately": false,
                                        "auto_minor_version_upgrade": true,
                                        "backup_retention_period": 0,
                                        "backup_window": "03:00-06:00",
                                        "copy_tags_to_snapshot": false,
                                        "customer_owned_ip_enabled": null,
                                        "db_name": "completePostgresql",
                                        "delete_automated_backups": true,
                                        "deletion_protection": false,
                                        "domain": null,
                                        "domain_iam_role_name": null,
                                        "enabled_cloudwatch_logs_exports": [
                                            "postgresql",
                                            "upgrade"
                                        ],
                                        "engine": "postgres",
                                        "engine_version": "14.1",
                                        "final_snapshot_identifier": null,
                                        "iam_database_authentication_enabled": false,
                                        "identifier": "complete-postgresql",
                                        "instance_class": "db.t4g.large",
                                        "iops": 0,
                                        "maintenance_window": "mon:00:00-mon:03:00",
                                        "max_allocated_storage": 100,
                                        "monitoring_interval": 60,
                                        "multi_az": true,
                                        "performance_insights_enabled": true,
                                        "performance_insights_retention_period": 7,
                                        "port": 5432,
                                        "publicly_accessible": false,
                                        "replicate_source_db": null,
                                        "restore_to_point_in_time": [],
                                        "s3_import": [],
                                        "security_group_names": null,
                                        "skip_final_snapshot": true,
                                        "storage_encrypted": true,
                                        "tags": {
                                            "Environment": "dev",
                                            "Owner": "user"
                                        },
                                        "tags_all": {
                                            "Environment": "dev",
                                            "Owner": "user"
                                        },
                                        "timeouts": {
                                            "create": null,
                                            "delete": null,
                                            "update": null
                                        },
                                        "username": "complete_postgresql"
                                    },
                                    "sensitive_values": {
                                        "enabled_cloudwatch_logs_exports": [
                                            false,
                                            false
                                        ],
                                        "password": true,
                                        "replicas": [],
                                        "restore_to_point_in_time": [],
                                        "s3_import": [],
                                        "tags": {},
                                        "tags_all": {},
                                        "timeouts": {},
                                        "vpc_security_group_ids": []
                                    }
                                },
                                {
                                    "address": "module.db.module.db_instance.aws_iam_role.enhanced_monitoring[0]",
                                    "mode": "managed",
                                    "type": "aws_iam_role",
                                    "name": "enhanced_monitoring",
                                    "index": 0,
                                    "provider_name": "registry.terraform.io/hashicorp/aws",
                                    "schema_version": 0,
                                    "values": {
                                        "assume_role_policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"monitoring.rds.amazonaws.com\"\n      }\n    }\n  ]\n}",
                                        "description": "Description for monitoring role",
                                        "force_detach_policies": false,
                                        "max_session_duration": 3600,
                                        "name": "example-monitoring-role-name",
                                        "path": "/",
                                        "permissions_boundary": null,
                                        "tags": {
                                            "Environment": "dev",
                                            "Name": "example-monitoring-role-name",
                                            "Owner": "user"
                                        },
                                        "tags_all": {
                                            "Environment": "dev",
                                            "Name": "example-monitoring-role-name",
                                            "Owner": "user"
                                        }
                                    },
                                    "sensitive_values": {
                                        "inline_policy": [],
                                        "managed_policy_arns": [],
                                        "tags": {},
                                        "tags_all": {}
                                    }
                                },
                                {
                                    "address": "module.db.module.db_instance.aws_iam_role_policy_attachment.enhanced_monitoring[0]",
                                    "mode": "managed",
                                    "type": "aws_iam_role_policy_attachment",
                                    "name": "enhanced_monitoring",
                                    "index": 0,
                                    "provider_name": "registry.terraform.io/hashicorp/aws",
                                    "schema_version": 0,
                                    "values": {
                                        "policy_arn": "arn:aws:iam::aws:policy/service-role/AmazonRDSEnhancedMonitoringRole",
                                        "role": "example-monitoring-role-name"
                                    },
                                    "sensitive_values": {}
                                }
                            ],
                            "address": "module.db.module.db_instance"
                        }
                    ]
                },
                {
                    "resources": [
                        {
                            "address": "module.db_default.random_password.master_password[0]",
                            "mode": "managed",
                            "type": "random_password",
                            "name": "master_password",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/random",
                            "schema_version": 1,
                            "values": {
                                "keepers": null,
                                "length": 16,
                                "lower": true,
                                "min_lower": 0,
                                "min_numeric": 0,
                                "min_special": 0,
                                "min_upper": 0,
                                "number": true,
                                "override_special": null,
                                "special": false,
                                "upper": true
                            },
                            "sensitive_values": {}
                        }
                    ],
                    "address": "module.db_default",
                    "child_modules": [
                        {
                            "resources": [
                                {
                                    "address": "module.db_default.module.db_instance.aws_db_instance.this[0]",
                                    "mode": "managed",
                                    "type": "aws_db_instance",
                                    "name": "this",
                                    "index": 0,
                                    "provider_name": "registry.terraform.io/hashicorp/aws",
                                    "schema_version": 1,
                                    "values": {
                                        "allocated_storage": 20,
                                        "allow_major_version_upgrade": false,
                                        "apply_immediately": false,
                                        "auto_minor_version_upgrade": true,
                                        "backup_retention_period": 0,
                                        "backup_window": "03:00-06:00",
                                        "copy_tags_to_snapshot": false,
                                        "customer_owned_ip_enabled": null,
                                        "db_name": "completePostgresql",
                                        "delete_automated_backups": true,
                                        "deletion_protection": false,
                                        "domain": null,
                                        "domain_iam_role_name": null,
                                        "enabled_cloudwatch_logs_exports": null,
                                        "engine": "postgres",
                                        "engine_version": "14.1",
                                        "iam_database_authentication_enabled": false,
                                        "identifier": "complete-postgresql-default",
                                        "instance_class": "db.t4g.large",
                                        "iops": 0,
                                        "maintenance_window": "mon:00:00-mon:03:00",
                                        "max_allocated_storage": 0,
                                        "monitoring_interval": 0,
                                        "multi_az": false,
                                        "performance_insights_enabled": false,
                                        "port": 5432,
                                        "publicly_accessible": false,
                                        "replicate_source_db": null,
                                        "restore_to_point_in_time": [],
                                        "s3_import": [],
                                        "security_group_names": null,
                                        "skip_final_snapshot": false,
                                        "storage_encrypted": true,
                                        "tags": {
                                            "Environment": "dev",
                                            "Owner": "user"
                                        },
                                        "tags_all": {
                                            "Environment": "dev",
                                            "Owner": "user"
                                        },
                                        "timeouts": {
                                            "create": null,
                                            "delete": null,
                                            "update": null
                                        },
                                        "username": "complete_postgresql"
                                    },
                                    "sensitive_values": {
                                        "password": true,
                                        "replicas": [],
                                        "restore_to_point_in_time": [],
                                        "s3_import": [],
                                        "tags": {},
                                        "tags_all": {},
                                        "timeouts": {},
                                        "vpc_security_group_ids": []
                                    }
                                },
                                {
                                    "address": "module.db_default.module.db_instance.random_id.snapshot_identifier[0]",
                                    "mode": "managed",
                                    "type": "random_id",
                                    "name": "snapshot_identifier",
                                    "index": 0,
                                    "provider_name": "registry.terraform.io/hashicorp/random",
                                    "schema_version": 0,
                                    "values": {
                                        "byte_length": 4,
                                        "keepers": {
                                            "id": "complete-postgresql-default"
                                        },
                                        "prefix": null
                                    },
                                    "sensitive_values": {
                                        "keepers": {}
                                    }
                                }
                            ],
                            "address": "module.db_default.module.db_instance"
                        }
                    ]
                },
                {
                    "resources": [
                        {
                            "address": "module.security_group.aws_security_group.this_name_prefix[0]",
                            "mode": "managed",
                            "type": "aws_security_group",
                            "name": "this_name_prefix",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 1,
                            "values": {
                                "description": "Complete PostgreSQL example security group",
                                "name_prefix": "complete-postgresql-",
                                "revoke_rules_on_delete": false,
                                "tags": {
                                    "Environment": "dev",
                                    "Name": "complete-postgresql",
                                    "Owner": "user"
                                },
                                "tags_all": {
                                    "Environment": "dev",
                                    "Name": "complete-postgresql",
                                    "Owner": "user"
                                },
                                "timeouts": {
                                    "create": "10m",
                                    "delete": "15m"
                                }
                            },
                            "sensitive_values": {
                                "egress": [],
                                "ingress": [],
                                "tags": {},
                                "tags_all": {},
                                "timeouts": {}
                            }
                        },
                        {
                            "address": "module.security_group.aws_security_group_rule.ingress_with_cidr_blocks[0]",
                            "mode": "managed",
                            "type": "aws_security_group_rule",
                            "name": "ingress_with_cidr_blocks",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 2,
                            "values": {
                                "cidr_blocks": [
                                    "10.99.0.0/18"
                                ],
                                "description": "PostgreSQL access from within VPC",
                                "from_port": 5432,
                                "ipv6_cidr_blocks": null,
                                "prefix_list_ids": [],
                                "protocol": "tcp",
                                "self": false,
                                "to_port": 5432,
                                "type": "ingress"
                            },
                            "sensitive_values": {
                                "cidr_blocks": [
                                    false
                                ],
                                "prefix_list_ids": []
                            }
                        }
                    ],
                    "address": "module.security_group"
                },
                {
                    "resources": [
                        {
                            "address": "module.vpc.aws_db_subnet_group.database[0]",
                            "mode": "managed",
                            "type": "aws_db_subnet_group",
                            "name": "database",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "description": "Database subnet group for complete-postgresql",
                                "name": "complete-postgresql",
                                "tags": {
                                    "Environment": "dev",
                                    "Name": "complete-postgresql",
                                    "Owner": "user"
                                },
                                "tags_all": {
                                    "Environment": "dev",
                                    "Name": "complete-postgresql",
                                    "Owner": "user"
                                }
                            },
                            "sensitive_values": {
                                "subnet_ids": [],
                                "tags": {},
                                "tags_all": {}
                            }
                        },
                        {
                            "address": "module.vpc.aws_internet_gateway.this[0]",
                            "mode": "managed",
                            "type": "aws_internet_gateway",
                            "name": "this",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "tags": {
                                    "Environment": "dev",
                                    "Name": "complete-postgresql",
                                    "Owner": "user"
                                },
                                "tags_all": {
                                    "Environment": "dev",
                                    "Name": "complete-postgresql",
                                    "Owner": "user"
                                }
                            },
                            "sensitive_values": {
                                "tags": {},
                                "tags_all": {}
                            }
                        },
                        {
                            "address": "module.vpc.aws_route.public_internet_gateway[0]",
                            "mode": "managed",
                            "type": "aws_route",
                            "name": "public_internet_gateway",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "carrier_gateway_id": null,
                                "core_network_arn": null,
                                "destination_cidr_block": "0.0.0.0/0",
                                "destination_ipv6_cidr_block": null,
                                "destination_prefix_list_id": null,
                                "egress_only_gateway_id": null,
                                "local_gateway_id": null,
                                "nat_gateway_id": null,
                                "timeouts": {
                                    "create": "5m",
                                    "delete": null,
                                    "update": null
                                },
                                "transit_gateway_id": null,
                                "vpc_endpoint_id": null,
                                "vpc_peering_connection_id": null
                            },
                            "sensitive_values": {
                                "timeouts": {}
                            }
                        },
                        {
                            "address": "module.vpc.aws_route_table.database[0]",
                            "mode": "managed",
                            "type": "aws_route_table",
                            "name": "database",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "tags": {
                                    "Environment": "dev",
                                    "Name": "complete-postgresql-db-eu-west-1a",
                                    "Owner": "user"
                                },
                                "tags_all": {
                                    "Environment": "dev",
                                    "Name": "complete-postgresql-db-eu-west-1a",
                                    "Owner": "user"
                                },
                                "timeouts": null
                            },
                            "sensitive_values": {
                                "propagating_vgws": [],
                                "route": [],
                                "tags": {},
                                "tags_all": {}
                            }
                        },
                        {
                            "address": "module.vpc.aws_route_table.database[1]",
                            "mode": "managed",
                            "type": "aws_route_table",
                            "name": "database",
                            "index": 1,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "tags": {
                                    "Environment": "dev",
                                    "Name": "complete-postgresql-db-eu-west-1b",
                                    "Owner": "user"
                                },
                                "tags_all": {
                                    "Environment": "dev",
                                    "Name": "complete-postgresql-db-eu-west-1b",
                                    "Owner": "user"
                                },
                                "timeouts": null
                            },
                            "sensitive_values": {
                                "propagating_vgws": [],
                                "route": [],
                                "tags": {},
                                "tags_all": {}
                            }
                        },
                        {
                            "address": "module.vpc.aws_route_table.database[2]",
                            "mode": "managed",
                            "type": "aws_route_table",
                            "name": "database",
                            "index": 2,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "tags": {
                                    "Environment": "dev",
                                    "Name": "complete-postgresql-db-eu-west-1c",
                                    "Owner": "user"
                                },
                                "tags_all": {
                                    "Environment": "dev",
                                    "Name": "complete-postgresql-db-eu-west-1c",
                                    "Owner": "user"
                                },
                                "timeouts": null
                            },
                            "sensitive_values": {
                                "propagating_vgws": [],
                                "route": [],
                                "tags": {},
                                "tags_all": {}
                            }
                        },
                        {
                            "address": "module.vpc.aws_route_table.private[0]",
                            "mode": "managed",
                            "type": "aws_route_table",
                            "name": "private",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "tags": {
                                    "Environment": "dev",
                                    "Name": "complete-postgresql-private-eu-west-1a",
                                    "Owner": "user"
                                },
                                "tags_all": {
                                    "Environment": "dev",
                                    "Name": "complete-postgresql-private-eu-west-1a",
                                    "Owner": "user"
                                },
                                "timeouts": null
                            },
                            "sensitive_values": {
                                "propagating_vgws": [],
                                "route": [],
                                "tags": {},
                                "tags_all": {}
                            }
                        },
                        {
                            "address": "module.vpc.aws_route_table.private[1]",
                            "mode": "managed",
                            "type": "aws_route_table",
                            "name": "private",
                            "index": 1,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "tags": {
                                    "Environment": "dev",
                                    "Name": "complete-postgresql-private-eu-west-1b",
                                    "Owner": "user"
                                },
                                "tags_all": {
                                    "Environment": "dev",
                                    "Name": "complete-postgresql-private-eu-west-1b",
                                    "Owner": "user"
                                },
                                "timeouts": null
                            },
                            "sensitive_values": {
                                "propagating_vgws": [],
                                "route": [],
                                "tags": {},
                                "tags_all": {}
                            }
                        },
                        {
                            "address": "module.vpc.aws_route_table.private[2]",
                            "mode": "managed",
                            "type": "aws_route_table",
                            "name": "private",
                            "index": 2,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "tags": {
                                    "Environment": "dev",
                                    "Name": "complete-postgresql-private-eu-west-1c",
                                    "Owner": "user"
                                },
                                "tags_all": {
                                    "Environment": "dev",
                                    "Name": "complete-postgresql-private-eu-west-1c",
                                    "Owner": "user"
                                },
                                "timeouts": null
                            },
                            "sensitive_values": {
                                "propagating_vgws": [],
                                "route": [],
                                "tags": {},
                                "tags_all": {}
                            }
                        },
                        {
                            "address": "module.vpc.aws_route_table.public[0]",
                            "mode": "managed",
                            "type": "aws_route_table",
                            "name": "public",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "tags": {
                                    "Environment": "dev",
                                    "Name": "complete-postgresql-public",
                                    "Owner": "user"
                                },
                                "tags_all": {
                                    "Environment": "dev",
                                    "Name": "complete-postgresql-public",
                                    "Owner": "user"
                                },
                                "timeouts": null
                            },
                            "sensitive_values": {
                                "propagating_vgws": [],
                                "route": [],
                                "tags": {},
                                "tags_all": {}
                            }
                        },
                        {
                            "address": "module.vpc.aws_route_table_association.database[0]",
                            "mode": "managed",
                            "type": "aws_route_table_association",
                            "name": "database",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "gateway_id": null
                            },
                            "sensitive_values": {}
                        },
                        {
                            "address": "module.vpc.aws_route_table_association.database[1]",
                            "mode": "managed",
                            "type": "aws_route_table_association",
                            "name": "database",
                            "index": 1,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "gateway_id": null
                            },
                            "sensitive_values": {}
                        },
                        {
                            "address": "module.vpc.aws_route_table_association.database[2]",
                            "mode": "managed",
                            "type": "aws_route_table_association",
                            "name": "database",
                            "index": 2,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "gateway_id": null
                            },
                            "sensitive_values": {}
                        },
                        {
                            "address": "module.vpc.aws_route_table_association.private[0]",
                            "mode": "managed",
                            "type": "aws_route_table_association",
                            "name": "private",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "gateway_id": null
                            },
                            "sensitive_values": {}
                        },
                        {
                            "address": "module.vpc.aws_route_table_association.private[1]",
                            "mode": "managed",
                            "type": "aws_route_table_association",
                            "name": "private",
                            "index": 1,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "gateway_id": null
                            },
                            "sensitive_values": {}
                        },
                        {
                            "address": "module.vpc.aws_route_table_association.private[2]",
                            "mode": "managed",
                            "type": "aws_route_table_association",
                            "name": "private",
                            "index": 2,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "gateway_id": null
                            },
                            "sensitive_values": {}
                        },
                        {
                            "address": "module.vpc.aws_route_table_association.public[0]",
                            "mode": "managed",
                            "type": "aws_route_table_association",
                            "name": "public",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "gateway_id": null
                            },
                            "sensitive_values": {}
                        },
                        {
                            "address": "module.vpc.aws_route_table_association.public[1]",
                            "mode": "managed",
                            "type": "aws_route_table_association",
                            "name": "public",
                            "index": 1,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "gateway_id": null
                            },
                            "sensitive_values": {}
                        },
                        {
                            "address": "module.vpc.aws_route_table_association.public[2]",
                            "mode": "managed",
                            "type": "aws_route_table_association",
                            "name": "public",
                            "index": 2,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "gateway_id": null
                            },
                            "sensitive_values": {}
                        },
                        {
                            "address": "module.vpc.aws_subnet.database[0]",
                            "mode": "managed",
                            "type": "aws_subnet",
                            "name": "database",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 1,
                            "values": {
                                "assign_ipv6_address_on_creation": false,
                                "availability_zone": "eu-west-1a",
                                "cidr_block": "10.99.7.0/24",
                                "customer_owned_ipv4_pool": null,
                                "enable_dns64": false,
                                "enable_resource_name_dns_a_record_on_launch": false,
                                "enable_resource_name_dns_aaaa_record_on_launch": false,
                                "ipv6_cidr_block": null,
                                "ipv6_native": false,
                                "map_customer_owned_ip_on_launch": null,
                                "map_public_ip_on_launch": false,
                                "outpost_arn": null,
                                "tags": {
                                    "Environment": "dev",
                                    "Name": "complete-postgresql-db-eu-west-1a",
                                    "Owner": "user"
                                },
                                "tags_all": {
                                    "Environment": "dev",
                                    "Name": "complete-postgresql-db-eu-west-1a",
                                    "Owner": "user"
                                },
                                "timeouts": null
                            },
                            "sensitive_values": {
                                "tags": {},
                                "tags_all": {}
                            }
                        },
                        {
                            "address": "module.vpc.aws_subnet.database[1]",
                            "mode": "managed",
                            "type": "aws_subnet",
                            "name": "database",
                            "index": 1,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 1,
                            "values": {
                                "assign_ipv6_address_on_creation": false,
                                "availability_zone": "eu-west-1b",
                                "cidr_block": "10.99.8.0/24",
                                "customer_owned_ipv4_pool": null,
                                "enable_dns64": false,
                                "enable_resource_name_dns_a_record_on_launch": false,
                                "enable_resource_name_dns_aaaa_record_on_launch": false,
                                "ipv6_cidr_block": null,
                                "ipv6_native": false,
                                "map_customer_owned_ip_on_launch": null,
                                "map_public_ip_on_launch": false,
                                "outpost_arn": null,
                                "tags": {
                                    "Environment": "dev",
                                    "Name": "complete-postgresql-db-eu-west-1b",
                                    "Owner": "user"
                                },
                                "tags_all": {
                                    "Environment": "dev",
                                    "Name": "complete-postgresql-db-eu-west-1b",
                                    "Owner": "user"
                                },
                                "timeouts": null
                            },
                            "sensitive_values": {
                                "tags": {},
                                "tags_all": {}
                            }
                        },
                        {
                            "address": "module.vpc.aws_subnet.database[2]",
                            "mode": "managed",
                            "type": "aws_subnet",
                            "name": "database",
                            "index": 2,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 1,
                            "values": {
                                "assign_ipv6_address_on_creation": false,
                                "availability_zone": "eu-west-1c",
                                "cidr_block": "10.99.9.0/24",
                                "customer_owned_ipv4_pool": null,
                                "enable_dns64": false,
                                "enable_resource_name_dns_a_record_on_launch": false,
                                "enable_resource_name_dns_aaaa_record_on_launch": false,
                                "ipv6_cidr_block": null,
                                "ipv6_native": false,
                                "map_customer_owned_ip_on_launch": null,
                                "map_public_ip_on_launch": false,
                                "outpost_arn": null,
                                "tags": {
                                    "Environment": "dev",
                                    "Name": "complete-postgresql-db-eu-west-1c",
                                    "Owner": "user"
                                },
                                "tags_all": {
                                    "Environment": "dev",
                                    "Name": "complete-postgresql-db-eu-west-1c",
                                    "Owner": "user"
                                },
                                "timeouts": null
                            },
                            "sensitive_values": {
                                "tags": {},
                                "tags_all": {}
                            }
                        },
                        {
                            "address": "module.vpc.aws_subnet.private[0]",
                            "mode": "managed",
                            "type": "aws_subnet",
                            "name": "private",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 1,
                            "values": {
                                "assign_ipv6_address_on_creation": false,
                                "availability_zone": "eu-west-1a",
                                "cidr_block": "10.99.3.0/24",
                                "customer_owned_ipv4_pool": null,
                                "enable_dns64": false,
                                "enable_resource_name_dns_a_record_on_launch": false,
                                "enable_resource_name_dns_aaaa_record_on_launch": false,
                                "ipv6_cidr_block": null,
                                "ipv6_native": false,
                                "map_customer_owned_ip_on_launch": null,
                                "map_public_ip_on_launch": false,
                                "outpost_arn": null,
                                "tags": {
                                    "Environment": "dev",
                                    "Name": "complete-postgresql-private-eu-west-1a",
                                    "Owner": "user"
                                },
                                "tags_all": {
                                    "Environment": "dev",
                                    "Name": "complete-postgresql-private-eu-west-1a",
                                    "Owner": "user"
                                },
                                "timeouts": null
                            },
                            "sensitive_values": {
                                "tags": {},
                                "tags_all": {}
                            }
                        },
                        {
                            "address": "module.vpc.aws_subnet.private[1]",
                            "mode": "managed",
                            "type": "aws_subnet",
                            "name": "private",
                            "index": 1,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 1,
                            "values": {
                                "assign_ipv6_address_on_creation": false,
                                "availability_zone": "eu-west-1b",
                                "cidr_block": "10.99.4.0/24",
                                "customer_owned_ipv4_pool": null,
                                "enable_dns64": false,
                                "enable_resource_name_dns_a_record_on_launch": false,
                                "enable_resource_name_dns_aaaa_record_on_launch": false,
                                "ipv6_cidr_block": null,
                                "ipv6_native": false,
                                "map_customer_owned_ip_on_launch": null,
                                "map_public_ip_on_launch": false,
                                "outpost_arn": null,
                                "tags": {
                                    "Environment": "dev",
                                    "Name": "complete-postgresql-private-eu-west-1b",
                                    "Owner": "user"
                                },
                                "tags_all": {
                                    "Environment": "dev",
                                    "Name": "complete-postgresql-private-eu-west-1b",
                                    "Owner": "user"
                                },
                                "timeouts": null
                            },
                            "sensitive_values": {
                                "tags": {},
                                "tags_all": {}
                            }
                        },
                        {
                            "address": "module.vpc.aws_subnet.private[2]",
                            "mode": "managed",
                            "type": "aws_subnet",
                            "name": "private",
                            "index": 2,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 1,
                            "values": {
                                "assign_ipv6_address_on_creation": false,
                                "availability_zone": "eu-west-1c",
                                "cidr_block": "10.99.5.0/24",
                                "customer_owned_ipv4_pool": null,
                                "enable_dns64": false,
                                "enable_resource_name_dns_a_record_on_launch": false,
                                "enable_resource_name_dns_aaaa_record_on_launch": false,
                                "ipv6_cidr_block": null,
                                "ipv6_native": false,
                                "map_customer_owned_ip_on_launch": null,
                                "map_public_ip_on_launch": false,
                                "outpost_arn": null,
                                "tags": {
                                    "Environment": "dev",
                                    "Name": "complete-postgresql-private-eu-west-1c",
                                    "Owner": "user"
                                },
                                "tags_all": {
                                    "Environment": "dev",
                                    "Name": "complete-postgresql-private-eu-west-1c",
                                    "Owner": "user"
                                },
                                "timeouts": null
                            },
                            "sensitive_values": {
                                "tags": {},
                                "tags_all": {}
                            }
                        },
                        {
                            "address": "module.vpc.aws_subnet.public[0]",
                            "mode": "managed",
                            "type": "aws_subnet",
                            "name": "public",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 1,
                            "values": {
                                "assign_ipv6_address_on_creation": false,
                                "availability_zone": "eu-west-1a",
                                "cidr_block": "10.99.0.0/24",
                                "customer_owned_ipv4_pool": null,
                                "enable_dns64": false,
                                "enable_resource_name_dns_a_record_on_launch": false,
                                "enable_resource_name_dns_aaaa_record_on_launch": false,
                                "ipv6_cidr_block": null,
                                "ipv6_native": false,
                                "map_customer_owned_ip_on_launch": null,
                                "map_public_ip_on_launch": true,
                                "outpost_arn": null,
                                "tags": {
                                    "Environment": "dev",
                                    "Name": "complete-postgresql-public-eu-west-1a",
                                    "Owner": "user"
                                },
                                "tags_all": {
                                    "Environment": "dev",
                                    "Name": "complete-postgresql-public-eu-west-1a",
                                    "Owner": "user"
                                },
                                "timeouts": null
                            },
                            "sensitive_values": {
                                "tags": {},
                                "tags_all": {}
                            }
                        },
                        {
                            "address": "module.vpc.aws_subnet.public[1]",
                            "mode": "managed",
                            "type": "aws_subnet",
                            "name": "public",
                            "index": 1,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 1,
                            "values": {
                                "assign_ipv6_address_on_creation": false,
                                "availability_zone": "eu-west-1b",
                                "cidr_block": "10.99.1.0/24",
                                "customer_owned_ipv4_pool": null,
                                "enable_dns64": false,
                                "enable_resource_name_dns_a_record_on_launch": false,
                                "enable_resource_name_dns_aaaa_record_on_launch": false,
                                "ipv6_cidr_block": null,
                                "ipv6_native": false,
                                "map_customer_owned_ip_on_launch": null,
                                "map_public_ip_on_launch": true,
                                "outpost_arn": null,
                                "tags": {
                                    "Environment": "dev",
                                    "Name": "complete-postgresql-public-eu-west-1b",
                                    "Owner": "user"
                                },
                                "tags_all": {
                                    "Environment": "dev",
                                    "Name": "complete-postgresql-public-eu-west-1b",
                                    "Owner": "user"
                                },
                                "timeouts": null
                            },
                            "sensitive_values": {
                                "tags": {},
                                "tags_all": {}
                            }
                        },
                        {
                            "address": "module.vpc.aws_subnet.public[2]",
                            "mode": "managed",
                            "type": "aws_subnet",
                            "name": "public",
                            "index": 2,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 1,
                            "values": {
                                "assign_ipv6_address_on_creation": false,
                                "availability_zone": "eu-west-1c",
                                "cidr_block": "10.99.2.0/24",
                                "customer_owned_ipv4_pool": null,
                                "enable_dns64": false,
                                "enable_resource_name_dns_a_record_on_launch": false,
                                "enable_resource_name_dns_aaaa_record_on_launch": false,
                                "ipv6_cidr_block": null,
                                "ipv6_native": false,
                                "map_customer_owned_ip_on_launch": null,
                                "map_public_ip_on_launch": true,
                                "outpost_arn": null,
                                "tags": {
                                    "Environment": "dev",
                                    "Name": "complete-postgresql-public-eu-west-1c",
                                    "Owner": "user"
                                },
                                "tags_all": {
                                    "Environment": "dev",
                                    "Name": "complete-postgresql-public-eu-west-1c",
                                    "Owner": "user"
                                },
                                "timeouts": null
                            },
                            "sensitive_values": {
                                "tags": {},
                                "tags_all": {}
                            }
                        },
                        {
                            "address": "module.vpc.aws_vpc.this[0]",
                            "mode": "managed",
                            "type": "aws_vpc",
                            "name": "this",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 1,
                            "values": {
                                "assign_generated_ipv6_cidr_block": false,
                                "cidr_block": "10.99.0.0/18",
                                "enable_dns_hostnames": false,
                                "enable_dns_support": true,
                                "instance_tenancy": "default",
                                "ipv4_ipam_pool_id": null,
                                "ipv4_netmask_length": null,
                                "ipv6_ipam_pool_id": null,
                                "ipv6_netmask_length": null,
                                "tags": {
                                    "Environment": "dev",
                                    "Name": "complete-postgresql",
                                    "Owner": "user"
                                },
                                "tags_all": {
                                    "Environment": "dev",
                                    "Name": "complete-postgresql",
                                    "Owner": "user"
                                }
                            },
                            "sensitive_values": {
                                "tags": {},
                                "tags_all": {}
                            }
                        }
                    ],
                    "address": "module.vpc"
                }
            ]
        }
    },
    "resource_changes": [
        {
            "address": "module.db.module.db_instance.aws_cloudwatch_log_group.this[\"postgresql\"]",
            "module_address": "module.db.module.db_instance",
            "mode": "managed",
            "type": "aws_cloudwatch_log_group",
            "name": "this",
            "index": "postgresql",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "kms_key_id": null,
                    "name": "/aws/rds/instance/complete-postgresql/postgresql",
                    "name_prefix": null,
                    "retention_in_days": 7,
                    "tags": {
                        "Environment": "dev",
                        "Owner": "user"
                    },
                    "tags_all": {
                        "Environment": "dev",
                        "Owner": "user"
                    }
                },
                "after_unknown": {
                    "arn": true,
                    "id": true,
                    "tags": {},
                    "tags_all": {}
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.db.module.db_instance.aws_cloudwatch_log_group.this[\"upgrade\"]",
            "module_address": "module.db.module.db_instance",
            "mode": "managed",
            "type": "aws_cloudwatch_log_group",
            "name": "this",
            "index": "upgrade",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "kms_key_id": null,
                    "name": "/aws/rds/instance/complete-postgresql/upgrade",
                    "name_prefix": null,
                    "retention_in_days": 7,
                    "tags": {
                        "Environment": "dev",
                        "Owner": "user"
                    },
                    "tags_all": {
                        "Environment": "dev",
                        "Owner": "user"
                    }
                },
                "after_unknown": {
                    "arn": true,
                    "id": true,
                    "tags": {},
                    "tags_all": {}
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.db.module.db_instance.aws_db_instance.this[0]",
            "module_address": "module.db.module.db_instance",
            "mode": "managed",
            "type": "aws_db_instance",
            "name": "this",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "allocated_storage": 20,
                    "allow_major_version_upgrade": false,
                    "apply_immediately": false,
                    "auto_minor_version_upgrade": true,
                    "backup_retention_period": 0,
                    "backup_window": "03:00-06:00",
                    "copy_tags_to_snapshot": false,
                    "customer_owned_ip_enabled": null,
                    "db_name": "completePostgresql",
                    "delete_automated_backups": true,
                    "deletion_protection": false,
                    "domain": null,
                    "domain_iam_role_name": null,
                    "enabled_cloudwatch_logs_exports": [
                        "postgresql",
                        "upgrade"
                    ],
                    "engine": "postgres",
                    "engine_version": "14.1",
                    "final_snapshot_identifier": null,
                    "iam_database_authentication_enabled": false,
                    "identifier": "complete-postgresql",
                    "instance_class": "db.t4g.large",
                    "iops": 0,
                    "maintenance_window": "mon:00:00-mon:03:00",
                    "max_allocated_storage": 100,
                    "monitoring_interval": 60,
                    "multi_az": true,
                    "performance_insights_enabled": true,
                    "performance_insights_retention_period": 7,
                    "port": 5432,
                    "publicly_accessible": false,
                    "replicate_source_db": null,
                    "restore_to_point_in_time": [],
                    "s3_import": [],
                    "security_group_names": null,
                    "skip_final_snapshot": true,
                    "storage_encrypted": true,
                    "tags": {
                        "Environment": "dev",
                        "Owner": "user"
                    },
                    "tags_all": {
                        "Environment": "dev",
                        "Owner": "user"
                    },
                    "timeouts": {
                        "create": null,
                        "delete": null,
                        "update": null
                    },
                    "username": "complete_postgresql"
                },
                "after_unknown": {
                    "address": true,
                    "arn": true,
                    "availability_zone": true,
                    "ca_cert_identifier": true,
                    "character_set_name": true,
                    "db_subnet_group_name": true,
                    "enabled_cloudwatch_logs_exports": [
                        false,
                        false
                    ],
                    "endpoint": true,
                    "engine_version_actual": true,
                    "hosted_zone_id": true,
                    "id": true,
                    "identifier_prefix": true,
                    "kms_key_id": true,
                    "latest_restorable_time": true,
                    "license_model": true,
                    "monitoring_role_arn": true,
                    "name": true,
                    "nchar_character_set_name": true,
                    "option_group_name": true,
                    "parameter_group_name": true,
                    "password": true,
                    "performance_insights_kms_key_id": true,
                    "replica_mode": true,
                    "replicas": true,
                    "resource_id": true,
                    "restore_to_point_in_time": [],
                    "s3_import": [],
                    "snapshot_identifier": true,
                    "status": true,
                    "storage_type": true,
                    "tags": {},
                    "tags_all": {},
                    "timeouts": {},
                    "timezone": true,
                    "vpc_security_group_ids": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "enabled_cloudwatch_logs_exports": [
                        false,
                        false
                    ],
                    "password": true,
                    "replicas": [],
                    "restore_to_point_in_time": [],
                    "s3_import": [],
                    "tags": {},
                    "tags_all": {},
                    "timeouts": {},
                    "vpc_security_group_ids": []
                }
            }
        },
        {
            "address": "module.db.module.db_instance.aws_iam_role.enhanced_monitoring[0]",
            "module_address": "module.db.module.db_instance",
            "mode": "managed",
            "type": "aws_iam_role",
            "name": "enhanced_monitoring",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "assume_role_policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"monitoring.rds.amazonaws.com\"\n      }\n    }\n  ]\n}",
                    "description": "Description for monitoring role",
                    "force_detach_policies": false,
                    "max_session_duration": 3600,
                    "name": "example-monitoring-role-name",
                    "path": "/",
                    "permissions_boundary": null,
                    "tags": {
                        "Environment": "dev",
                        "Name": "example-monitoring-role-name",
                        "Owner": "user"
                    },
                    "tags_all": {
                        "Environment": "dev",
                        "Name": "example-monitoring-role-name",
                        "Owner": "user"
                    }
                },
                "after_unknown": {
                    "arn": true,
                    "create_date": true,
                    "id": true,
                    "inline_policy": true,
                    "managed_policy_arns": true,
                    "name_prefix": true,
                    "tags": {},
                    "tags_all": {},
                    "unique_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "inline_policy": [],
                    "managed_policy_arns": [],
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.db.module.db_instance.aws_iam_role_policy_attachment.enhanced_monitoring[0]",
            "module_address": "module.db.module.db_instance",
            "mode": "managed",
            "type": "aws_iam_role_policy_attachment",
            "name": "enhanced_monitoring",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "policy_arn": "arn:aws:iam::aws:policy/service-role/AmazonRDSEnhancedMonitoringRole",
                    "role": "example-monitoring-role-name"
                },
                "after_unknown": {
                    "id": true
                },
                "before_sensitive": false,
                "after_sensitive": {}
            }
        },
        {
            "address": "module.db.module.db_parameter_group.aws_db_parameter_group.this[0]",
            "module_address": "module.db.module.db_parameter_group",
            "mode": "managed",
            "type": "aws_db_parameter_group",
            "name": "this",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "description": "complete-postgresql parameter group",
                    "family": "postgres14",
                    "name_prefix": "complete-postgresql-",
                    "parameter": [
                        {
                            "apply_method": "immediate",
                            "name": "autovacuum",
                            "value": "1"
                        },
                        {
                            "apply_method": "immediate",
                            "name": "client_encoding",
                            "value": "utf8"
                        }
                    ],
                    "tags": {
                        "Environment": "dev",
                        "Name": "complete-postgresql",
                        "Owner": "user",
                        "Sensitive": "low"
                    },
                    "tags_all": {
                        "Environment": "dev",
                        "Name": "complete-postgresql",
                        "Owner": "user",
                        "Sensitive": "low"
                    }
                },
                "after_unknown": {
                    "arn": true,
                    "id": true,
                    "name": true,
                    "parameter": [
                        {},
                        {}
                    ],
                    "tags": {},
                    "tags_all": {}
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "parameter": [
                        {},
                        {}
                    ],
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.db.random_password.master_password[0]",
            "module_address": "module.db",
            "mode": "managed",
            "type": "random_password",
            "name": "master_password",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/random",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "keepers": null,
                    "length": 16,
                    "lower": true,
                    "min_lower": 0,
                    "min_numeric": 0,
                    "min_special": 0,
                    "min_upper": 0,
                    "number": true,
                    "override_special": null,
                    "special": false,
                    "upper": true
                },
                "after_unknown": {
                    "bcrypt_hash": true,
                    "id": true,
                    "result": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "bcrypt_hash": true,
                    "result": true
                }
            }
        },
        {
            "address": "module.db_default.module.db_instance.aws_db_instance.this[0]",
            "module_address": "module.db_default.module.db_instance",
            "mode": "managed",
            "type": "aws_db_instance",
            "name": "this",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "allocated_storage": 20,
                    "allow_major_version_upgrade": false,
                    "apply_immediately": false,
                    "auto_minor_version_upgrade": true,
                    "backup_retention_period": 0,
                    "backup_window": "03:00-06:00",
                    "copy_tags_to_snapshot": false,
                    "customer_owned_ip_enabled": null,
                    "db_name": "completePostgresql",
                    "delete_automated_backups": true,
                    "deletion_protection": false,
                    "domain": null,
                    "domain_iam_role_name": null,
                    "enabled_cloudwatch_logs_exports": null,
                    "engine": "postgres",
                    "engine_version": "14.1",
                    "iam_database_authentication_enabled": false,
                    "identifier": "complete-postgresql-default",
                    "instance_class": "db.t4g.large",
                    "iops": 0,
                    "maintenance_window": "mon:00:00-mon:03:00",
                    "max_allocated_storage": 0,
                    "monitoring_interval": 0,
                    "multi_az": false,
                    "performance_insights_enabled": false,
                    "port": 5432,
                    "publicly_accessible": false,
                    "replicate_source_db": null,
                    "restore_to_point_in_time": [],
                    "s3_import": [],
                    "security_group_names": null,
                    "skip_final_snapshot": false,
                    "storage_encrypted": true,
                    "tags": {
                        "Environment": "dev",
                        "Owner": "user"
                    },
                    "tags_all": {
                        "Environment": "dev",
                        "Owner": "user"
                    },
                    "timeouts": {
                        "create": null,
                        "delete": null,
                        "update": null
                    },
                    "username": "complete_postgresql"
                },
                "after_unknown": {
                    "address": true,
                    "arn": true,
                    "availability_zone": true,
                    "ca_cert_identifier": true,
                    "character_set_name": true,
                    "db_subnet_group_name": true,
                    "endpoint": true,
                    "engine_version_actual": true,
                    "final_snapshot_identifier": true,
                    "hosted_zone_id": true,
                    "id": true,
                    "identifier_prefix": true,
                    "kms_key_id": true,
                    "latest_restorable_time": true,
                    "license_model": true,
                    "monitoring_role_arn": true,
                    "name": true,
                    "nchar_character_set_name": true,
                    "option_group_name": true,
                    "parameter_group_name": true,
                    "password": true,
                    "performance_insights_kms_key_id": true,
                    "performance_insights_retention_period": true,
                    "replica_mode": true,
                    "replicas": true,
                    "resource_id": true,
                    "restore_to_point_in_time": [],
                    "s3_import": [],
                    "snapshot_identifier": true,
                    "status": true,
                    "storage_type": true,
                    "tags": {},
                    "tags_all": {},
                    "timeouts": {},
                    "timezone": true,
                    "vpc_security_group_ids": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "password": true,
                    "replicas": [],
                    "restore_to_point_in_time": [],
                    "s3_import": [],
                    "tags": {},
                    "tags_all": {},
                    "timeouts": {},
                    "vpc_security_group_ids": []
                }
            }
        },
        {
            "address": "module.db_default.module.db_instance.random_id.snapshot_identifier[0]",
            "module_address": "module.db_default.module.db_instance",
            "mode": "managed",
            "type": "random_id",
            "name": "snapshot_identifier",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/random",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "byte_length": 4,
                    "keepers": {
                        "id": "complete-postgresql-default"
                    },
                    "prefix": null
                },
                "after_unknown": {
                    "b64_std": true,
                    "b64_url": true,
                    "dec": true,
                    "hex": true,
                    "id": true,
                    "keepers": {}
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "keepers": {}
                }
            }
        },
        {
            "address": "module.db_default.random_password.master_password[0]",
            "module_address": "module.db_default",
            "mode": "managed",
            "type": "random_password",
            "name": "master_password",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/random",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "keepers": null,
                    "length": 16,
                    "lower": true,
                    "min_lower": 0,
                    "min_numeric": 0,
                    "min_special": 0,
                    "min_upper": 0,
                    "number": true,
                    "override_special": null,
                    "special": false,
                    "upper": true
                },
                "after_unknown": {
                    "bcrypt_hash": true,
                    "id": true,
                    "result": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "bcrypt_hash": true,
                    "result": true
                }
            }
        },
        {
            "address": "module.security_group.aws_security_group.this_name_prefix[0]",
            "module_address": "module.security_group",
            "mode": "managed",
            "type": "aws_security_group",
            "name": "this_name_prefix",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "description": "Complete PostgreSQL example security group",
                    "name_prefix": "complete-postgresql-",
                    "revoke_rules_on_delete": false,
                    "tags": {
                        "Environment": "dev",
                        "Name": "complete-postgresql",
                        "Owner": "user"
                    },
                    "tags_all": {
                        "Environment": "dev",
                        "Name": "complete-postgresql",
                        "Owner": "user"
                    },
                    "timeouts": {
                        "create": "10m",
                        "delete": "15m"
                    }
                },
                "after_unknown": {
                    "arn": true,
                    "egress": true,
                    "id": true,
                    "ingress": true,
                    "name": true,
                    "owner_id": true,
                    "tags": {},
                    "tags_all": {},
                    "timeouts": {},
                    "vpc_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "egress": [],
                    "ingress": [],
                    "tags": {},
                    "tags_all": {},
                    "timeouts": {}
                }
            }
        },
        {
            "address": "module.security_group.aws_security_group_rule.ingress_with_cidr_blocks[0]",
            "module_address": "module.security_group",
            "mode": "managed",
            "type": "aws_security_group_rule",
            "name": "ingress_with_cidr_blocks",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "cidr_blocks": [
                        "10.99.0.0/18"
                    ],
                    "description": "PostgreSQL access from within VPC",
                    "from_port": 5432,
                    "ipv6_cidr_blocks": null,
                    "prefix_list_ids": [],
                    "protocol": "tcp",
                    "self": false,
                    "to_port": 5432,
                    "type": "ingress"
                },
                "after_unknown": {
                    "cidr_blocks": [
                        false
                    ],
                    "id": true,
                    "prefix_list_ids": [],
                    "security_group_id": true,
                    "source_security_group_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "cidr_blocks": [
                        false
                    ],
                    "prefix_list_ids": []
                }
            }
        },
        {
            "address": "module.vpc.aws_db_subnet_group.database[0]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_db_subnet_group",
            "name": "database",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "description": "Database subnet group for complete-postgresql",
                    "name": "complete-postgresql",
                    "tags": {
                        "Environment": "dev",
                        "Name": "complete-postgresql",
                        "Owner": "user"
                    },
                    "tags_all": {
                        "Environment": "dev",
                        "Name": "complete-postgresql",
                        "Owner": "user"
                    }
                },
                "after_unknown": {
                    "arn": true,
                    "id": true,
                    "name_prefix": true,
                    "subnet_ids": true,
                    "tags": {},
                    "tags_all": {}
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "subnet_ids": [],
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.vpc.aws_internet_gateway.this[0]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_internet_gateway",
            "name": "this",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "tags": {
                        "Environment": "dev",
                        "Name": "complete-postgresql",
                        "Owner": "user"
                    },
                    "tags_all": {
                        "Environment": "dev",
                        "Name": "complete-postgresql",
                        "Owner": "user"
                    }
                },
                "after_unknown": {
                    "arn": true,
                    "id": true,
                    "owner_id": true,
                    "tags": {},
                    "tags_all": {},
                    "vpc_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.vpc.aws_route.public_internet_gateway[0]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_route",
            "name": "public_internet_gateway",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "carrier_gateway_id": null,
                    "core_network_arn": null,
                    "destination_cidr_block": "0.0.0.0/0",
                    "destination_ipv6_cidr_block": null,
                    "destination_prefix_list_id": null,
                    "egress_only_gateway_id": null,
                    "local_gateway_id": null,
                    "nat_gateway_id": null,
                    "timeouts": {
                        "create": "5m",
                        "delete": null,
                        "update": null
                    },
                    "transit_gateway_id": null,
                    "vpc_endpoint_id": null,
                    "vpc_peering_connection_id": null
                },
                "after_unknown": {
                    "gateway_id": true,
                    "id": true,
                    "instance_id": true,
                    "instance_owner_id": true,
                    "network_interface_id": true,
                    "origin": true,
                    "route_table_id": true,
                    "state": true,
                    "timeouts": {}
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "timeouts": {}
                }
            }
        },
        {
            "address": "module.vpc.aws_route_table.database[0]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_route_table",
            "name": "database",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "tags": {
                        "Environment": "dev",
                        "Name": "complete-postgresql-db-eu-west-1a",
                        "Owner": "user"
                    },
                    "tags_all": {
                        "Environment": "dev",
                        "Name": "complete-postgresql-db-eu-west-1a",
                        "Owner": "user"
                    },
                    "timeouts": null
                },
                "after_unknown": {
                    "arn": true,
                    "id": true,
                    "owner_id": true,
                    "propagating_vgws": true,
                    "route": true,
                    "tags": {},
                    "tags_all": {},
                    "vpc_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "propagating_vgws": [],
                    "route": [],
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.vpc.aws_route_table.database[1]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_route_table",
            "name": "database",
            "index": 1,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "tags": {
                        "Environment": "dev",
                        "Name": "complete-postgresql-db-eu-west-1b",
                        "Owner": "user"
                    },
                    "tags_all": {
                        "Environment": "dev",
                        "Name": "complete-postgresql-db-eu-west-1b",
                        "Owner": "user"
                    },
                    "timeouts": null
                },
                "after_unknown": {
                    "arn": true,
                    "id": true,
                    "owner_id": true,
                    "propagating_vgws": true,
                    "route": true,
                    "tags": {},
                    "tags_all": {},
                    "vpc_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "propagating_vgws": [],
                    "route": [],
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.vpc.aws_route_table.database[2]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_route_table",
            "name": "database",
            "index": 2,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "tags": {
                        "Environment": "dev",
                        "Name": "complete-postgresql-db-eu-west-1c",
                        "Owner": "user"
                    },
                    "tags_all": {
                        "Environment": "dev",
                        "Name": "complete-postgresql-db-eu-west-1c",
                        "Owner": "user"
                    },
                    "timeouts": null
                },
                "after_unknown": {
                    "arn": true,
                    "id": true,
                    "owner_id": true,
                    "propagating_vgws": true,
                    "route": true,
                    "tags": {},
                    "tags_all": {},
                    "vpc_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "propagating_vgws": [],
                    "route": [],
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.vpc.aws_route_table.private[0]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_route_table",
            "name": "private",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "tags": {
                        "Environment": "dev",
                        "Name": "complete-postgresql-private-eu-west-1a",
                        "Owner": "user"
                    },
                    "tags_all": {
                        "Environment": "dev",
                        "Name": "complete-postgresql-private-eu-west-1a",
                        "Owner": "user"
                    },
                    "timeouts": null
                },
                "after_unknown": {
                    "arn": true,
                    "id": true,
                    "owner_id": true,
                    "propagating_vgws": true,
                    "route": true,
                    "tags": {},
                    "tags_all": {},
                    "vpc_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "propagating_vgws": [],
                    "route": [],
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.vpc.aws_route_table.private[1]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_route_table",
            "name": "private",
            "index": 1,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "tags": {
                        "Environment": "dev",
                        "Name": "complete-postgresql-private-eu-west-1b",
                        "Owner": "user"
                    },
                    "tags_all": {
                        "Environment": "dev",
                        "Name": "complete-postgresql-private-eu-west-1b",
                        "Owner": "user"
                    },
                    "timeouts": null
                },
                "after_unknown": {
                    "arn": true,
                    "id": true,
                    "owner_id": true,
                    "propagating_vgws": true,
                    "route": true,
                    "tags": {},
                    "tags_all": {},
                    "vpc_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "propagating_vgws": [],
                    "route": [],
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.vpc.aws_route_table.private[2]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_route_table",
            "name": "private",
            "index": 2,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "tags": {
                        "Environment": "dev",
                        "Name": "complete-postgresql-private-eu-west-1c",
                        "Owner": "user"
                    },
                    "tags_all": {
                        "Environment": "dev",
                        "Name": "complete-postgresql-private-eu-west-1c",
                        "Owner": "user"
                    },
                    "timeouts": null
                },
                "after_unknown": {
                    "arn": true,
                    "id": true,
                    "owner_id": true,
                    "propagating_vgws": true,
                    "route": true,
                    "tags": {},
                    "tags_all": {},
                    "vpc_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "propagating_vgws": [],
                    "route": [],
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.vpc.aws_route_table.public[0]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_route_table",
            "name": "public",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "tags": {
                        "Environment": "dev",
                        "Name": "complete-postgresql-public",
                        "Owner": "user"
                    },
                    "tags_all": {
                        "Environment": "dev",
                        "Name": "complete-postgresql-public",
                        "Owner": "user"
                    },
                    "timeouts": null
                },
                "after_unknown": {
                    "arn": true,
                    "id": true,
                    "owner_id": true,
                    "propagating_vgws": true,
                    "route": true,
                    "tags": {},
                    "tags_all": {},
                    "vpc_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "propagating_vgws": [],
                    "route": [],
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.vpc.aws_route_table_association.database[0]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_route_table_association",
            "name": "database",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "gateway_id": null
                },
                "after_unknown": {
                    "id": true,
                    "route_table_id": true,
                    "subnet_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {}
            }
        },
        {
            "address": "module.vpc.aws_route_table_association.database[1]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_route_table_association",
            "name": "database",
            "index": 1,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "gateway_id": null
                },
                "after_unknown": {
                    "id": true,
                    "route_table_id": true,
                    "subnet_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {}
            }
        },
        {
            "address": "module.vpc.aws_route_table_association.database[2]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_route_table_association",
            "name": "database",
            "index": 2,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "gateway_id": null
                },
                "after_unknown": {
                    "id": true,
                    "route_table_id": true,
                    "subnet_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {}
            }
        },
        {
            "address": "module.vpc.aws_route_table_association.private[0]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_route_table_association",
            "name": "private",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "gateway_id": null
                },
                "after_unknown": {
                    "id": true,
                    "route_table_id": true,
                    "subnet_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {}
            }
        },
        {
            "address": "module.vpc.aws_route_table_association.private[1]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_route_table_association",
            "name": "private",
            "index": 1,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "gateway_id": null
                },
                "after_unknown": {
                    "id": true,
                    "route_table_id": true,
                    "subnet_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {}
            }
        },
        {
            "address": "module.vpc.aws_route_table_association.private[2]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_route_table_association",
            "name": "private",
            "index": 2,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "gateway_id": null
                },
                "after_unknown": {
                    "id": true,
                    "route_table_id": true,
                    "subnet_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {}
            }
        },
        {
            "address": "module.vpc.aws_route_table_association.public[0]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_route_table_association",
            "name": "public",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "gateway_id": null
                },
                "after_unknown": {
                    "id": true,
                    "route_table_id": true,
                    "subnet_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {}
            }
        },
        {
            "address": "module.vpc.aws_route_table_association.public[1]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_route_table_association",
            "name": "public",
            "index": 1,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "gateway_id": null
                },
                "after_unknown": {
                    "id": true,
                    "route_table_id": true,
                    "subnet_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {}
            }
        },
        {
            "address": "module.vpc.aws_route_table_association.public[2]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_route_table_association",
            "name": "public",
            "index": 2,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "gateway_id": null
                },
                "after_unknown": {
                    "id": true,
                    "route_table_id": true,
                    "subnet_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {}
            }
        },
        {
            "address": "module.vpc.aws_subnet.database[0]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_subnet",
            "name": "database",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "assign_ipv6_address_on_creation": false,
                    "availability_zone": "eu-west-1a",
                    "cidr_block": "10.99.7.0/24",
                    "customer_owned_ipv4_pool": null,
                    "enable_dns64": false,
                    "enable_resource_name_dns_a_record_on_launch": false,
                    "enable_resource_name_dns_aaaa_record_on_launch": false,
                    "ipv6_cidr_block": null,
                    "ipv6_native": false,
                    "map_customer_owned_ip_on_launch": null,
                    "map_public_ip_on_launch": false,
                    "outpost_arn": null,
                    "tags": {
                        "Environment": "dev",
                        "Name": "complete-postgresql-db-eu-west-1a",
                        "Owner": "user"
                    },
                    "tags_all": {
                        "Environment": "dev",
                        "Name": "complete-postgresql-db-eu-west-1a",
                        "Owner": "user"
                    },
                    "timeouts": null
                },
                "after_unknown": {
                    "arn": true,
                    "availability_zone_id": true,
                    "id": true,
                    "ipv6_cidr_block_association_id": true,
                    "owner_id": true,
                    "private_dns_hostname_type_on_launch": true,
                    "tags": {},
                    "tags_all": {},
                    "vpc_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.vpc.aws_subnet.database[1]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_subnet",
            "name": "database",
            "index": 1,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "assign_ipv6_address_on_creation": false,
                    "availability_zone": "eu-west-1b",
                    "cidr_block": "10.99.8.0/24",
                    "customer_owned_ipv4_pool": null,
                    "enable_dns64": false,
                    "enable_resource_name_dns_a_record_on_launch": false,
                    "enable_resource_name_dns_aaaa_record_on_launch": false,
                    "ipv6_cidr_block": null,
                    "ipv6_native": false,
                    "map_customer_owned_ip_on_launch": null,
                    "map_public_ip_on_launch": false,
                    "outpost_arn": null,
                    "tags": {
                        "Environment": "dev",
                        "Name": "complete-postgresql-db-eu-west-1b",
                        "Owner": "user"
                    },
                    "tags_all": {
                        "Environment": "dev",
                        "Name": "complete-postgresql-db-eu-west-1b",
                        "Owner": "user"
                    },
                    "timeouts": null
                },
                "after_unknown": {
                    "arn": true,
                    "availability_zone_id": true,
                    "id": true,
                    "ipv6_cidr_block_association_id": true,
                    "owner_id": true,
                    "private_dns_hostname_type_on_launch": true,
                    "tags": {},
                    "tags_all": {},
                    "vpc_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.vpc.aws_subnet.database[2]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_subnet",
            "name": "database",
            "index": 2,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "assign_ipv6_address_on_creation": false,
                    "availability_zone": "eu-west-1c",
                    "cidr_block": "10.99.9.0/24",
                    "customer_owned_ipv4_pool": null,
                    "enable_dns64": false,
                    "enable_resource_name_dns_a_record_on_launch": false,
                    "enable_resource_name_dns_aaaa_record_on_launch": false,
                    "ipv6_cidr_block": null,
                    "ipv6_native": false,
                    "map_customer_owned_ip_on_launch": null,
                    "map_public_ip_on_launch": false,
                    "outpost_arn": null,
                    "tags": {
                        "Environment": "dev",
                        "Name": "complete-postgresql-db-eu-west-1c",
                        "Owner": "user"
                    },
                    "tags_all": {
                        "Environment": "dev",
                        "Name": "complete-postgresql-db-eu-west-1c",
                        "Owner": "user"
                    },
                    "timeouts": null
                },
                "after_unknown": {
                    "arn": true,
                    "availability_zone_id": true,
                    "id": true,
                    "ipv6_cidr_block_association_id": true,
                    "owner_id": true,
                    "private_dns_hostname_type_on_launch": true,
                    "tags": {},
                    "tags_all": {},
                    "vpc_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.vpc.aws_subnet.private[0]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_subnet",
            "name": "private",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "assign_ipv6_address_on_creation": false,
                    "availability_zone": "eu-west-1a",
                    "cidr_block": "10.99.3.0/24",
                    "customer_owned_ipv4_pool": null,
                    "enable_dns64": false,
                    "enable_resource_name_dns_a_record_on_launch": false,
                    "enable_resource_name_dns_aaaa_record_on_launch": false,
                    "ipv6_cidr_block": null,
                    "ipv6_native": false,
                    "map_customer_owned_ip_on_launch": null,
                    "map_public_ip_on_launch": false,
                    "outpost_arn": null,
                    "tags": {
                        "Environment": "dev",
                        "Name": "complete-postgresql-private-eu-west-1a",
                        "Owner": "user"
                    },
                    "tags_all": {
                        "Environment": "dev",
                        "Name": "complete-postgresql-private-eu-west-1a",
                        "Owner": "user"
                    },
                    "timeouts": null
                },
                "after_unknown": {
                    "arn": true,
                    "availability_zone_id": true,
                    "id": true,
                    "ipv6_cidr_block_association_id": true,
                    "owner_id": true,
                    "private_dns_hostname_type_on_launch": true,
                    "tags": {},
                    "tags_all": {},
                    "vpc_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.vpc.aws_subnet.private[1]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_subnet",
            "name": "private",
            "index": 1,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "assign_ipv6_address_on_creation": false,
                    "availability_zone": "eu-west-1b",
                    "cidr_block": "10.99.4.0/24",
                    "customer_owned_ipv4_pool": null,
                    "enable_dns64": false,
                    "enable_resource_name_dns_a_record_on_launch": false,
                    "enable_resource_name_dns_aaaa_record_on_launch": false,
                    "ipv6_cidr_block": null,
                    "ipv6_native": false,
                    "map_customer_owned_ip_on_launch": null,
                    "map_public_ip_on_launch": false,
                    "outpost_arn": null,
                    "tags": {
                        "Environment": "dev",
                        "Name": "complete-postgresql-private-eu-west-1b",
                        "Owner": "user"
                    },
                    "tags_all": {
                        "Environment": "dev",
                        "Name": "complete-postgresql-private-eu-west-1b",
                        "Owner": "user"
                    },
                    "timeouts": null
                },
                "after_unknown": {
                    "arn": true,
                    "availability_zone_id": true,
                    "id": true,
                    "ipv6_cidr_block_association_id": true,
                    "owner_id": true,
                    "private_dns_hostname_type_on_launch": true,
                    "tags": {},
                    "tags_all": {},
                    "vpc_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.vpc.aws_subnet.private[2]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_subnet",
            "name": "private",
            "index": 2,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "assign_ipv6_address_on_creation": false,
                    "availability_zone": "eu-west-1c",
                    "cidr_block": "10.99.5.0/24",
                    "customer_owned_ipv4_pool": null,
                    "enable_dns64": false,
                    "enable_resource_name_dns_a_record_on_launch": false,
                    "enable_resource_name_dns_aaaa_record_on_launch": false,
                    "ipv6_cidr_block": null,
                    "ipv6_native": false,
                    "map_customer_owned_ip_on_launch": null,
                    "map_public_ip_on_launch": false,
                    "outpost_arn": null,
                    "tags": {
                        "Environment": "dev",
                        "Name": "complete-postgresql-private-eu-west-1c",
                        "Owner": "user"
                    },
                    "tags_all": {
                        "Environment": "dev",
                        "Name": "complete-postgresql-private-eu-west-1c",
                        "Owner": "user"
                    },
                    "timeouts": null
                },
                "after_unknown": {
                    "arn": true,
                    "availability_zone_id": true,
                    "id": true,
                    "ipv6_cidr_block_association_id": true,
                    "owner_id": true,
                    "private_dns_hostname_type_on_launch": true,
                    "tags": {},
                    "tags_all": {},
                    "vpc_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.vpc.aws_subnet.public[0]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_subnet",
            "name": "public",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "assign_ipv6_address_on_creation": false,
                    "availability_zone": "eu-west-1a",
                    "cidr_block": "10.99.0.0/24",
                    "customer_owned_ipv4_pool": null,
                    "enable_dns64": false,
                    "enable_resource_name_dns_a_record_on_launch": false,
                    "enable_resource_name_dns_aaaa_record_on_launch": false,
                    "ipv6_cidr_block": null,
                    "ipv6_native": false,
                    "map_customer_owned_ip_on_launch": null,
                    "map_public_ip_on_launch": true,
                    "outpost_arn": null,
                    "tags": {
                        "Environment": "dev",
                        "Name": "complete-postgresql-public-eu-west-1a",
                        "Owner": "user"
                    },
                    "tags_all": {
                        "Environment": "dev",
                        "Name": "complete-postgresql-public-eu-west-1a",
                        "Owner": "user"
                    },
                    "timeouts": null
                },
                "after_unknown": {
                    "arn": true,
                    "availability_zone_id": true,
                    "id": true,
                    "ipv6_cidr_block_association_id": true,
                    "owner_id": true,
                    "private_dns_hostname_type_on_launch": true,
                    "tags": {},
                    "tags_all": {},
                    "vpc_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.vpc.aws_subnet.public[1]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_subnet",
            "name": "public",
            "index": 1,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "assign_ipv6_address_on_creation": false,
                    "availability_zone": "eu-west-1b",
                    "cidr_block": "10.99.1.0/24",
                    "customer_owned_ipv4_pool": null,
                    "enable_dns64": false,
                    "enable_resource_name_dns_a_record_on_launch": false,
                    "enable_resource_name_dns_aaaa_record_on_launch": false,
                    "ipv6_cidr_block": null,
                    "ipv6_native": false,
                    "map_customer_owned_ip_on_launch": null,
                    "map_public_ip_on_launch": true,
                    "outpost_arn": null,
                    "tags": {
                        "Environment": "dev",
                        "Name": "complete-postgresql-public-eu-west-1b",
                        "Owner": "user"
                    },
                    "tags_all": {
                        "Environment": "dev",
                        "Name": "complete-postgresql-public-eu-west-1b",
                        "Owner": "user"
                    },
                    "timeouts": null
                },
                "after_unknown": {
                    "arn": true,
                    "availability_zone_id": true,
                    "id": true,
                    "ipv6_cidr_block_association_id": true,
                    "owner_id": true,
                    "private_dns_hostname_type_on_launch": true,
                    "tags": {},
                    "tags_all": {},
                    "vpc_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.vpc.aws_subnet.public[2]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_subnet",
            "name": "public",
            "index": 2,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "assign_ipv6_address_on_creation": false,
                    "availability_zone": "eu-west-1c",
                    "cidr_block": "10.99.2.0/24",
                    "customer_owned_ipv4_pool": null,
                    "enable_dns64": false,
                    "enable_resource_name_dns_a_record_on_launch": false,
                    "enable_resource_name_dns_aaaa_record_on_launch": false,
                    "ipv6_cidr_block": null,
                    "ipv6_native": false,
                    "map_customer_owned_ip_on_launch": null,
                    "map_public_ip_on_launch": true,
                    "outpost_arn": null,
                    "tags": {
                        "Environment": "dev",
                        "Name": "complete-postgresql-public-eu-west-1c",
                        "Owner": "user"
                    },
                    "tags_all": {
                        "Environment": "dev",
                        "Name": "complete-postgresql-public-eu-west-1c",
                        "Owner": "user"
                    },
                    "timeouts": null
                },
                "after_unknown": {
                    "arn": true,
                    "availability_zone_id": true,
                    "id": true,
                    "ipv6_cidr_block_association_id": true,
                    "owner_id": true,
                    "private_dns_hostname_type_on_launch": true,
                    "tags": {},
                    "tags_all": {},
                    "vpc_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.vpc.aws_vpc.this[0]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_vpc",
            "name": "this",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "assign_generated_ipv6_cidr_block": false,
                    "cidr_block": "10.99.0.0/18",
                    "enable_dns_hostnames": false,
                    "enable_dns_support": true,
                    "instance_tenancy": "default",
                    "ipv4_ipam_pool_id": null,
                    "ipv4_netmask_length": null,
                    "ipv6_ipam_pool_id": null,
                    "ipv6_netmask_length": null,
                    "tags": {
                        "Environment": "dev",
                        "Name": "complete-postgresql",
                        "Owner": "user"
                    },
                    "tags_all": {
                        "Environment": "dev",
                        "Name": "complete-postgresql",
                        "Owner": "user"
                    }
                },
                "after_unknown": {
                    "arn": true,
                    "default_network_acl_id": true,
                    "default_route_table_id": true,
                    "default_security_group_id": true,
                    "dhcp_options_id": true,
                    "enable_classiclink": true,
                    "enable_classiclink_dns_support": true,
                    "id": true,
                    "ipv6_association_id": true,
                    "ipv6_cidr_block": true,
                    "ipv6_cidr_block_network_border_group": true,
                    "main_route_table_id": true,
                    "owner_id": true,
                    "tags": {},
                    "tags_all": {}
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "tags": {},
                    "tags_all": {}
                }
            }
        }
    ],
    "prior_state": {
        "format_version": "1.0",
        "terraform_version": "1.2.1",
        "values": {
            "root_module": {
                "child_modules": [
                    {
                        "address": "module.db",
                        "child_modules": [
                            {
                                "resources": [
                                    {
                                        "address": "module.db.module.db_instance.data.aws_iam_policy_document.enhanced_monitoring",
                                        "mode": "data",
                                        "type": "aws_iam_policy_document",
                                        "name": "enhanced_monitoring",
                                        "provider_name": "registry.terraform.io/hashicorp/aws",
                                        "schema_version": 0,
                                        "values": {
                                            "id": "1813475199",
                                            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"monitoring.rds.amazonaws.com\"\n      }\n    }\n  ]\n}",
                                            "override_json": null,
                                            "override_policy_documents": null,
                                            "policy_id": null,
                                            "source_json": null,
                                            "source_policy_documents": null,
                                            "statement": [
                                                {
                                                    "actions": [
                                                        "sts:AssumeRole"
                                                    ],
                                                    "condition": [],
                                                    "effect": "Allow",
                                                    "not_actions": [],
                                                    "not_principals": [],
                                                    "not_resources": [],
                                                    "principals": [
                                                        {
                                                            "identifiers": [
                                                                "monitoring.rds.amazonaws.com"
                                                            ],
                                                            "type": "Service"
                                                        }
                                                    ],
                                                    "resources": [],
                                                    "sid": ""
                                                }
                                            ],
                                            "version": "2012-10-17"
                                        },
                                        "sensitive_values": {
                                            "statement": [
                                                {
                                                    "actions": [
                                                        false
                                                    ],
                                                    "condition": [],
                                                    "not_actions": [],
                                                    "not_principals": [],
                                                    "not_resources": [],
                                                    "principals": [
                                                        {
                                                            "identifiers": [
                                                                false
                                                            ]
                                                        }
                                                    ],
                                                    "resources": []
                                                }
                                            ]
                                        }
                                    },
                                    {
                                        "address": "module.db.module.db_instance.data.aws_partition.current",
                                        "mode": "data",
                                        "type": "aws_partition",
                                        "name": "current",
                                        "provider_name": "registry.terraform.io/hashicorp/aws",
                                        "schema_version": 0,
                                        "values": {
                                            "dns_suffix": "amazonaws.com",
                                            "id": "aws",
                                            "partition": "aws",
                                            "reverse_dns_prefix": "com.amazonaws"
                                        },
                                        "sensitive_values": {}
                                    }
                                ],
                                "address": "module.db.module.db_instance"
                            }
                        ]
                    },
                    {
                        "address": "module.db_default",
                        "child_modules": [
                            {
                                "resources": [
                                    {
                                        "address": "module.db_default.module.db_instance.data.aws_iam_policy_document.enhanced_monitoring",
                                        "mode": "data",
                                        "type": "aws_iam_policy_document",
                                        "name": "enhanced_monitoring",
                                        "provider_name": "registry.terraform.io/hashicorp/aws",
                                        "schema_version": 0,
                                        "values": {
                                            "id": "1813475199",
                                            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"monitoring.rds.amazonaws.com\"\n      }\n    }\n  ]\n}",
                                            "override_json": null,
                                            "override_policy_documents": null,
                                            "policy_id": null,
                                            "source_json": null,
                                            "source_policy_documents": null,
                                            "statement": [
                                                {
                                                    "actions": [
                                                        "sts:AssumeRole"
                                                    ],
                                                    "condition": [],
                                                    "effect": "Allow",
                                                    "not_actions": [],
                                                    "not_principals": [],
                                                    "not_resources": [],
                                                    "principals": [
                                                        {
                                                            "identifiers": [
                                                                "monitoring.rds.amazonaws.com"
                                                            ],
                                                            "type": "Service"
                                                        }
                                                    ],
                                                    "resources": [],
                                                    "sid": ""
                                                }
                                            ],
                                            "version": "2012-10-17"
                                        },
                                        "sensitive_values": {
                                            "statement": [
                                                {
                                                    "actions": [
                                                        false
                                                    ],
                                                    "condition": [],
                                                    "not_actions": [],
                                                    "not_principals": [],
                                                    "not_resources": [],
                                                    "principals": [
                                                        {
                                                            "identifiers": [
                                                                false
                                                            ]
                                                        }
                                                    ],
                                                    "resources": []
                                                }
                                            ]
                                        }
                                    },
                                    {
                                        "address": "module.db_default.module.db_instance.data.aws_partition.current",
                                        "mode": "data",
                                        "type": "aws_partition",
                                        "name": "current",
                                        "provider_name": "registry.terraform.io/hashicorp/aws",
                                        "schema_version": 0,
                                        "values": {
                                            "dns_suffix": "amazonaws.com",
                                            "id": "aws",
                                            "partition": "aws",
                                            "reverse_dns_prefix": "com.amazonaws"
                                        },
                                        "sensitive_values": {}
                                    }
                                ],
                                "address": "module.db_default.module.db_instance"
                            }
                        ]
                    },
                    {
                        "address": "module.db_disabled",
                        "child_modules": [
                            {
                                "resources": [
                                    {
                                        "address": "module.db_disabled.module.db_instance.data.aws_iam_policy_document.enhanced_monitoring",
                                        "mode": "data",
                                        "type": "aws_iam_policy_document",
                                        "name": "enhanced_monitoring",
                                        "provider_name": "registry.terraform.io/hashicorp/aws",
                                        "schema_version": 0,
                                        "values": {
                                            "id": "1813475199",
                                            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"monitoring.rds.amazonaws.com\"\n      }\n    }\n  ]\n}",
                                            "override_json": null,
                                            "override_policy_documents": null,
                                            "policy_id": null,
                                            "source_json": null,
                                            "source_policy_documents": null,
                                            "statement": [
                                                {
                                                    "actions": [
                                                        "sts:AssumeRole"
                                                    ],
                                                    "condition": [],
                                                    "effect": "Allow",
                                                    "not_actions": [],
                                                    "not_principals": [],
                                                    "not_resources": [],
                                                    "principals": [
                                                        {
                                                            "identifiers": [
                                                                "monitoring.rds.amazonaws.com"
                                                            ],
                                                            "type": "Service"
                                                        }
                                                    ],
                                                    "resources": [],
                                                    "sid": ""
                                                }
                                            ],
                                            "version": "2012-10-17"
                                        },
                                        "sensitive_values": {
                                            "statement": [
                                                {
                                                    "actions": [
                                                        false
                                                    ],
                                                    "condition": [],
                                                    "not_actions": [],
                                                    "not_principals": [],
                                                    "not_resources": [],
                                                    "principals": [
                                                        {
                                                            "identifiers": [
                                                                false
                                                            ]
                                                        }
                                                    ],
                                                    "resources": []
                                                }
                                            ]
                                        }
                                    },
                                    {
                                        "address": "module.db_disabled.module.db_instance.data.aws_partition.current",
                                        "mode": "data",
                                        "type": "aws_partition",
                                        "name": "current",
                                        "provider_name": "registry.terraform.io/hashicorp/aws",
                                        "schema_version": 0,
                                        "values": {
                                            "dns_suffix": "amazonaws.com",
                                            "id": "aws",
                                            "partition": "aws",
                                            "reverse_dns_prefix": "com.amazonaws"
                                        },
                                        "sensitive_values": {}
                                    }
                                ],
                                "address": "module.db_disabled.module.db_instance"
                            }
                        ]
                    }
                ]
            }
        }
    },
    "configuration": {
        "provider_config": {
            "aws": {
                "name": "aws",
                "full_name": "registry.terraform.io/hashicorp/aws",
                "version_constraint": ">= 4.6.0",
                "expressions": {
                    "profile": {
                        "constant_value": "dev"
                    },
                    "region": {
                        "references": [
                            "local.region"
                        ]
                    }
                }
            },
            "module.db:random": {
                "name": "random",
                "full_name": "registry.terraform.io/hashicorp/random",
                "version_constraint": ">= 3.1.0",
                "module_address": "module.db"
            },
            "module.db_default:random": {
                "name": "random",
                "full_name": "registry.terraform.io/hashicorp/random",
                "version_constraint": ">= 3.1.0",
                "module_address": "module.db_default"
            },
            "module.db_disabled:random": {
                "name": "random",
                "full_name": "registry.terraform.io/hashicorp/random",
                "version_constraint": ">= 3.1.0",
                "module_address": "module.db_disabled"
            }
        },
        "root_module": {
            "module_calls": {
                "db": {
                    "source": "../../my-custom-rds-module",
                    "expressions": {
                        "allocated_storage": {
                            "constant_value": 20
                        },
                        "backup_retention_period": {
                            "constant_value": 0
                        },
                        "backup_window": {
                            "constant_value": "03:00-06:00"
                        },
                        "create_cloudwatch_log_group": {
                            "constant_value": true
                        },
                        "create_monitoring_role": {
                            "constant_value": true
                        },
                        "db_name": {
                            "constant_value": "completePostgresql"
                        },
                        "db_option_group_tags": {
                            "constant_value": {
                                "Sensitive": "low"
                            }
                        },
                        "db_parameter_group_tags": {
                            "constant_value": {
                                "Sensitive": "low"
                            }
                        },
                        "db_subnet_group_name": {
                            "references": [
                                "module.vpc.database_subnet_group",
                                "module.vpc"
                            ]
                        },
                        "deletion_protection": {
                            "constant_value": false
                        },
                        "enabled_cloudwatch_logs_exports": {
                            "constant_value": [
                                "postgresql",
                                "upgrade"
                            ]
                        },
                        "engine": {
                            "constant_value": "postgres"
                        },
                        "engine_version": {
                            "constant_value": "14.1"
                        },
                        "family": {
                            "constant_value": "postgres14"
                        },
                        "identifier": {
                            "references": [
                                "local.name"
                            ]
                        },
                        "instance_class": {
                            "constant_value": "db.t4g.large"
                        },
                        "maintenance_window": {
                            "constant_value": "Mon:00:00-Mon:03:00"
                        },
                        "major_engine_version": {
                            "constant_value": "14"
                        },
                        "max_allocated_storage": {
                            "constant_value": 100
                        },
                        "monitoring_interval": {
                            "constant_value": 60
                        },
                        "monitoring_role_description": {
                            "constant_value": "Description for monitoring role"
                        },
                        "monitoring_role_name": {
                            "constant_value": "example-monitoring-role-name"
                        },
                        "multi_az": {
                            "constant_value": true
                        },
                        "parameters": {
                            "constant_value": [
                                {
                                    "name": "autovacuum",
                                    "value": 1
                                },
                                {
                                    "name": "client_encoding",
                                    "value": "utf8"
                                }
                            ]
                        },
                        "performance_insights_enabled": {
                            "constant_value": true
                        },
                        "performance_insights_retention_period": {
                            "constant_value": 7
                        },
                        "port": {
                            "constant_value": 5432
                        },
                        "skip_final_snapshot": {
                            "constant_value": true
                        },
                        "tags": {
                            "references": [
                                "local.tags"
                            ]
                        },
                        "username": {
                            "constant_value": "complete_postgresql"
                        },
                        "vpc_security_group_ids": {
                            "references": [
                                "module.security_group.security_group_id",
                                "module.security_group"
                            ]
                        }
                    },
                    "module": {
                        "outputs": {
                            "db_instance_address": {
                                "expression": {
                                    "references": [
                                        "module.db_instance.db_instance_address",
                                        "module.db_instance"
                                    ]
                                },
                                "description": "The address of the RDS instance"
                            },
                            "db_instance_arn": {
                                "expression": {
                                    "references": [
                                        "module.db_instance.db_instance_arn",
                                        "module.db_instance"
                                    ]
                                },
                                "description": "The ARN of the RDS instance"
                            },
                            "db_instance_availability_zone": {
                                "expression": {
                                    "references": [
                                        "module.db_instance.db_instance_availability_zone",
                                        "module.db_instance"
                                    ]
                                },
                                "description": "The availability zone of the RDS instance"
                            },
                            "db_instance_ca_cert_identifier": {
                                "expression": {
                                    "references": [
                                        "module.db_instance.db_instance_ca_cert_identifier",
                                        "module.db_instance"
                                    ]
                                },
                                "description": "Specifies the identifier of the CA certificate for the DB instance"
                            },
                            "db_instance_cloudwatch_log_groups": {
                                "expression": {
                                    "references": [
                                        "module.db_instance.db_instance_cloudwatch_log_groups",
                                        "module.db_instance"
                                    ]
                                },
                                "description": "Map of CloudWatch log groups created and their attributes"
                            },
                            "db_instance_domain": {
                                "expression": {
                                    "references": [
                                        "module.db_instance.db_instance_domain",
                                        "module.db_instance"
                                    ]
                                },
                                "description": "The ID of the Directory Service Active Directory domain the instance is joined to"
                            },
                            "db_instance_domain_iam_role_name": {
                                "expression": {
                                    "references": [
                                        "module.db_instance.db_instance_domain_iam_role_name",
                                        "module.db_instance"
                                    ]
                                },
                                "description": "The name of the IAM role to be used when making API calls to the Directory Service. "
                            },
                            "db_instance_endpoint": {
                                "expression": {
                                    "references": [
                                        "module.db_instance.db_instance_endpoint",
                                        "module.db_instance"
                                    ]
                                },
                                "description": "The connection endpoint"
                            },
                            "db_instance_engine": {
                                "expression": {
                                    "references": [
                                        "module.db_instance.db_instance_engine",
                                        "module.db_instance"
                                    ]
                                },
                                "description": "The database engine"
                            },
                            "db_instance_engine_version_actual": {
                                "expression": {
                                    "references": [
                                        "module.db_instance.db_instance_engine_version_actual",
                                        "module.db_instance"
                                    ]
                                },
                                "description": "The running version of the database"
                            },
                            "db_instance_hosted_zone_id": {
                                "expression": {
                                    "references": [
                                        "module.db_instance.db_instance_hosted_zone_id",
                                        "module.db_instance"
                                    ]
                                },
                                "description": "The canonical hosted zone ID of the DB instance (to be used in a Route 53 Alias record)"
                            },
                            "db_instance_id": {
                                "expression": {
                                    "references": [
                                        "module.db_instance.db_instance_id",
                                        "module.db_instance"
                                    ]
                                },
                                "description": "The RDS instance ID"
                            },
                            "db_instance_name": {
                                "expression": {
                                    "references": [
                                        "module.db_instance.db_instance_name",
                                        "module.db_instance"
                                    ]
                                },
                                "description": "The database name"
                            },
                            "db_instance_password": {
                                "sensitive": true,
                                "expression": {
                                    "references": [
                                        "local.password"
                                    ]
                                },
                                "description": "The database password (this password may be old, because Terraform doesn't track it after initial creation)"
                            },
                            "db_instance_port": {
                                "expression": {
                                    "references": [
                                        "module.db_instance.db_instance_port",
                                        "module.db_instance"
                                    ]
                                },
                                "description": "The database port"
                            },
                            "db_instance_resource_id": {
                                "expression": {
                                    "references": [
                                        "module.db_instance.db_instance_resource_id",
                                        "module.db_instance"
                                    ]
                                },
                                "description": "The RDS Resource ID of this instance"
                            },
                            "db_instance_status": {
                                "expression": {
                                    "references": [
                                        "module.db_instance.db_instance_status",
                                        "module.db_instance"
                                    ]
                                },
                                "description": "The RDS instance status"
                            },
                            "db_instance_username": {
                                "sensitive": true,
                                "expression": {
                                    "references": [
                                        "module.db_instance.db_instance_username",
                                        "module.db_instance"
                                    ]
                                },
                                "description": "The master username for the database"
                            },
                            "db_option_group_arn": {
                                "expression": {
                                    "references": [
                                        "module.db_option_group.db_option_group_arn",
                                        "module.db_option_group"
                                    ]
                                },
                                "description": "The ARN of the db option group"
                            },
                            "db_option_group_id": {
                                "expression": {
                                    "references": [
                                        "module.db_option_group.db_option_group_id",
                                        "module.db_option_group"
                                    ]
                                },
                                "description": "The db option group id"
                            },
                            "db_parameter_group_arn": {
                                "expression": {
                                    "references": [
                                        "module.db_parameter_group.db_parameter_group_arn",
                                        "module.db_parameter_group"
                                    ]
                                },
                                "description": "The ARN of the db parameter group"
                            },
                            "db_parameter_group_id": {
                                "expression": {
                                    "references": [
                                        "module.db_parameter_group.db_parameter_group_id",
                                        "module.db_parameter_group"
                                    ]
                                },
                                "description": "The db parameter group id"
                            },
                            "db_subnet_group_arn": {
                                "expression": {
                                    "references": [
                                        "module.db_subnet_group.db_subnet_group_arn",
                                        "module.db_subnet_group"
                                    ]
                                },
                                "description": "The ARN of the db subnet group"
                            },
                            "db_subnet_group_id": {
                                "expression": {
                                    "references": [
                                        "module.db_subnet_group.db_subnet_group_id",
                                        "module.db_subnet_group"
                                    ]
                                },
                                "description": "The db subnet group name"
                            },
                            "enhanced_monitoring_iam_role_arn": {
                                "expression": {
                                    "references": [
                                        "module.db_instance.enhanced_monitoring_iam_role_arn",
                                        "module.db_instance"
                                    ]
                                },
                                "description": "The Amazon Resource Name (ARN) specifying the monitoring role"
                            },
                            "enhanced_monitoring_iam_role_name": {
                                "expression": {
                                    "references": [
                                        "module.db_instance.enhanced_monitoring_iam_role_name",
                                        "module.db_instance"
                                    ]
                                },
                                "description": "The name of the monitoring role"
                            }
                        },
                        "resources": [
                            {
                                "address": "random_password.master_password",
                                "mode": "managed",
                                "type": "random_password",
                                "name": "master_password",
                                "provider_config_key": "module.db:random",
                                "expressions": {
                                    "length": {
                                        "references": [
                                            "var.random_password_length"
                                        ]
                                    },
                                    "special": {
                                        "constant_value": false
                                    }
                                },
                                "schema_version": 1,
                                "count_expression": {
                                    "references": [
                                        "local.create_random_password"
                                    ]
                                }
                            }
                        ],
                        "module_calls": {
                            "db_instance": {
                                "source": "./modules/db_instance",
                                "expressions": {
                                    "allocated_storage": {
                                        "references": [
                                            "var.allocated_storage"
                                        ]
                                    },
                                    "allow_major_version_upgrade": {
                                        "references": [
                                            "var.allow_major_version_upgrade"
                                        ]
                                    },
                                    "apply_immediately": {
                                        "references": [
                                            "var.apply_immediately"
                                        ]
                                    },
                                    "auto_minor_version_upgrade": {
                                        "references": [
                                            "var.auto_minor_version_upgrade"
                                        ]
                                    },
                                    "availability_zone": {
                                        "references": [
                                            "var.availability_zone"
                                        ]
                                    },
                                    "backup_retention_period": {
                                        "references": [
                                            "var.backup_retention_period"
                                        ]
                                    },
                                    "backup_window": {
                                        "references": [
                                            "var.backup_window"
                                        ]
                                    },
                                    "ca_cert_identifier": {
                                        "references": [
                                            "var.ca_cert_identifier"
                                        ]
                                    },
                                    "character_set_name": {
                                        "references": [
                                            "var.character_set_name"
                                        ]
                                    },
                                    "cloudwatch_log_group_kms_key_id": {
                                        "references": [
                                            "var.cloudwatch_log_group_kms_key_id"
                                        ]
                                    },
                                    "cloudwatch_log_group_retention_in_days": {
                                        "references": [
                                            "var.cloudwatch_log_group_retention_in_days"
                                        ]
                                    },
                                    "copy_tags_to_snapshot": {
                                        "references": [
                                            "var.copy_tags_to_snapshot"
                                        ]
                                    },
                                    "create": {
                                        "references": [
                                            "local.create_db_instance"
                                        ]
                                    },
                                    "create_cloudwatch_log_group": {
                                        "references": [
                                            "var.create_cloudwatch_log_group"
                                        ]
                                    },
                                    "create_monitoring_role": {
                                        "references": [
                                            "var.create_monitoring_role"
                                        ]
                                    },
                                    "db_name": {
                                        "references": [
                                            "var.db_name"
                                        ]
                                    },
                                    "db_subnet_group_name": {
                                        "references": [
                                            "local.db_subnet_group_name"
                                        ]
                                    },
                                    "delete_automated_backups": {
                                        "references": [
                                            "var.delete_automated_backups"
                                        ]
                                    },
                                    "deletion_protection": {
                                        "references": [
                                            "var.deletion_protection"
                                        ]
                                    },
                                    "domain": {
                                        "references": [
                                            "var.domain"
                                        ]
                                    },
                                    "domain_iam_role_name": {
                                        "references": [
                                            "var.domain_iam_role_name"
                                        ]
                                    },
                                    "enabled_cloudwatch_logs_exports": {
                                        "references": [
                                            "var.enabled_cloudwatch_logs_exports"
                                        ]
                                    },
                                    "engine": {
                                        "references": [
                                            "var.engine"
                                        ]
                                    },
                                    "engine_version": {
                                        "references": [
                                            "var.engine_version"
                                        ]
                                    },
                                    "final_snapshot_identifier_prefix": {
                                        "references": [
                                            "var.final_snapshot_identifier_prefix"
                                        ]
                                    },
                                    "iam_database_authentication_enabled": {
                                        "references": [
                                            "var.iam_database_authentication_enabled"
                                        ]
                                    },
                                    "identifier": {
                                        "references": [
                                            "var.identifier"
                                        ]
                                    },
                                    "instance_class": {
                                        "references": [
                                            "var.instance_class"
                                        ]
                                    },
                                    "iops": {
                                        "references": [
                                            "var.iops"
                                        ]
                                    },
                                    "kms_key_id": {
                                        "references": [
                                            "var.kms_key_id"
                                        ]
                                    },
                                    "license_model": {
                                        "references": [
                                            "var.license_model"
                                        ]
                                    },
                                    "maintenance_window": {
                                        "references": [
                                            "var.maintenance_window"
                                        ]
                                    },
                                    "max_allocated_storage": {
                                        "references": [
                                            "var.max_allocated_storage"
                                        ]
                                    },
                                    "monitoring_interval": {
                                        "references": [
                                            "var.monitoring_interval"
                                        ]
                                    },
                                    "monitoring_role_arn": {
                                        "references": [
                                            "var.monitoring_role_arn"
                                        ]
                                    },
                                    "monitoring_role_description": {
                                        "references": [
                                            "var.monitoring_role_description"
                                        ]
                                    },
                                    "monitoring_role_name": {
                                        "references": [
                                            "var.monitoring_role_name"
                                        ]
                                    },
                                    "multi_az": {
                                        "references": [
                                            "var.multi_az"
                                        ]
                                    },
                                    "option_group_name": {
                                        "references": [
                                            "local.option_group"
                                        ]
                                    },
                                    "parameter_group_name": {
                                        "references": [
                                            "local.parameter_group_name_id"
                                        ]
                                    },
                                    "password": {
                                        "references": [
                                            "local.password"
                                        ]
                                    },
                                    "performance_insights_enabled": {
                                        "references": [
                                            "var.performance_insights_enabled"
                                        ]
                                    },
                                    "performance_insights_kms_key_id": {
                                        "references": [
                                            "var.performance_insights_enabled",
                                            "var.performance_insights_kms_key_id"
                                        ]
                                    },
                                    "performance_insights_retention_period": {
                                        "references": [
                                            "var.performance_insights_retention_period"
                                        ]
                                    },
                                    "port": {
                                        "references": [
                                            "var.port"
                                        ]
                                    },
                                    "publicly_accessible": {
                                        "references": [
                                            "var.publicly_accessible"
                                        ]
                                    },
                                    "replica_mode": {
                                        "references": [
                                            "var.replica_mode"
                                        ]
                                    },
                                    "replicate_source_db": {
                                        "references": [
                                            "var.replicate_source_db"
                                        ]
                                    },
                                    "restore_to_point_in_time": {
                                        "references": [
                                            "var.restore_to_point_in_time"
                                        ]
                                    },
                                    "s3_import": {
                                        "references": [
                                            "var.s3_import"
                                        ]
                                    },
                                    "skip_final_snapshot": {
                                        "references": [
                                            "var.skip_final_snapshot"
                                        ]
                                    },
                                    "snapshot_identifier": {
                                        "references": [
                                            "var.snapshot_identifier"
                                        ]
                                    },
                                    "storage_encrypted": {
                                        "references": [
                                            "var.storage_encrypted"
                                        ]
                                    },
                                    "storage_type": {
                                        "references": [
                                            "var.storage_type"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.tags",
                                            "var.db_instance_tags"
                                        ]
                                    },
                                    "timeouts": {
                                        "references": [
                                            "var.timeouts"
                                        ]
                                    },
                                    "timezone": {
                                        "references": [
                                            "var.timezone"
                                        ]
                                    },
                                    "username": {
                                        "references": [
                                            "var.username"
                                        ]
                                    },
                                    "vpc_security_group_ids": {
                                        "references": [
                                            "var.vpc_security_group_ids"
                                        ]
                                    }
                                },
                                "module": {
                                    "outputs": {
                                        "db_instance_address": {
                                            "expression": {
                                                "references": [
                                                    "aws_db_instance.this[0].address",
                                                    "aws_db_instance.this[0]",
                                                    "aws_db_instance.this"
                                                ]
                                            },
                                            "description": "The address of the RDS instance"
                                        },
                                        "db_instance_arn": {
                                            "expression": {
                                                "references": [
                                                    "aws_db_instance.this[0].arn",
                                                    "aws_db_instance.this[0]",
                                                    "aws_db_instance.this"
                                                ]
                                            },
                                            "description": "The ARN of the RDS instance"
                                        },
                                        "db_instance_availability_zone": {
                                            "expression": {
                                                "references": [
                                                    "aws_db_instance.this[0].availability_zone",
                                                    "aws_db_instance.this[0]",
                                                    "aws_db_instance.this"
                                                ]
                                            },
                                            "description": "The availability zone of the RDS instance"
                                        },
                                        "db_instance_ca_cert_identifier": {
                                            "expression": {
                                                "references": [
                                                    "aws_db_instance.this[0].ca_cert_identifier",
                                                    "aws_db_instance.this[0]",
                                                    "aws_db_instance.this"
                                                ]
                                            },
                                            "description": "Specifies the identifier of the CA certificate for the DB instance"
                                        },
                                        "db_instance_cloudwatch_log_groups": {
                                            "expression": {
                                                "references": [
                                                    "aws_cloudwatch_log_group.this"
                                                ]
                                            },
                                            "description": "Map of CloudWatch log groups created and their attributes"
                                        },
                                        "db_instance_domain": {
                                            "expression": {
                                                "references": [
                                                    "aws_db_instance.this[0].domain",
                                                    "aws_db_instance.this[0]",
                                                    "aws_db_instance.this"
                                                ]
                                            },
                                            "description": "The ID of the Directory Service Active Directory domain the instance is joined to"
                                        },
                                        "db_instance_domain_iam_role_name": {
                                            "expression": {
                                                "references": [
                                                    "aws_db_instance.this[0].domain_iam_role_name",
                                                    "aws_db_instance.this[0]",
                                                    "aws_db_instance.this"
                                                ]
                                            },
                                            "description": "The name of the IAM role to be used when making API calls to the Directory Service. "
                                        },
                                        "db_instance_endpoint": {
                                            "expression": {
                                                "references": [
                                                    "aws_db_instance.this[0].endpoint",
                                                    "aws_db_instance.this[0]",
                                                    "aws_db_instance.this"
                                                ]
                                            },
                                            "description": "The connection endpoint"
                                        },
                                        "db_instance_engine": {
                                            "expression": {
                                                "references": [
                                                    "aws_db_instance.this[0].engine",
                                                    "aws_db_instance.this[0]",
                                                    "aws_db_instance.this"
                                                ]
                                            },
                                            "description": "The database engine"
                                        },
                                        "db_instance_engine_version_actual": {
                                            "expression": {
                                                "references": [
                                                    "aws_db_instance.this[0].engine_version_actual",
                                                    "aws_db_instance.this[0]",
                                                    "aws_db_instance.this"
                                                ]
                                            },
                                            "description": "The running version of the database"
                                        },
                                        "db_instance_hosted_zone_id": {
                                            "expression": {
                                                "references": [
                                                    "aws_db_instance.this[0].hosted_zone_id",
                                                    "aws_db_instance.this[0]",
                                                    "aws_db_instance.this"
                                                ]
                                            },
                                            "description": "The canonical hosted zone ID of the DB instance (to be used in a Route 53 Alias record)"
                                        },
                                        "db_instance_id": {
                                            "expression": {
                                                "references": [
                                                    "aws_db_instance.this[0].id",
                                                    "aws_db_instance.this[0]",
                                                    "aws_db_instance.this"
                                                ]
                                            },
                                            "description": "The RDS instance ID"
                                        },
                                        "db_instance_name": {
                                            "expression": {
                                                "references": [
                                                    "aws_db_instance.this[0].name",
                                                    "aws_db_instance.this[0]",
                                                    "aws_db_instance.this"
                                                ]
                                            },
                                            "description": "The database name"
                                        },
                                        "db_instance_password": {
                                            "sensitive": true,
                                            "expression": {
                                                "references": [
                                                    "aws_db_instance.this[0].password",
                                                    "aws_db_instance.this[0]",
                                                    "aws_db_instance.this"
                                                ]
                                            },
                                            "description": "The master password"
                                        },
                                        "db_instance_port": {
                                            "expression": {
                                                "references": [
                                                    "aws_db_instance.this[0].port",
                                                    "aws_db_instance.this[0]",
                                                    "aws_db_instance.this"
                                                ]
                                            },
                                            "description": "The database port"
                                        },
                                        "db_instance_resource_id": {
                                            "expression": {
                                                "references": [
                                                    "aws_db_instance.this[0].resource_id",
                                                    "aws_db_instance.this[0]",
                                                    "aws_db_instance.this"
                                                ]
                                            },
                                            "description": "The RDS Resource ID of this instance"
                                        },
                                        "db_instance_status": {
                                            "expression": {
                                                "references": [
                                                    "aws_db_instance.this[0].status",
                                                    "aws_db_instance.this[0]",
                                                    "aws_db_instance.this"
                                                ]
                                            },
                                            "description": "The RDS instance status"
                                        },
                                        "db_instance_username": {
                                            "sensitive": true,
                                            "expression": {
                                                "references": [
                                                    "aws_db_instance.this[0].username",
                                                    "aws_db_instance.this[0]",
                                                    "aws_db_instance.this"
                                                ]
                                            },
                                            "description": "The master username for the database"
                                        },
                                        "enhanced_monitoring_iam_role_arn": {
                                            "expression": {
                                                "references": [
                                                    "aws_iam_role.enhanced_monitoring[0].arn",
                                                    "aws_iam_role.enhanced_monitoring[0]",
                                                    "aws_iam_role.enhanced_monitoring"
                                                ]
                                            },
                                            "description": "The Amazon Resource Name (ARN) specifying the monitoring role"
                                        },
                                        "enhanced_monitoring_iam_role_name": {
                                            "expression": {
                                                "references": [
                                                    "aws_iam_role.enhanced_monitoring[0].name",
                                                    "aws_iam_role.enhanced_monitoring[0]",
                                                    "aws_iam_role.enhanced_monitoring"
                                                ]
                                            },
                                            "description": "The name of the monitoring role"
                                        }
                                    },
                                    "resources": [
                                        {
                                            "address": "aws_cloudwatch_log_group.this",
                                            "mode": "managed",
                                            "type": "aws_cloudwatch_log_group",
                                            "name": "this",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "kms_key_id": {
                                                    "references": [
                                                        "var.cloudwatch_log_group_kms_key_id"
                                                    ]
                                                },
                                                "name": {
                                                    "references": [
                                                        "var.identifier",
                                                        "each.value"
                                                    ]
                                                },
                                                "retention_in_days": {
                                                    "references": [
                                                        "var.cloudwatch_log_group_retention_in_days"
                                                    ]
                                                },
                                                "tags": {
                                                    "references": [
                                                        "var.tags"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0,
                                            "for_each_expression": {
                                                "references": [
                                                    "var.enabled_cloudwatch_logs_exports",
                                                    "var.create",
                                                    "var.create_cloudwatch_log_group"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "aws_db_instance.this",
                                            "mode": "managed",
                                            "type": "aws_db_instance",
                                            "name": "this",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "allocated_storage": {
                                                    "references": [
                                                        "var.allocated_storage"
                                                    ]
                                                },
                                                "allow_major_version_upgrade": {
                                                    "references": [
                                                        "var.allow_major_version_upgrade"
                                                    ]
                                                },
                                                "apply_immediately": {
                                                    "references": [
                                                        "var.apply_immediately"
                                                    ]
                                                },
                                                "auto_minor_version_upgrade": {
                                                    "references": [
                                                        "var.auto_minor_version_upgrade"
                                                    ]
                                                },
                                                "availability_zone": {
                                                    "references": [
                                                        "var.availability_zone"
                                                    ]
                                                },
                                                "backup_retention_period": {
                                                    "references": [
                                                        "var.backup_retention_period"
                                                    ]
                                                },
                                                "backup_window": {
                                                    "references": [
                                                        "var.backup_window"
                                                    ]
                                                },
                                                "ca_cert_identifier": {
                                                    "references": [
                                                        "var.ca_cert_identifier"
                                                    ]
                                                },
                                                "character_set_name": {
                                                    "references": [
                                                        "var.character_set_name"
                                                    ]
                                                },
                                                "copy_tags_to_snapshot": {
                                                    "references": [
                                                        "var.copy_tags_to_snapshot"
                                                    ]
                                                },
                                                "db_name": {
                                                    "references": [
                                                        "var.db_name"
                                                    ]
                                                },
                                                "db_subnet_group_name": {
                                                    "references": [
                                                        "var.db_subnet_group_name"
                                                    ]
                                                },
                                                "delete_automated_backups": {
                                                    "references": [
                                                        "var.delete_automated_backups"
                                                    ]
                                                },
                                                "deletion_protection": {
                                                    "references": [
                                                        "var.deletion_protection"
                                                    ]
                                                },
                                                "domain": {
                                                    "references": [
                                                        "var.domain"
                                                    ]
                                                },
                                                "domain_iam_role_name": {
                                                    "references": [
                                                        "var.domain_iam_role_name"
                                                    ]
                                                },
                                                "enabled_cloudwatch_logs_exports": {
                                                    "references": [
                                                        "var.enabled_cloudwatch_logs_exports"
                                                    ]
                                                },
                                                "engine": {
                                                    "references": [
                                                        "local.engine"
                                                    ]
                                                },
                                                "engine_version": {
                                                    "references": [
                                                        "local.engine_version"
                                                    ]
                                                },
                                                "final_snapshot_identifier": {
                                                    "references": [
                                                        "local.final_snapshot_identifier"
                                                    ]
                                                },
                                                "iam_database_authentication_enabled": {
                                                    "references": [
                                                        "var.iam_database_authentication_enabled"
                                                    ]
                                                },
                                                "identifier": {
                                                    "references": [
                                                        "var.identifier"
                                                    ]
                                                },
                                                "instance_class": {
                                                    "references": [
                                                        "var.instance_class"
                                                    ]
                                                },
                                                "iops": {
                                                    "references": [
                                                        "var.iops"
                                                    ]
                                                },
                                                "kms_key_id": {
                                                    "references": [
                                                        "var.kms_key_id"
                                                    ]
                                                },
                                                "license_model": {
                                                    "references": [
                                                        "var.license_model"
                                                    ]
                                                },
                                                "maintenance_window": {
                                                    "references": [
                                                        "var.maintenance_window"
                                                    ]
                                                },
                                                "max_allocated_storage": {
                                                    "references": [
                                                        "var.max_allocated_storage"
                                                    ]
                                                },
                                                "monitoring_interval": {
                                                    "references": [
                                                        "var.monitoring_interval"
                                                    ]
                                                },
                                                "monitoring_role_arn": {
                                                    "references": [
                                                        "var.monitoring_interval",
                                                        "local.monitoring_role_arn"
                                                    ]
                                                },
                                                "multi_az": {
                                                    "references": [
                                                        "var.multi_az"
                                                    ]
                                                },
                                                "option_group_name": {
                                                    "references": [
                                                        "var.option_group_name"
                                                    ]
                                                },
                                                "parameter_group_name": {
                                                    "references": [
                                                        "var.parameter_group_name"
                                                    ]
                                                },
                                                "password": {
                                                    "references": [
                                                        "local.password"
                                                    ]
                                                },
                                                "performance_insights_enabled": {
                                                    "references": [
                                                        "var.performance_insights_enabled"
                                                    ]
                                                },
                                                "performance_insights_kms_key_id": {
                                                    "references": [
                                                        "var.performance_insights_enabled",
                                                        "var.performance_insights_kms_key_id"
                                                    ]
                                                },
                                                "performance_insights_retention_period": {
                                                    "references": [
                                                        "var.performance_insights_enabled",
                                                        "var.performance_insights_retention_period"
                                                    ]
                                                },
                                                "port": {
                                                    "references": [
                                                        "var.port"
                                                    ]
                                                },
                                                "publicly_accessible": {
                                                    "references": [
                                                        "var.publicly_accessible"
                                                    ]
                                                },
                                                "replica_mode": {
                                                    "references": [
                                                        "var.replica_mode"
                                                    ]
                                                },
                                                "replicate_source_db": {
                                                    "references": [
                                                        "var.replicate_source_db"
                                                    ]
                                                },
                                                "skip_final_snapshot": {
                                                    "references": [
                                                        "var.skip_final_snapshot"
                                                    ]
                                                },
                                                "snapshot_identifier": {
                                                    "references": [
                                                        "var.snapshot_identifier"
                                                    ]
                                                },
                                                "storage_encrypted": {
                                                    "references": [
                                                        "var.storage_encrypted"
                                                    ]
                                                },
                                                "storage_type": {
                                                    "references": [
                                                        "var.storage_type"
                                                    ]
                                                },
                                                "tags": {
                                                    "references": [
                                                        "var.tags"
                                                    ]
                                                },
                                                "timeouts": {
                                                    "create": {
                                                        "references": [
                                                            "var.timeouts"
                                                        ]
                                                    },
                                                    "delete": {
                                                        "references": [
                                                            "var.timeouts"
                                                        ]
                                                    },
                                                    "update": {
                                                        "references": [
                                                            "var.timeouts"
                                                        ]
                                                    }
                                                },
                                                "timezone": {
                                                    "references": [
                                                        "var.timezone"
                                                    ]
                                                },
                                                "username": {
                                                    "references": [
                                                        "local.username"
                                                    ]
                                                },
                                                "vpc_security_group_ids": {
                                                    "references": [
                                                        "var.vpc_security_group_ids"
                                                    ]
                                                }
                                            },
                                            "schema_version": 1,
                                            "count_expression": {
                                                "references": [
                                                    "var.create"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "aws_iam_role.enhanced_monitoring",
                                            "mode": "managed",
                                            "type": "aws_iam_role",
                                            "name": "enhanced_monitoring",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "assume_role_policy": {
                                                    "references": [
                                                        "data.aws_iam_policy_document.enhanced_monitoring.json",
                                                        "data.aws_iam_policy_document.enhanced_monitoring"
                                                    ]
                                                },
                                                "description": {
                                                    "references": [
                                                        "var.monitoring_role_description"
                                                    ]
                                                },
                                                "name": {
                                                    "references": [
                                                        "var.monitoring_role_name"
                                                    ]
                                                },
                                                "tags": {
                                                    "references": [
                                                        "var.monitoring_role_name",
                                                        "var.tags"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0,
                                            "count_expression": {
                                                "references": [
                                                    "var.create_monitoring_role"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "aws_iam_role_policy_attachment.enhanced_monitoring",
                                            "mode": "managed",
                                            "type": "aws_iam_role_policy_attachment",
                                            "name": "enhanced_monitoring",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "policy_arn": {
                                                    "references": [
                                                        "data.aws_partition.current.partition",
                                                        "data.aws_partition.current"
                                                    ]
                                                },
                                                "role": {
                                                    "references": [
                                                        "aws_iam_role.enhanced_monitoring[0].name",
                                                        "aws_iam_role.enhanced_monitoring[0]",
                                                        "aws_iam_role.enhanced_monitoring"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0,
                                            "count_expression": {
                                                "references": [
                                                    "var.create_monitoring_role"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "random_id.snapshot_identifier",
                                            "mode": "managed",
                                            "type": "random_id",
                                            "name": "snapshot_identifier",
                                            "provider_config_key": "module.db:random",
                                            "expressions": {
                                                "byte_length": {
                                                    "constant_value": 4
                                                },
                                                "keepers": {
                                                    "references": [
                                                        "var.identifier"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0,
                                            "count_expression": {
                                                "references": [
                                                    "var.create",
                                                    "var.skip_final_snapshot"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "data.aws_iam_policy_document.enhanced_monitoring",
                                            "mode": "data",
                                            "type": "aws_iam_policy_document",
                                            "name": "enhanced_monitoring",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "statement": [
                                                    {
                                                        "actions": {
                                                            "constant_value": [
                                                                "sts:AssumeRole"
                                                            ]
                                                        },
                                                        "principals": [
                                                            {
                                                                "identifiers": {
                                                                    "constant_value": [
                                                                        "monitoring.rds.amazonaws.com"
                                                                    ]
                                                                },
                                                                "type": {
                                                                    "constant_value": "Service"
                                                                }
                                                            }
                                                        ]
                                                    }
                                                ]
                                            },
                                            "schema_version": 0
                                        },
                                        {
                                            "address": "data.aws_partition.current",
                                            "mode": "data",
                                            "type": "aws_partition",
                                            "name": "current",
                                            "provider_config_key": "aws",
                                            "schema_version": 0
                                        }
                                    ],
                                    "variables": {
                                        "allocated_storage": {
                                            "default": null,
                                            "description": "The allocated storage in gigabytes"
                                        },
                                        "allow_major_version_upgrade": {
                                            "default": false,
                                            "description": "Indicates that major version upgrades are allowed. Changing this parameter does not result in an outage and the change is asynchronously applied as soon as possible"
                                        },
                                        "apply_immediately": {
                                            "default": false,
                                            "description": "Specifies whether any database modifications are applied immediately, or during the next maintenance window"
                                        },
                                        "auto_minor_version_upgrade": {
                                            "default": true,
                                            "description": "Indicates that minor engine upgrades will be applied automatically to the DB instance during the maintenance window"
                                        },
                                        "availability_zone": {
                                            "default": null,
                                            "description": "The Availability Zone of the RDS instance"
                                        },
                                        "backup_retention_period": {
                                            "default": null,
                                            "description": "The days to retain backups for"
                                        },
                                        "backup_window": {
                                            "default": null,
                                            "description": "The daily time range (in UTC) during which automated backups are created if they are enabled. Example: '09:46-10:16'. Must not overlap with maintenance_window"
                                        },
                                        "ca_cert_identifier": {
                                            "default": null,
                                            "description": "Specifies the identifier of the CA certificate for the DB instance"
                                        },
                                        "character_set_name": {
                                            "default": null,
                                            "description": "The character set name to use for DB encoding in Oracle instances. This can't be changed. See Oracle Character Sets Supported in Amazon RDS and Collations and Character Sets for Microsoft SQL Server for more information. This can only be set on creation."
                                        },
                                        "cloudwatch_log_group_kms_key_id": {
                                            "default": null,
                                            "description": "The ARN of the KMS Key to use when encrypting log data"
                                        },
                                        "cloudwatch_log_group_retention_in_days": {
                                            "default": 7,
                                            "description": "The number of days to retain CloudWatch logs for the DB instance"
                                        },
                                        "copy_tags_to_snapshot": {
                                            "default": false,
                                            "description": "On delete, copy all Instance tags to the final snapshot"
                                        },
                                        "create": {
                                            "default": true,
                                            "description": "Whether to create this resource or not?"
                                        },
                                        "create_cloudwatch_log_group": {
                                            "default": false,
                                            "description": "Determines whether a CloudWatch log group is created for each `enabled_cloudwatch_logs_exports`"
                                        },
                                        "create_monitoring_role": {
                                            "default": false,
                                            "description": "Create IAM role with a defined name that permits RDS to send enhanced monitoring metrics to CloudWatch Logs."
                                        },
                                        "db_name": {
                                            "default": null,
                                            "description": "The DB name to create. If omitted, no database is created initially"
                                        },
                                        "db_subnet_group_name": {
                                            "default": null,
                                            "description": "Name of DB subnet group. DB instance will be created in the VPC associated with the DB subnet group. If unspecified, will be created in the default VPC"
                                        },
                                        "delete_automated_backups": {
                                            "default": true,
                                            "description": "Specifies whether to remove automated backups immediately after the DB instance is deleted"
                                        },
                                        "deletion_protection": {
                                            "default": false,
                                            "description": "The database can't be deleted when this value is set to true."
                                        },
                                        "domain": {
                                            "default": null,
                                            "description": "The ID of the Directory Service Active Directory domain to create the instance in"
                                        },
                                        "domain_iam_role_name": {
                                            "default": null,
                                            "description": "(Required if domain is provided) The name of the IAM role to be used when making API calls to the Directory Service"
                                        },
                                        "enabled_cloudwatch_logs_exports": {
                                            "default": [],
                                            "description": "List of log types to enable for exporting to CloudWatch logs. If omitted, no logs will be exported. Valid values (depending on engine): alert, audit, error, general, listener, slowquery, trace, postgresql (PostgreSQL), upgrade (PostgreSQL)."
                                        },
                                        "engine": {
                                            "default": null,
                                            "description": "The database engine to use"
                                        },
                                        "engine_version": {
                                            "default": null,
                                            "description": "The engine version to use"
                                        },
                                        "final_snapshot_identifier_prefix": {
                                            "default": "final",
                                            "description": "The name which is prefixed to the final snapshot on cluster destroy"
                                        },
                                        "iam_database_authentication_enabled": {
                                            "default": false,
                                            "description": "Specifies whether or mappings of AWS Identity and Access Management (IAM) accounts to database accounts is enabled"
                                        },
                                        "identifier": {
                                            "description": "The name of the RDS instance"
                                        },
                                        "instance_class": {
                                            "default": null,
                                            "description": "The instance type of the RDS instance"
                                        },
                                        "iops": {
                                            "default": 0,
                                            "description": "The amount of provisioned IOPS. Setting this implies a storage_type of 'io1'"
                                        },
                                        "kms_key_id": {
                                            "default": null,
                                            "description": "The ARN for the KMS encryption key. If creating an encrypted replica, set this to the destination KMS ARN. If storage_encrypted is set to true and kms_key_id is not specified the default KMS key created in your account will be used"
                                        },
                                        "license_model": {
                                            "default": null,
                                            "description": "License model information for this DB instance. Optional, but required for some DB engines, i.e. Oracle SE1"
                                        },
                                        "maintenance_window": {
                                            "default": null,
                                            "description": "The window to perform maintenance in. Syntax: 'ddd:hh24:mi-ddd:hh24:mi'. Eg: 'Mon:00:00-Mon:03:00'"
                                        },
                                        "max_allocated_storage": {
                                            "default": 0,
                                            "description": "Specifies the value for Storage Autoscaling"
                                        },
                                        "monitoring_interval": {
                                            "default": 0,
                                            "description": "The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB instance. To disable collecting Enhanced Monitoring metrics, specify 0. The default is 0. Valid Values: 0, 1, 5, 10, 15, 30, 60."
                                        },
                                        "monitoring_role_arn": {
                                            "default": null,
                                            "description": "The ARN for the IAM role that permits RDS to send enhanced monitoring metrics to CloudWatch Logs. Must be specified if monitoring_interval is non-zero."
                                        },
                                        "monitoring_role_description": {
                                            "default": null,
                                            "description": "Description of the monitoring IAM role"
                                        },
                                        "monitoring_role_name": {
                                            "default": "rds-monitoring-role",
                                            "description": "Name of the IAM role which will be created when create_monitoring_role is enabled."
                                        },
                                        "multi_az": {
                                            "default": false,
                                            "description": "Specifies if the RDS instance is multi-AZ"
                                        },
                                        "option_group_name": {
                                            "default": null,
                                            "description": "Name of the DB option group to associate."
                                        },
                                        "parameter_group_name": {
                                            "default": null,
                                            "description": "Name of the DB parameter group to associate"
                                        },
                                        "password": {
                                            "default": null,
                                            "description": "Password for the master DB user. Note that this may show up in logs, and it will be stored in the state file"
                                        },
                                        "performance_insights_enabled": {
                                            "default": false,
                                            "description": "Specifies whether Performance Insights are enabled"
                                        },
                                        "performance_insights_kms_key_id": {
                                            "default": null,
                                            "description": "The ARN for the KMS key to encrypt Performance Insights data."
                                        },
                                        "performance_insights_retention_period": {
                                            "default": 7,
                                            "description": "The amount of time in days to retain Performance Insights data. Either 7 (7 days) or 731 (2 years)."
                                        },
                                        "port": {
                                            "default": null,
                                            "description": "The port on which the DB accepts connections"
                                        },
                                        "publicly_accessible": {
                                            "default": false,
                                            "description": "Bool to control if instance is publicly accessible"
                                        },
                                        "replica_mode": {
                                            "default": null,
                                            "description": "Specifies whether the replica is in either mounted or open-read-only mode. This attribute is only supported by Oracle instances. Oracle replicas operate in open-read-only mode unless otherwise specified"
                                        },
                                        "replicate_source_db": {
                                            "default": null,
                                            "description": "Specifies that this resource is a Replicate database, and to use this value as the source database. This correlates to the identifier of another Amazon RDS Database to replicate."
                                        },
                                        "restore_to_point_in_time": {
                                            "default": null,
                                            "description": "Restore to a point in time (MySQL is NOT supported)"
                                        },
                                        "s3_import": {
                                            "default": null,
                                            "description": "Restore from a Percona Xtrabackup in S3 (only MySQL is supported)"
                                        },
                                        "skip_final_snapshot": {
                                            "default": false,
                                            "description": "Determines whether a final DB snapshot is created before the DB instance is deleted. If true is specified, no DBSnapshot is created. If false is specified, a DB snapshot is created before the DB instance is deleted"
                                        },
                                        "snapshot_identifier": {
                                            "default": null,
                                            "description": "Specifies whether or not to create this database from a snapshot. This correlates to the snapshot ID you'd find in the RDS console, e.g: rds:production-2015-06-26-06-05."
                                        },
                                        "storage_encrypted": {
                                            "default": true,
                                            "description": "Specifies whether the DB instance is encrypted"
                                        },
                                        "storage_type": {
                                            "default": null,
                                            "description": "One of 'standard' (magnetic), 'gp2' (general purpose SSD), or 'io1' (provisioned IOPS SSD). The default is 'io1' if iops is specified, 'standard' if not. Note that this behaviour is different from the AWS web console, where the default is 'gp2'."
                                        },
                                        "tags": {
                                            "default": {},
                                            "description": "A mapping of tags to assign to all resources"
                                        },
                                        "timeouts": {
                                            "default": {},
                                            "description": "Updated Terraform resource management timeouts. Applies to `aws_db_instance` in particular to permit resource management times"
                                        },
                                        "timezone": {
                                            "default": null,
                                            "description": "Time zone of the DB instance. timezone is currently only supported by Microsoft SQL Server. The timezone can only be set on creation. See MSSQL User Guide for more information."
                                        },
                                        "username": {
                                            "default": null,
                                            "description": "Username for the master DB user"
                                        },
                                        "vpc_security_group_ids": {
                                            "default": [],
                                            "description": "List of VPC security groups to associate"
                                        }
                                    }
                                }
                            },
                            "db_option_group": {
                                "source": "./modules/db_option_group",
                                "expressions": {
                                    "create": {
                                        "references": [
                                            "local.create_db_option_group"
                                        ]
                                    },
                                    "engine_name": {
                                        "references": [
                                            "var.engine"
                                        ]
                                    },
                                    "major_engine_version": {
                                        "references": [
                                            "var.major_engine_version"
                                        ]
                                    },
                                    "name": {
                                        "references": [
                                            "var.option_group_name",
                                            "var.identifier"
                                        ]
                                    },
                                    "option_group_description": {
                                        "references": [
                                            "var.option_group_description"
                                        ]
                                    },
                                    "options": {
                                        "references": [
                                            "var.options"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.tags",
                                            "var.db_option_group_tags"
                                        ]
                                    },
                                    "timeouts": {
                                        "references": [
                                            "var.option_group_timeouts"
                                        ]
                                    },
                                    "use_name_prefix": {
                                        "references": [
                                            "var.option_group_use_name_prefix"
                                        ]
                                    }
                                },
                                "module": {
                                    "outputs": {
                                        "db_option_group_arn": {
                                            "expression": {
                                                "references": [
                                                    "aws_db_option_group.this[0].arn",
                                                    "aws_db_option_group.this[0]",
                                                    "aws_db_option_group.this"
                                                ]
                                            },
                                            "description": "The ARN of the db option group"
                                        },
                                        "db_option_group_id": {
                                            "expression": {
                                                "references": [
                                                    "aws_db_option_group.this[0].id",
                                                    "aws_db_option_group.this[0]",
                                                    "aws_db_option_group.this"
                                                ]
                                            },
                                            "description": "The db option group id"
                                        }
                                    },
                                    "resources": [
                                        {
                                            "address": "aws_db_option_group.this",
                                            "mode": "managed",
                                            "type": "aws_db_option_group",
                                            "name": "this",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "engine_name": {
                                                    "references": [
                                                        "var.engine_name"
                                                    ]
                                                },
                                                "major_engine_version": {
                                                    "references": [
                                                        "var.major_engine_version"
                                                    ]
                                                },
                                                "name": {
                                                    "references": [
                                                        "local.name"
                                                    ]
                                                },
                                                "name_prefix": {
                                                    "references": [
                                                        "local.name_prefix"
                                                    ]
                                                },
                                                "option_group_description": {
                                                    "references": [
                                                        "local.description"
                                                    ]
                                                },
                                                "tags": {
                                                    "references": [
                                                        "var.tags",
                                                        "var.name"
                                                    ]
                                                },
                                                "timeouts": {
                                                    "delete": {
                                                        "references": [
                                                            "var.timeouts"
                                                        ]
                                                    }
                                                }
                                            },
                                            "schema_version": 0,
                                            "count_expression": {
                                                "references": [
                                                    "var.create"
                                                ]
                                            }
                                        }
                                    ],
                                    "variables": {
                                        "create": {
                                            "default": true,
                                            "description": "Whether to create this resource or not?"
                                        },
                                        "engine_name": {
                                            "default": null,
                                            "description": "Specifies the name of the engine that this option group should be associated with"
                                        },
                                        "major_engine_version": {
                                            "default": null,
                                            "description": "Specifies the major version of the engine that this option group should be associated with"
                                        },
                                        "name": {
                                            "default": "",
                                            "description": "The name of the option group"
                                        },
                                        "option_group_description": {
                                            "default": null,
                                            "description": "The description of the option group"
                                        },
                                        "options": {
                                            "default": [],
                                            "description": "A list of Options to apply"
                                        },
                                        "tags": {
                                            "default": {},
                                            "description": "A mapping of tags to assign to the resource"
                                        },
                                        "timeouts": {
                                            "default": {},
                                            "description": "Define maximum timeout for deletion of `aws_db_option_group` resource"
                                        },
                                        "use_name_prefix": {
                                            "default": true,
                                            "description": "Determines whether to use `name` as is or create a unique name beginning with `name` as the specified prefix"
                                        }
                                    }
                                }
                            },
                            "db_parameter_group": {
                                "source": "./modules/db_parameter_group",
                                "expressions": {
                                    "create": {
                                        "references": [
                                            "local.create_db_parameter_group"
                                        ]
                                    },
                                    "description": {
                                        "references": [
                                            "var.parameter_group_description"
                                        ]
                                    },
                                    "family": {
                                        "references": [
                                            "var.family"
                                        ]
                                    },
                                    "name": {
                                        "references": [
                                            "var.parameter_group_name",
                                            "var.identifier"
                                        ]
                                    },
                                    "parameters": {
                                        "references": [
                                            "var.parameters"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.tags",
                                            "var.db_parameter_group_tags"
                                        ]
                                    },
                                    "use_name_prefix": {
                                        "references": [
                                            "var.parameter_group_use_name_prefix"
                                        ]
                                    }
                                },
                                "module": {
                                    "outputs": {
                                        "db_parameter_group_arn": {
                                            "expression": {
                                                "references": [
                                                    "aws_db_parameter_group.this[0].arn",
                                                    "aws_db_parameter_group.this[0]",
                                                    "aws_db_parameter_group.this"
                                                ]
                                            },
                                            "description": "The ARN of the db parameter group"
                                        },
                                        "db_parameter_group_id": {
                                            "expression": {
                                                "references": [
                                                    "aws_db_parameter_group.this[0].id",
                                                    "aws_db_parameter_group.this[0]",
                                                    "aws_db_parameter_group.this"
                                                ]
                                            },
                                            "description": "The db parameter group id"
                                        }
                                    },
                                    "resources": [
                                        {
                                            "address": "aws_db_parameter_group.this",
                                            "mode": "managed",
                                            "type": "aws_db_parameter_group",
                                            "name": "this",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "description": {
                                                    "references": [
                                                        "local.description"
                                                    ]
                                                },
                                                "family": {
                                                    "references": [
                                                        "var.family"
                                                    ]
                                                },
                                                "name": {
                                                    "references": [
                                                        "local.name"
                                                    ]
                                                },
                                                "name_prefix": {
                                                    "references": [
                                                        "local.name_prefix"
                                                    ]
                                                },
                                                "tags": {
                                                    "references": [
                                                        "var.tags",
                                                        "var.name"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0,
                                            "count_expression": {
                                                "references": [
                                                    "var.create"
                                                ]
                                            }
                                        }
                                    ],
                                    "variables": {
                                        "create": {
                                            "default": true,
                                            "description": "Whether to create this resource or not?"
                                        },
                                        "description": {
                                            "default": null,
                                            "description": "The description of the DB parameter group"
                                        },
                                        "family": {
                                            "default": null,
                                            "description": "The family of the DB parameter group"
                                        },
                                        "name": {
                                            "default": "",
                                            "description": "The name of the DB parameter group"
                                        },
                                        "parameters": {
                                            "default": [],
                                            "description": "A list of DB parameter maps to apply"
                                        },
                                        "tags": {
                                            "default": {},
                                            "description": "A mapping of tags to assign to the resource"
                                        },
                                        "use_name_prefix": {
                                            "default": true,
                                            "description": "Determines whether to use `name` as is or create a unique name beginning with `name` as the specified prefix"
                                        }
                                    }
                                }
                            },
                            "db_subnet_group": {
                                "source": "./modules/db_subnet_group",
                                "expressions": {
                                    "create": {
                                        "references": [
                                            "local.create_db_subnet_group"
                                        ]
                                    },
                                    "description": {
                                        "references": [
                                            "var.db_subnet_group_description"
                                        ]
                                    },
                                    "name": {
                                        "references": [
                                            "var.db_subnet_group_name",
                                            "var.identifier"
                                        ]
                                    },
                                    "subnet_ids": {
                                        "references": [
                                            "var.subnet_ids"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.tags",
                                            "var.db_subnet_group_tags"
                                        ]
                                    },
                                    "use_name_prefix": {
                                        "references": [
                                            "var.db_subnet_group_use_name_prefix"
                                        ]
                                    }
                                },
                                "module": {
                                    "outputs": {
                                        "db_subnet_group_arn": {
                                            "expression": {
                                                "references": [
                                                    "aws_db_subnet_group.this[0].arn",
                                                    "aws_db_subnet_group.this[0]",
                                                    "aws_db_subnet_group.this"
                                                ]
                                            },
                                            "description": "The ARN of the db subnet group"
                                        },
                                        "db_subnet_group_id": {
                                            "expression": {
                                                "references": [
                                                    "aws_db_subnet_group.this[0].id",
                                                    "aws_db_subnet_group.this[0]",
                                                    "aws_db_subnet_group.this"
                                                ]
                                            },
                                            "description": "The db subnet group name"
                                        }
                                    },
                                    "resources": [
                                        {
                                            "address": "aws_db_subnet_group.this",
                                            "mode": "managed",
                                            "type": "aws_db_subnet_group",
                                            "name": "this",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "description": {
                                                    "references": [
                                                        "local.description"
                                                    ]
                                                },
                                                "name": {
                                                    "references": [
                                                        "local.name"
                                                    ]
                                                },
                                                "name_prefix": {
                                                    "references": [
                                                        "local.name_prefix"
                                                    ]
                                                },
                                                "subnet_ids": {
                                                    "references": [
                                                        "var.subnet_ids"
                                                    ]
                                                },
                                                "tags": {
                                                    "references": [
                                                        "var.tags",
                                                        "var.name"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0,
                                            "count_expression": {
                                                "references": [
                                                    "var.create"
                                                ]
                                            }
                                        }
                                    ],
                                    "variables": {
                                        "create": {
                                            "default": true,
                                            "description": "Whether to create this resource or not?"
                                        },
                                        "description": {
                                            "default": null,
                                            "description": "The description of the DB subnet group"
                                        },
                                        "name": {
                                            "default": "",
                                            "description": "The name of the DB subnet group"
                                        },
                                        "subnet_ids": {
                                            "default": [],
                                            "description": "A list of VPC subnet IDs"
                                        },
                                        "tags": {
                                            "default": {},
                                            "description": "A mapping of tags to assign to the resource"
                                        },
                                        "use_name_prefix": {
                                            "default": true,
                                            "description": "Determines whether to use `name` as is or create a unique name beginning with `name` as the specified prefix"
                                        }
                                    }
                                }
                            }
                        },
                        "variables": {
                            "allocated_storage": {
                                "default": null,
                                "description": "The allocated storage in gigabytes"
                            },
                            "allow_major_version_upgrade": {
                                "default": false,
                                "description": "Indicates that major version upgrades are allowed. Changing this parameter does not result in an outage and the change is asynchronously applied as soon as possible"
                            },
                            "apply_immediately": {
                                "default": false,
                                "description": "Specifies whether any database modifications are applied immediately, or during the next maintenance window"
                            },
                            "auto_minor_version_upgrade": {
                                "default": true,
                                "description": "Indicates that minor engine upgrades will be applied automatically to the DB instance during the maintenance window"
                            },
                            "availability_zone": {
                                "default": null,
                                "description": "The Availability Zone of the RDS instance"
                            },
                            "backup_retention_period": {
                                "default": null,
                                "description": "The days to retain backups for"
                            },
                            "backup_window": {
                                "default": null,
                                "description": "The daily time range (in UTC) during which automated backups are created if they are enabled. Example: '09:46-10:16'. Must not overlap with maintenance_window"
                            },
                            "ca_cert_identifier": {
                                "default": null,
                                "description": "Specifies the identifier of the CA certificate for the DB instance"
                            },
                            "character_set_name": {
                                "default": null,
                                "description": "The character set name to use for DB encoding in Oracle instances. This can't be changed. See Oracle Character Sets Supported in Amazon RDS and Collations and Character Sets for Microsoft SQL Server for more information. This can only be set on creation"
                            },
                            "cloudwatch_log_group_kms_key_id": {
                                "default": null,
                                "description": "The ARN of the KMS Key to use when encrypting log data"
                            },
                            "cloudwatch_log_group_retention_in_days": {
                                "default": 7,
                                "description": "The number of days to retain CloudWatch logs for the DB instance"
                            },
                            "copy_tags_to_snapshot": {
                                "default": false,
                                "description": "On delete, copy all Instance tags to the final snapshot"
                            },
                            "create_cloudwatch_log_group": {
                                "default": false,
                                "description": "Determines whether a CloudWatch log group is created for each `enabled_cloudwatch_logs_exports`"
                            },
                            "create_db_instance": {
                                "default": true,
                                "description": "Whether to create a database instance"
                            },
                            "create_db_option_group": {
                                "default": true,
                                "description": "Create a database option group"
                            },
                            "create_db_parameter_group": {
                                "default": true,
                                "description": "Whether to create a database parameter group"
                            },
                            "create_db_subnet_group": {
                                "default": false,
                                "description": "Whether to create a database subnet group"
                            },
                            "create_monitoring_role": {
                                "default": false,
                                "description": "Create IAM role with a defined name that permits RDS to send enhanced monitoring metrics to CloudWatch Logs"
                            },
                            "create_random_password": {
                                "default": true,
                                "description": "Whether to create random password for RDS primary cluster"
                            },
                            "db_instance_tags": {
                                "default": {},
                                "description": "Additional tags for the DB instance"
                            },
                            "db_name": {
                                "default": null,
                                "description": "The DB name to create. If omitted, no database is created initially"
                            },
                            "db_option_group_tags": {
                                "default": {},
                                "description": "Additional tags for the DB option group"
                            },
                            "db_parameter_group_tags": {
                                "default": {},
                                "description": "Additional tags for the  DB parameter group"
                            },
                            "db_subnet_group_description": {
                                "default": null,
                                "description": "Description of the DB subnet group to create"
                            },
                            "db_subnet_group_name": {
                                "default": null,
                                "description": "Name of DB subnet group. DB instance will be created in the VPC associated with the DB subnet group. If unspecified, will be created in the default VPC"
                            },
                            "db_subnet_group_tags": {
                                "default": {},
                                "description": "Additional tags for the DB subnet group"
                            },
                            "db_subnet_group_use_name_prefix": {
                                "default": true,
                                "description": "Determines whether to use `subnet_group_name` as is or create a unique name beginning with the `subnet_group_name` as the prefix"
                            },
                            "delete_automated_backups": {
                                "default": true,
                                "description": "Specifies whether to remove automated backups immediately after the DB instance is deleted"
                            },
                            "deletion_protection": {
                                "default": false,
                                "description": "The database can't be deleted when this value is set to true"
                            },
                            "domain": {
                                "default": null,
                                "description": "The ID of the Directory Service Active Directory domain to create the instance in"
                            },
                            "domain_iam_role_name": {
                                "default": null,
                                "description": "(Required if domain is provided) The name of the IAM role to be used when making API calls to the Directory Service"
                            },
                            "enabled_cloudwatch_logs_exports": {
                                "default": [],
                                "description": "List of log types to enable for exporting to CloudWatch logs. If omitted, no logs will be exported. Valid values (depending on engine): alert, audit, error, general, listener, slowquery, trace, postgresql (PostgreSQL), upgrade (PostgreSQL)"
                            },
                            "engine": {
                                "default": null,
                                "description": "The database engine to use"
                            },
                            "engine_version": {
                                "default": null,
                                "description": "The engine version to use"
                            },
                            "family": {
                                "default": null,
                                "description": "The family of the DB parameter group"
                            },
                            "final_snapshot_identifier_prefix": {
                                "default": "final",
                                "description": "The name which is prefixed to the final snapshot on cluster destroy"
                            },
                            "iam_database_authentication_enabled": {
                                "default": false,
                                "description": "Specifies whether or not the mappings of AWS Identity and Access Management (IAM) accounts to database accounts are enabled"
                            },
                            "identifier": {
                                "description": "The name of the RDS instance"
                            },
                            "instance_class": {
                                "default": null,
                                "description": "The instance type of the RDS instance"
                            },
                            "iops": {
                                "default": 0,
                                "description": "The amount of provisioned IOPS. Setting this implies a storage_type of 'io1'"
                            },
                            "kms_key_id": {
                                "default": null,
                                "description": "The ARN for the KMS encryption key. If creating an encrypted replica, set this to the destination KMS ARN. If storage_encrypted is set to true and kms_key_id is not specified the default KMS key created in your account will be used"
                            },
                            "license_model": {
                                "default": null,
                                "description": "License model information for this DB instance. Optional, but required for some DB engines, i.e. Oracle SE1"
                            },
                            "maintenance_window": {
                                "default": null,
                                "description": "The window to perform maintenance in. Syntax: 'ddd:hh24:mi-ddd:hh24:mi'. Eg: 'Mon:00:00-Mon:03:00'"
                            },
                            "major_engine_version": {
                                "default": null,
                                "description": "Specifies the major version of the engine that this option group should be associated with"
                            },
                            "max_allocated_storage": {
                                "default": 0,
                                "description": "Specifies the value for Storage Autoscaling"
                            },
                            "monitoring_interval": {
                                "default": 0,
                                "description": "The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB instance. To disable collecting Enhanced Monitoring metrics, specify 0. The default is 0. Valid Values: 0, 1, 5, 10, 15, 30, 60"
                            },
                            "monitoring_role_arn": {
                                "default": null,
                                "description": "The ARN for the IAM role that permits RDS to send enhanced monitoring metrics to CloudWatch Logs. Must be specified if monitoring_interval is non-zero"
                            },
                            "monitoring_role_description": {
                                "default": null,
                                "description": "Description of the monitoring IAM role"
                            },
                            "monitoring_role_name": {
                                "default": "rds-monitoring-role",
                                "description": "Name of the IAM role which will be created when create_monitoring_role is enabled"
                            },
                            "multi_az": {
                                "default": false,
                                "description": "Specifies if the RDS instance is multi-AZ"
                            },
                            "option_group_description": {
                                "default": null,
                                "description": "The description of the option group"
                            },
                            "option_group_name": {
                                "default": null,
                                "description": "Name of the option group"
                            },
                            "option_group_timeouts": {
                                "default": {},
                                "description": "Define maximum timeout for deletion of `aws_db_option_group` resource"
                            },
                            "option_group_use_name_prefix": {
                                "default": true,
                                "description": "Determines whether to use `option_group_name` as is or create a unique name beginning with the `option_group_name` as the prefix"
                            },
                            "options": {
                                "default": [],
                                "description": "A list of Options to apply"
                            },
                            "parameter_group_description": {
                                "default": null,
                                "description": "Description of the DB parameter group to create"
                            },
                            "parameter_group_name": {
                                "default": null,
                                "description": "Name of the DB parameter group to associate or create"
                            },
                            "parameter_group_use_name_prefix": {
                                "default": true,
                                "description": "Determines whether to use `parameter_group_name` as is or create a unique name beginning with the `parameter_group_name` as the prefix"
                            },
                            "parameters": {
                                "default": [],
                                "description": "A list of DB parameters (map) to apply"
                            },
                            "password": {
                                "default": null,
                                "description": "Password for the master DB user. Note that this may show up in logs, and it will be stored in the state file"
                            },
                            "performance_insights_enabled": {
                                "default": false,
                                "description": "Specifies whether Performance Insights are enabled"
                            },
                            "performance_insights_kms_key_id": {
                                "default": null,
                                "description": "The ARN for the KMS key to encrypt Performance Insights data"
                            },
                            "performance_insights_retention_period": {
                                "default": 7,
                                "description": "The amount of time in days to retain Performance Insights data. Either 7 (7 days) or 731 (2 years)"
                            },
                            "port": {
                                "default": null,
                                "description": "The port on which the DB accepts connections"
                            },
                            "publicly_accessible": {
                                "default": false,
                                "description": "Bool to control if instance is publicly accessible"
                            },
                            "putin_khuylo": {
                                "default": true,
                                "description": "Do you agree that Putin doesn't respect Ukrainian sovereignty and territorial integrity? More info: https://en.wikipedia.org/wiki/Putin_khuylo!"
                            },
                            "random_password_length": {
                                "default": 16,
                                "description": "Length of random password to create"
                            },
                            "replica_mode": {
                                "default": null,
                                "description": "Specifies whether the replica is in either mounted or open-read-only mode. This attribute is only supported by Oracle instances. Oracle replicas operate in open-read-only mode unless otherwise specified"
                            },
                            "replicate_source_db": {
                                "default": null,
                                "description": "Specifies that this resource is a Replicate database, and to use this value as the source database. This correlates to the identifier of another Amazon RDS Database to replicate"
                            },
                            "restore_to_point_in_time": {
                                "default": null,
                                "description": "Restore to a point in time (MySQL is NOT supported)"
                            },
                            "s3_import": {
                                "default": null,
                                "description": "Restore from a Percona Xtrabackup in S3 (only MySQL is supported)"
                            },
                            "skip_final_snapshot": {
                                "default": false,
                                "description": "Determines whether a final DB snapshot is created before the DB instance is deleted. If true is specified, no DBSnapshot is created. If false is specified, a DB snapshot is created before the DB instance is deleted"
                            },
                            "snapshot_identifier": {
                                "default": null,
                                "description": "Specifies whether or not to create this database from a snapshot. This correlates to the snapshot ID you'd find in the RDS console, e.g: rds:production-2015-06-26-06-05"
                            },
                            "storage_encrypted": {
                                "default": true,
                                "description": "Specifies whether the DB instance is encrypted"
                            },
                            "storage_type": {
                                "default": null,
                                "description": "One of 'standard' (magnetic), 'gp2' (general purpose SSD), or 'io1' (provisioned IOPS SSD). The default is 'io1' if iops is specified, 'gp2' if not"
                            },
                            "subnet_ids": {
                                "default": [],
                                "description": "A list of VPC subnet IDs"
                            },
                            "tags": {
                                "default": {},
                                "description": "A mapping of tags to assign to all resources"
                            },
                            "timeouts": {
                                "default": {},
                                "description": "Updated Terraform resource management timeouts. Applies to `aws_db_instance` in particular to permit resource management times"
                            },
                            "timezone": {
                                "default": null,
                                "description": "Time zone of the DB instance. timezone is currently only supported by Microsoft SQL Server. The timezone can only be set on creation. See MSSQL User Guide for more information"
                            },
                            "username": {
                                "default": null,
                                "description": "Username for the master DB user"
                            },
                            "vpc_security_group_ids": {
                                "default": [],
                                "description": "List of VPC security groups to associate"
                            }
                        }
                    }
                },
                "db_default": {
                    "source": "../../my-custom-rds-module",
                    "expressions": {
                        "allocated_storage": {
                            "constant_value": 20
                        },
                        "backup_retention_period": {
                            "constant_value": 0
                        },
                        "backup_window": {
                            "constant_value": "03:00-06:00"
                        },
                        "create_db_option_group": {
                            "constant_value": false
                        },
                        "create_db_parameter_group": {
                            "constant_value": false
                        },
                        "db_name": {
                            "constant_value": "completePostgresql"
                        },
                        "db_subnet_group_name": {
                            "references": [
                                "module.vpc.database_subnet_group",
                                "module.vpc"
                            ]
                        },
                        "engine": {
                            "constant_value": "postgres"
                        },
                        "engine_version": {
                            "constant_value": "14.1"
                        },
                        "family": {
                            "constant_value": "postgres14"
                        },
                        "identifier": {
                            "references": [
                                "local.name"
                            ]
                        },
                        "instance_class": {
                            "constant_value": "db.t4g.large"
                        },
                        "maintenance_window": {
                            "constant_value": "Mon:00:00-Mon:03:00"
                        },
                        "major_engine_version": {
                            "constant_value": "14"
                        },
                        "port": {
                            "constant_value": 5432
                        },
                        "tags": {
                            "references": [
                                "local.tags"
                            ]
                        },
                        "username": {
                            "constant_value": "complete_postgresql"
                        },
                        "vpc_security_group_ids": {
                            "references": [
                                "module.security_group.security_group_id",
                                "module.security_group"
                            ]
                        }
                    },
                    "module": {
                        "outputs": {
                            "db_instance_address": {
                                "expression": {
                                    "references": [
                                        "module.db_instance.db_instance_address",
                                        "module.db_instance"
                                    ]
                                },
                                "description": "The address of the RDS instance"
                            },
                            "db_instance_arn": {
                                "expression": {
                                    "references": [
                                        "module.db_instance.db_instance_arn",
                                        "module.db_instance"
                                    ]
                                },
                                "description": "The ARN of the RDS instance"
                            },
                            "db_instance_availability_zone": {
                                "expression": {
                                    "references": [
                                        "module.db_instance.db_instance_availability_zone",
                                        "module.db_instance"
                                    ]
                                },
                                "description": "The availability zone of the RDS instance"
                            },
                            "db_instance_ca_cert_identifier": {
                                "expression": {
                                    "references": [
                                        "module.db_instance.db_instance_ca_cert_identifier",
                                        "module.db_instance"
                                    ]
                                },
                                "description": "Specifies the identifier of the CA certificate for the DB instance"
                            },
                            "db_instance_cloudwatch_log_groups": {
                                "expression": {
                                    "references": [
                                        "module.db_instance.db_instance_cloudwatch_log_groups",
                                        "module.db_instance"
                                    ]
                                },
                                "description": "Map of CloudWatch log groups created and their attributes"
                            },
                            "db_instance_domain": {
                                "expression": {
                                    "references": [
                                        "module.db_instance.db_instance_domain",
                                        "module.db_instance"
                                    ]
                                },
                                "description": "The ID of the Directory Service Active Directory domain the instance is joined to"
                            },
                            "db_instance_domain_iam_role_name": {
                                "expression": {
                                    "references": [
                                        "module.db_instance.db_instance_domain_iam_role_name",
                                        "module.db_instance"
                                    ]
                                },
                                "description": "The name of the IAM role to be used when making API calls to the Directory Service. "
                            },
                            "db_instance_endpoint": {
                                "expression": {
                                    "references": [
                                        "module.db_instance.db_instance_endpoint",
                                        "module.db_instance"
                                    ]
                                },
                                "description": "The connection endpoint"
                            },
                            "db_instance_engine": {
                                "expression": {
                                    "references": [
                                        "module.db_instance.db_instance_engine",
                                        "module.db_instance"
                                    ]
                                },
                                "description": "The database engine"
                            },
                            "db_instance_engine_version_actual": {
                                "expression": {
                                    "references": [
                                        "module.db_instance.db_instance_engine_version_actual",
                                        "module.db_instance"
                                    ]
                                },
                                "description": "The running version of the database"
                            },
                            "db_instance_hosted_zone_id": {
                                "expression": {
                                    "references": [
                                        "module.db_instance.db_instance_hosted_zone_id",
                                        "module.db_instance"
                                    ]
                                },
                                "description": "The canonical hosted zone ID of the DB instance (to be used in a Route 53 Alias record)"
                            },
                            "db_instance_id": {
                                "expression": {
                                    "references": [
                                        "module.db_instance.db_instance_id",
                                        "module.db_instance"
                                    ]
                                },
                                "description": "The RDS instance ID"
                            },
                            "db_instance_name": {
                                "expression": {
                                    "references": [
                                        "module.db_instance.db_instance_name",
                                        "module.db_instance"
                                    ]
                                },
                                "description": "The database name"
                            },
                            "db_instance_password": {
                                "sensitive": true,
                                "expression": {
                                    "references": [
                                        "local.password"
                                    ]
                                },
                                "description": "The database password (this password may be old, because Terraform doesn't track it after initial creation)"
                            },
                            "db_instance_port": {
                                "expression": {
                                    "references": [
                                        "module.db_instance.db_instance_port",
                                        "module.db_instance"
                                    ]
                                },
                                "description": "The database port"
                            },
                            "db_instance_resource_id": {
                                "expression": {
                                    "references": [
                                        "module.db_instance.db_instance_resource_id",
                                        "module.db_instance"
                                    ]
                                },
                                "description": "The RDS Resource ID of this instance"
                            },
                            "db_instance_status": {
                                "expression": {
                                    "references": [
                                        "module.db_instance.db_instance_status",
                                        "module.db_instance"
                                    ]
                                },
                                "description": "The RDS instance status"
                            },
                            "db_instance_username": {
                                "sensitive": true,
                                "expression": {
                                    "references": [
                                        "module.db_instance.db_instance_username",
                                        "module.db_instance"
                                    ]
                                },
                                "description": "The master username for the database"
                            },
                            "db_option_group_arn": {
                                "expression": {
                                    "references": [
                                        "module.db_option_group.db_option_group_arn",
                                        "module.db_option_group"
                                    ]
                                },
                                "description": "The ARN of the db option group"
                            },
                            "db_option_group_id": {
                                "expression": {
                                    "references": [
                                        "module.db_option_group.db_option_group_id",
                                        "module.db_option_group"
                                    ]
                                },
                                "description": "The db option group id"
                            },
                            "db_parameter_group_arn": {
                                "expression": {
                                    "references": [
                                        "module.db_parameter_group.db_parameter_group_arn",
                                        "module.db_parameter_group"
                                    ]
                                },
                                "description": "The ARN of the db parameter group"
                            },
                            "db_parameter_group_id": {
                                "expression": {
                                    "references": [
                                        "module.db_parameter_group.db_parameter_group_id",
                                        "module.db_parameter_group"
                                    ]
                                },
                                "description": "The db parameter group id"
                            },
                            "db_subnet_group_arn": {
                                "expression": {
                                    "references": [
                                        "module.db_subnet_group.db_subnet_group_arn",
                                        "module.db_subnet_group"
                                    ]
                                },
                                "description": "The ARN of the db subnet group"
                            },
                            "db_subnet_group_id": {
                                "expression": {
                                    "references": [
                                        "module.db_subnet_group.db_subnet_group_id",
                                        "module.db_subnet_group"
                                    ]
                                },
                                "description": "The db subnet group name"
                            },
                            "enhanced_monitoring_iam_role_arn": {
                                "expression": {
                                    "references": [
                                        "module.db_instance.enhanced_monitoring_iam_role_arn",
                                        "module.db_instance"
                                    ]
                                },
                                "description": "The Amazon Resource Name (ARN) specifying the monitoring role"
                            },
                            "enhanced_monitoring_iam_role_name": {
                                "expression": {
                                    "references": [
                                        "module.db_instance.enhanced_monitoring_iam_role_name",
                                        "module.db_instance"
                                    ]
                                },
                                "description": "The name of the monitoring role"
                            }
                        },
                        "resources": [
                            {
                                "address": "random_password.master_password",
                                "mode": "managed",
                                "type": "random_password",
                                "name": "master_password",
                                "provider_config_key": "module.db_default:random",
                                "expressions": {
                                    "length": {
                                        "references": [
                                            "var.random_password_length"
                                        ]
                                    },
                                    "special": {
                                        "constant_value": false
                                    }
                                },
                                "schema_version": 1,
                                "count_expression": {
                                    "references": [
                                        "local.create_random_password"
                                    ]
                                }
                            }
                        ],
                        "module_calls": {
                            "db_instance": {
                                "source": "./modules/db_instance",
                                "expressions": {
                                    "allocated_storage": {
                                        "references": [
                                            "var.allocated_storage"
                                        ]
                                    },
                                    "allow_major_version_upgrade": {
                                        "references": [
                                            "var.allow_major_version_upgrade"
                                        ]
                                    },
                                    "apply_immediately": {
                                        "references": [
                                            "var.apply_immediately"
                                        ]
                                    },
                                    "auto_minor_version_upgrade": {
                                        "references": [
                                            "var.auto_minor_version_upgrade"
                                        ]
                                    },
                                    "availability_zone": {
                                        "references": [
                                            "var.availability_zone"
                                        ]
                                    },
                                    "backup_retention_period": {
                                        "references": [
                                            "var.backup_retention_period"
                                        ]
                                    },
                                    "backup_window": {
                                        "references": [
                                            "var.backup_window"
                                        ]
                                    },
                                    "ca_cert_identifier": {
                                        "references": [
                                            "var.ca_cert_identifier"
                                        ]
                                    },
                                    "character_set_name": {
                                        "references": [
                                            "var.character_set_name"
                                        ]
                                    },
                                    "cloudwatch_log_group_kms_key_id": {
                                        "references": [
                                            "var.cloudwatch_log_group_kms_key_id"
                                        ]
                                    },
                                    "cloudwatch_log_group_retention_in_days": {
                                        "references": [
                                            "var.cloudwatch_log_group_retention_in_days"
                                        ]
                                    },
                                    "copy_tags_to_snapshot": {
                                        "references": [
                                            "var.copy_tags_to_snapshot"
                                        ]
                                    },
                                    "create": {
                                        "references": [
                                            "local.create_db_instance"
                                        ]
                                    },
                                    "create_cloudwatch_log_group": {
                                        "references": [
                                            "var.create_cloudwatch_log_group"
                                        ]
                                    },
                                    "create_monitoring_role": {
                                        "references": [
                                            "var.create_monitoring_role"
                                        ]
                                    },
                                    "db_name": {
                                        "references": [
                                            "var.db_name"
                                        ]
                                    },
                                    "db_subnet_group_name": {
                                        "references": [
                                            "local.db_subnet_group_name"
                                        ]
                                    },
                                    "delete_automated_backups": {
                                        "references": [
                                            "var.delete_automated_backups"
                                        ]
                                    },
                                    "deletion_protection": {
                                        "references": [
                                            "var.deletion_protection"
                                        ]
                                    },
                                    "domain": {
                                        "references": [
                                            "var.domain"
                                        ]
                                    },
                                    "domain_iam_role_name": {
                                        "references": [
                                            "var.domain_iam_role_name"
                                        ]
                                    },
                                    "enabled_cloudwatch_logs_exports": {
                                        "references": [
                                            "var.enabled_cloudwatch_logs_exports"
                                        ]
                                    },
                                    "engine": {
                                        "references": [
                                            "var.engine"
                                        ]
                                    },
                                    "engine_version": {
                                        "references": [
                                            "var.engine_version"
                                        ]
                                    },
                                    "final_snapshot_identifier_prefix": {
                                        "references": [
                                            "var.final_snapshot_identifier_prefix"
                                        ]
                                    },
                                    "iam_database_authentication_enabled": {
                                        "references": [
                                            "var.iam_database_authentication_enabled"
                                        ]
                                    },
                                    "identifier": {
                                        "references": [
                                            "var.identifier"
                                        ]
                                    },
                                    "instance_class": {
                                        "references": [
                                            "var.instance_class"
                                        ]
                                    },
                                    "iops": {
                                        "references": [
                                            "var.iops"
                                        ]
                                    },
                                    "kms_key_id": {
                                        "references": [
                                            "var.kms_key_id"
                                        ]
                                    },
                                    "license_model": {
                                        "references": [
                                            "var.license_model"
                                        ]
                                    },
                                    "maintenance_window": {
                                        "references": [
                                            "var.maintenance_window"
                                        ]
                                    },
                                    "max_allocated_storage": {
                                        "references": [
                                            "var.max_allocated_storage"
                                        ]
                                    },
                                    "monitoring_interval": {
                                        "references": [
                                            "var.monitoring_interval"
                                        ]
                                    },
                                    "monitoring_role_arn": {
                                        "references": [
                                            "var.monitoring_role_arn"
                                        ]
                                    },
                                    "monitoring_role_description": {
                                        "references": [
                                            "var.monitoring_role_description"
                                        ]
                                    },
                                    "monitoring_role_name": {
                                        "references": [
                                            "var.monitoring_role_name"
                                        ]
                                    },
                                    "multi_az": {
                                        "references": [
                                            "var.multi_az"
                                        ]
                                    },
                                    "option_group_name": {
                                        "references": [
                                            "local.option_group"
                                        ]
                                    },
                                    "parameter_group_name": {
                                        "references": [
                                            "local.parameter_group_name_id"
                                        ]
                                    },
                                    "password": {
                                        "references": [
                                            "local.password"
                                        ]
                                    },
                                    "performance_insights_enabled": {
                                        "references": [
                                            "var.performance_insights_enabled"
                                        ]
                                    },
                                    "performance_insights_kms_key_id": {
                                        "references": [
                                            "var.performance_insights_enabled",
                                            "var.performance_insights_kms_key_id"
                                        ]
                                    },
                                    "performance_insights_retention_period": {
                                        "references": [
                                            "var.performance_insights_retention_period"
                                        ]
                                    },
                                    "port": {
                                        "references": [
                                            "var.port"
                                        ]
                                    },
                                    "publicly_accessible": {
                                        "references": [
                                            "var.publicly_accessible"
                                        ]
                                    },
                                    "replica_mode": {
                                        "references": [
                                            "var.replica_mode"
                                        ]
                                    },
                                    "replicate_source_db": {
                                        "references": [
                                            "var.replicate_source_db"
                                        ]
                                    },
                                    "restore_to_point_in_time": {
                                        "references": [
                                            "var.restore_to_point_in_time"
                                        ]
                                    },
                                    "s3_import": {
                                        "references": [
                                            "var.s3_import"
                                        ]
                                    },
                                    "skip_final_snapshot": {
                                        "references": [
                                            "var.skip_final_snapshot"
                                        ]
                                    },
                                    "snapshot_identifier": {
                                        "references": [
                                            "var.snapshot_identifier"
                                        ]
                                    },
                                    "storage_encrypted": {
                                        "references": [
                                            "var.storage_encrypted"
                                        ]
                                    },
                                    "storage_type": {
                                        "references": [
                                            "var.storage_type"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.tags",
                                            "var.db_instance_tags"
                                        ]
                                    },
                                    "timeouts": {
                                        "references": [
                                            "var.timeouts"
                                        ]
                                    },
                                    "timezone": {
                                        "references": [
                                            "var.timezone"
                                        ]
                                    },
                                    "username": {
                                        "references": [
                                            "var.username"
                                        ]
                                    },
                                    "vpc_security_group_ids": {
                                        "references": [
                                            "var.vpc_security_group_ids"
                                        ]
                                    }
                                },
                                "module": {
                                    "outputs": {
                                        "db_instance_address": {
                                            "expression": {
                                                "references": [
                                                    "aws_db_instance.this[0].address",
                                                    "aws_db_instance.this[0]",
                                                    "aws_db_instance.this"
                                                ]
                                            },
                                            "description": "The address of the RDS instance"
                                        },
                                        "db_instance_arn": {
                                            "expression": {
                                                "references": [
                                                    "aws_db_instance.this[0].arn",
                                                    "aws_db_instance.this[0]",
                                                    "aws_db_instance.this"
                                                ]
                                            },
                                            "description": "The ARN of the RDS instance"
                                        },
                                        "db_instance_availability_zone": {
                                            "expression": {
                                                "references": [
                                                    "aws_db_instance.this[0].availability_zone",
                                                    "aws_db_instance.this[0]",
                                                    "aws_db_instance.this"
                                                ]
                                            },
                                            "description": "The availability zone of the RDS instance"
                                        },
                                        "db_instance_ca_cert_identifier": {
                                            "expression": {
                                                "references": [
                                                    "aws_db_instance.this[0].ca_cert_identifier",
                                                    "aws_db_instance.this[0]",
                                                    "aws_db_instance.this"
                                                ]
                                            },
                                            "description": "Specifies the identifier of the CA certificate for the DB instance"
                                        },
                                        "db_instance_cloudwatch_log_groups": {
                                            "expression": {
                                                "references": [
                                                    "aws_cloudwatch_log_group.this"
                                                ]
                                            },
                                            "description": "Map of CloudWatch log groups created and their attributes"
                                        },
                                        "db_instance_domain": {
                                            "expression": {
                                                "references": [
                                                    "aws_db_instance.this[0].domain",
                                                    "aws_db_instance.this[0]",
                                                    "aws_db_instance.this"
                                                ]
                                            },
                                            "description": "The ID of the Directory Service Active Directory domain the instance is joined to"
                                        },
                                        "db_instance_domain_iam_role_name": {
                                            "expression": {
                                                "references": [
                                                    "aws_db_instance.this[0].domain_iam_role_name",
                                                    "aws_db_instance.this[0]",
                                                    "aws_db_instance.this"
                                                ]
                                            },
                                            "description": "The name of the IAM role to be used when making API calls to the Directory Service. "
                                        },
                                        "db_instance_endpoint": {
                                            "expression": {
                                                "references": [
                                                    "aws_db_instance.this[0].endpoint",
                                                    "aws_db_instance.this[0]",
                                                    "aws_db_instance.this"
                                                ]
                                            },
                                            "description": "The connection endpoint"
                                        },
                                        "db_instance_engine": {
                                            "expression": {
                                                "references": [
                                                    "aws_db_instance.this[0].engine",
                                                    "aws_db_instance.this[0]",
                                                    "aws_db_instance.this"
                                                ]
                                            },
                                            "description": "The database engine"
                                        },
                                        "db_instance_engine_version_actual": {
                                            "expression": {
                                                "references": [
                                                    "aws_db_instance.this[0].engine_version_actual",
                                                    "aws_db_instance.this[0]",
                                                    "aws_db_instance.this"
                                                ]
                                            },
                                            "description": "The running version of the database"
                                        },
                                        "db_instance_hosted_zone_id": {
                                            "expression": {
                                                "references": [
                                                    "aws_db_instance.this[0].hosted_zone_id",
                                                    "aws_db_instance.this[0]",
                                                    "aws_db_instance.this"
                                                ]
                                            },
                                            "description": "The canonical hosted zone ID of the DB instance (to be used in a Route 53 Alias record)"
                                        },
                                        "db_instance_id": {
                                            "expression": {
                                                "references": [
                                                    "aws_db_instance.this[0].id",
                                                    "aws_db_instance.this[0]",
                                                    "aws_db_instance.this"
                                                ]
                                            },
                                            "description": "The RDS instance ID"
                                        },
                                        "db_instance_name": {
                                            "expression": {
                                                "references": [
                                                    "aws_db_instance.this[0].name",
                                                    "aws_db_instance.this[0]",
                                                    "aws_db_instance.this"
                                                ]
                                            },
                                            "description": "The database name"
                                        },
                                        "db_instance_password": {
                                            "sensitive": true,
                                            "expression": {
                                                "references": [
                                                    "aws_db_instance.this[0].password",
                                                    "aws_db_instance.this[0]",
                                                    "aws_db_instance.this"
                                                ]
                                            },
                                            "description": "The master password"
                                        },
                                        "db_instance_port": {
                                            "expression": {
                                                "references": [
                                                    "aws_db_instance.this[0].port",
                                                    "aws_db_instance.this[0]",
                                                    "aws_db_instance.this"
                                                ]
                                            },
                                            "description": "The database port"
                                        },
                                        "db_instance_resource_id": {
                                            "expression": {
                                                "references": [
                                                    "aws_db_instance.this[0].resource_id",
                                                    "aws_db_instance.this[0]",
                                                    "aws_db_instance.this"
                                                ]
                                            },
                                            "description": "The RDS Resource ID of this instance"
                                        },
                                        "db_instance_status": {
                                            "expression": {
                                                "references": [
                                                    "aws_db_instance.this[0].status",
                                                    "aws_db_instance.this[0]",
                                                    "aws_db_instance.this"
                                                ]
                                            },
                                            "description": "The RDS instance status"
                                        },
                                        "db_instance_username": {
                                            "sensitive": true,
                                            "expression": {
                                                "references": [
                                                    "aws_db_instance.this[0].username",
                                                    "aws_db_instance.this[0]",
                                                    "aws_db_instance.this"
                                                ]
                                            },
                                            "description": "The master username for the database"
                                        },
                                        "enhanced_monitoring_iam_role_arn": {
                                            "expression": {
                                                "references": [
                                                    "aws_iam_role.enhanced_monitoring[0].arn",
                                                    "aws_iam_role.enhanced_monitoring[0]",
                                                    "aws_iam_role.enhanced_monitoring"
                                                ]
                                            },
                                            "description": "The Amazon Resource Name (ARN) specifying the monitoring role"
                                        },
                                        "enhanced_monitoring_iam_role_name": {
                                            "expression": {
                                                "references": [
                                                    "aws_iam_role.enhanced_monitoring[0].name",
                                                    "aws_iam_role.enhanced_monitoring[0]",
                                                    "aws_iam_role.enhanced_monitoring"
                                                ]
                                            },
                                            "description": "The name of the monitoring role"
                                        }
                                    },
                                    "resources": [
                                        {
                                            "address": "aws_cloudwatch_log_group.this",
                                            "mode": "managed",
                                            "type": "aws_cloudwatch_log_group",
                                            "name": "this",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "kms_key_id": {
                                                    "references": [
                                                        "var.cloudwatch_log_group_kms_key_id"
                                                    ]
                                                },
                                                "name": {
                                                    "references": [
                                                        "var.identifier",
                                                        "each.value"
                                                    ]
                                                },
                                                "retention_in_days": {
                                                    "references": [
                                                        "var.cloudwatch_log_group_retention_in_days"
                                                    ]
                                                },
                                                "tags": {
                                                    "references": [
                                                        "var.tags"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0,
                                            "for_each_expression": {
                                                "references": [
                                                    "var.enabled_cloudwatch_logs_exports",
                                                    "var.create",
                                                    "var.create_cloudwatch_log_group"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "aws_db_instance.this",
                                            "mode": "managed",
                                            "type": "aws_db_instance",
                                            "name": "this",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "allocated_storage": {
                                                    "references": [
                                                        "var.allocated_storage"
                                                    ]
                                                },
                                                "allow_major_version_upgrade": {
                                                    "references": [
                                                        "var.allow_major_version_upgrade"
                                                    ]
                                                },
                                                "apply_immediately": {
                                                    "references": [
                                                        "var.apply_immediately"
                                                    ]
                                                },
                                                "auto_minor_version_upgrade": {
                                                    "references": [
                                                        "var.auto_minor_version_upgrade"
                                                    ]
                                                },
                                                "availability_zone": {
                                                    "references": [
                                                        "var.availability_zone"
                                                    ]
                                                },
                                                "backup_retention_period": {
                                                    "references": [
                                                        "var.backup_retention_period"
                                                    ]
                                                },
                                                "backup_window": {
                                                    "references": [
                                                        "var.backup_window"
                                                    ]
                                                },
                                                "ca_cert_identifier": {
                                                    "references": [
                                                        "var.ca_cert_identifier"
                                                    ]
                                                },
                                                "character_set_name": {
                                                    "references": [
                                                        "var.character_set_name"
                                                    ]
                                                },
                                                "copy_tags_to_snapshot": {
                                                    "references": [
                                                        "var.copy_tags_to_snapshot"
                                                    ]
                                                },
                                                "db_name": {
                                                    "references": [
                                                        "var.db_name"
                                                    ]
                                                },
                                                "db_subnet_group_name": {
                                                    "references": [
                                                        "var.db_subnet_group_name"
                                                    ]
                                                },
                                                "delete_automated_backups": {
                                                    "references": [
                                                        "var.delete_automated_backups"
                                                    ]
                                                },
                                                "deletion_protection": {
                                                    "references": [
                                                        "var.deletion_protection"
                                                    ]
                                                },
                                                "domain": {
                                                    "references": [
                                                        "var.domain"
                                                    ]
                                                },
                                                "domain_iam_role_name": {
                                                    "references": [
                                                        "var.domain_iam_role_name"
                                                    ]
                                                },
                                                "enabled_cloudwatch_logs_exports": {
                                                    "references": [
                                                        "var.enabled_cloudwatch_logs_exports"
                                                    ]
                                                },
                                                "engine": {
                                                    "references": [
                                                        "local.engine"
                                                    ]
                                                },
                                                "engine_version": {
                                                    "references": [
                                                        "local.engine_version"
                                                    ]
                                                },
                                                "final_snapshot_identifier": {
                                                    "references": [
                                                        "local.final_snapshot_identifier"
                                                    ]
                                                },
                                                "iam_database_authentication_enabled": {
                                                    "references": [
                                                        "var.iam_database_authentication_enabled"
                                                    ]
                                                },
                                                "identifier": {
                                                    "references": [
                                                        "var.identifier"
                                                    ]
                                                },
                                                "instance_class": {
                                                    "references": [
                                                        "var.instance_class"
                                                    ]
                                                },
                                                "iops": {
                                                    "references": [
                                                        "var.iops"
                                                    ]
                                                },
                                                "kms_key_id": {
                                                    "references": [
                                                        "var.kms_key_id"
                                                    ]
                                                },
                                                "license_model": {
                                                    "references": [
                                                        "var.license_model"
                                                    ]
                                                },
                                                "maintenance_window": {
                                                    "references": [
                                                        "var.maintenance_window"
                                                    ]
                                                },
                                                "max_allocated_storage": {
                                                    "references": [
                                                        "var.max_allocated_storage"
                                                    ]
                                                },
                                                "monitoring_interval": {
                                                    "references": [
                                                        "var.monitoring_interval"
                                                    ]
                                                },
                                                "monitoring_role_arn": {
                                                    "references": [
                                                        "var.monitoring_interval",
                                                        "local.monitoring_role_arn"
                                                    ]
                                                },
                                                "multi_az": {
                                                    "references": [
                                                        "var.multi_az"
                                                    ]
                                                },
                                                "option_group_name": {
                                                    "references": [
                                                        "var.option_group_name"
                                                    ]
                                                },
                                                "parameter_group_name": {
                                                    "references": [
                                                        "var.parameter_group_name"
                                                    ]
                                                },
                                                "password": {
                                                    "references": [
                                                        "local.password"
                                                    ]
                                                },
                                                "performance_insights_enabled": {
                                                    "references": [
                                                        "var.performance_insights_enabled"
                                                    ]
                                                },
                                                "performance_insights_kms_key_id": {
                                                    "references": [
                                                        "var.performance_insights_enabled",
                                                        "var.performance_insights_kms_key_id"
                                                    ]
                                                },
                                                "performance_insights_retention_period": {
                                                    "references": [
                                                        "var.performance_insights_enabled",
                                                        "var.performance_insights_retention_period"
                                                    ]
                                                },
                                                "port": {
                                                    "references": [
                                                        "var.port"
                                                    ]
                                                },
                                                "publicly_accessible": {
                                                    "references": [
                                                        "var.publicly_accessible"
                                                    ]
                                                },
                                                "replica_mode": {
                                                    "references": [
                                                        "var.replica_mode"
                                                    ]
                                                },
                                                "replicate_source_db": {
                                                    "references": [
                                                        "var.replicate_source_db"
                                                    ]
                                                },
                                                "skip_final_snapshot": {
                                                    "references": [
                                                        "var.skip_final_snapshot"
                                                    ]
                                                },
                                                "snapshot_identifier": {
                                                    "references": [
                                                        "var.snapshot_identifier"
                                                    ]
                                                },
                                                "storage_encrypted": {
                                                    "references": [
                                                        "var.storage_encrypted"
                                                    ]
                                                },
                                                "storage_type": {
                                                    "references": [
                                                        "var.storage_type"
                                                    ]
                                                },
                                                "tags": {
                                                    "references": [
                                                        "var.tags"
                                                    ]
                                                },
                                                "timeouts": {
                                                    "create": {
                                                        "references": [
                                                            "var.timeouts"
                                                        ]
                                                    },
                                                    "delete": {
                                                        "references": [
                                                            "var.timeouts"
                                                        ]
                                                    },
                                                    "update": {
                                                        "references": [
                                                            "var.timeouts"
                                                        ]
                                                    }
                                                },
                                                "timezone": {
                                                    "references": [
                                                        "var.timezone"
                                                    ]
                                                },
                                                "username": {
                                                    "references": [
                                                        "local.username"
                                                    ]
                                                },
                                                "vpc_security_group_ids": {
                                                    "references": [
                                                        "var.vpc_security_group_ids"
                                                    ]
                                                }
                                            },
                                            "schema_version": 1,
                                            "count_expression": {
                                                "references": [
                                                    "var.create"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "aws_iam_role.enhanced_monitoring",
                                            "mode": "managed",
                                            "type": "aws_iam_role",
                                            "name": "enhanced_monitoring",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "assume_role_policy": {
                                                    "references": [
                                                        "data.aws_iam_policy_document.enhanced_monitoring.json",
                                                        "data.aws_iam_policy_document.enhanced_monitoring"
                                                    ]
                                                },
                                                "description": {
                                                    "references": [
                                                        "var.monitoring_role_description"
                                                    ]
                                                },
                                                "name": {
                                                    "references": [
                                                        "var.monitoring_role_name"
                                                    ]
                                                },
                                                "tags": {
                                                    "references": [
                                                        "var.monitoring_role_name",
                                                        "var.tags"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0,
                                            "count_expression": {
                                                "references": [
                                                    "var.create_monitoring_role"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "aws_iam_role_policy_attachment.enhanced_monitoring",
                                            "mode": "managed",
                                            "type": "aws_iam_role_policy_attachment",
                                            "name": "enhanced_monitoring",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "policy_arn": {
                                                    "references": [
                                                        "data.aws_partition.current.partition",
                                                        "data.aws_partition.current"
                                                    ]
                                                },
                                                "role": {
                                                    "references": [
                                                        "aws_iam_role.enhanced_monitoring[0].name",
                                                        "aws_iam_role.enhanced_monitoring[0]",
                                                        "aws_iam_role.enhanced_monitoring"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0,
                                            "count_expression": {
                                                "references": [
                                                    "var.create_monitoring_role"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "random_id.snapshot_identifier",
                                            "mode": "managed",
                                            "type": "random_id",
                                            "name": "snapshot_identifier",
                                            "provider_config_key": "module.db_default:random",
                                            "expressions": {
                                                "byte_length": {
                                                    "constant_value": 4
                                                },
                                                "keepers": {
                                                    "references": [
                                                        "var.identifier"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0,
                                            "count_expression": {
                                                "references": [
                                                    "var.create",
                                                    "var.skip_final_snapshot"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "data.aws_iam_policy_document.enhanced_monitoring",
                                            "mode": "data",
                                            "type": "aws_iam_policy_document",
                                            "name": "enhanced_monitoring",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "statement": [
                                                    {
                                                        "actions": {
                                                            "constant_value": [
                                                                "sts:AssumeRole"
                                                            ]
                                                        },
                                                        "principals": [
                                                            {
                                                                "identifiers": {
                                                                    "constant_value": [
                                                                        "monitoring.rds.amazonaws.com"
                                                                    ]
                                                                },
                                                                "type": {
                                                                    "constant_value": "Service"
                                                                }
                                                            }
                                                        ]
                                                    }
                                                ]
                                            },
                                            "schema_version": 0
                                        },
                                        {
                                            "address": "data.aws_partition.current",
                                            "mode": "data",
                                            "type": "aws_partition",
                                            "name": "current",
                                            "provider_config_key": "aws",
                                            "schema_version": 0
                                        }
                                    ],
                                    "variables": {
                                        "allocated_storage": {
                                            "default": null,
                                            "description": "The allocated storage in gigabytes"
                                        },
                                        "allow_major_version_upgrade": {
                                            "default": false,
                                            "description": "Indicates that major version upgrades are allowed. Changing this parameter does not result in an outage and the change is asynchronously applied as soon as possible"
                                        },
                                        "apply_immediately": {
                                            "default": false,
                                            "description": "Specifies whether any database modifications are applied immediately, or during the next maintenance window"
                                        },
                                        "auto_minor_version_upgrade": {
                                            "default": true,
                                            "description": "Indicates that minor engine upgrades will be applied automatically to the DB instance during the maintenance window"
                                        },
                                        "availability_zone": {
                                            "default": null,
                                            "description": "The Availability Zone of the RDS instance"
                                        },
                                        "backup_retention_period": {
                                            "default": null,
                                            "description": "The days to retain backups for"
                                        },
                                        "backup_window": {
                                            "default": null,
                                            "description": "The daily time range (in UTC) during which automated backups are created if they are enabled. Example: '09:46-10:16'. Must not overlap with maintenance_window"
                                        },
                                        "ca_cert_identifier": {
                                            "default": null,
                                            "description": "Specifies the identifier of the CA certificate for the DB instance"
                                        },
                                        "character_set_name": {
                                            "default": null,
                                            "description": "The character set name to use for DB encoding in Oracle instances. This can't be changed. See Oracle Character Sets Supported in Amazon RDS and Collations and Character Sets for Microsoft SQL Server for more information. This can only be set on creation."
                                        },
                                        "cloudwatch_log_group_kms_key_id": {
                                            "default": null,
                                            "description": "The ARN of the KMS Key to use when encrypting log data"
                                        },
                                        "cloudwatch_log_group_retention_in_days": {
                                            "default": 7,
                                            "description": "The number of days to retain CloudWatch logs for the DB instance"
                                        },
                                        "copy_tags_to_snapshot": {
                                            "default": false,
                                            "description": "On delete, copy all Instance tags to the final snapshot"
                                        },
                                        "create": {
                                            "default": true,
                                            "description": "Whether to create this resource or not?"
                                        },
                                        "create_cloudwatch_log_group": {
                                            "default": false,
                                            "description": "Determines whether a CloudWatch log group is created for each `enabled_cloudwatch_logs_exports`"
                                        },
                                        "create_monitoring_role": {
                                            "default": false,
                                            "description": "Create IAM role with a defined name that permits RDS to send enhanced monitoring metrics to CloudWatch Logs."
                                        },
                                        "db_name": {
                                            "default": null,
                                            "description": "The DB name to create. If omitted, no database is created initially"
                                        },
                                        "db_subnet_group_name": {
                                            "default": null,
                                            "description": "Name of DB subnet group. DB instance will be created in the VPC associated with the DB subnet group. If unspecified, will be created in the default VPC"
                                        },
                                        "delete_automated_backups": {
                                            "default": true,
                                            "description": "Specifies whether to remove automated backups immediately after the DB instance is deleted"
                                        },
                                        "deletion_protection": {
                                            "default": false,
                                            "description": "The database can't be deleted when this value is set to true."
                                        },
                                        "domain": {
                                            "default": null,
                                            "description": "The ID of the Directory Service Active Directory domain to create the instance in"
                                        },
                                        "domain_iam_role_name": {
                                            "default": null,
                                            "description": "(Required if domain is provided) The name of the IAM role to be used when making API calls to the Directory Service"
                                        },
                                        "enabled_cloudwatch_logs_exports": {
                                            "default": [],
                                            "description": "List of log types to enable for exporting to CloudWatch logs. If omitted, no logs will be exported. Valid values (depending on engine): alert, audit, error, general, listener, slowquery, trace, postgresql (PostgreSQL), upgrade (PostgreSQL)."
                                        },
                                        "engine": {
                                            "default": null,
                                            "description": "The database engine to use"
                                        },
                                        "engine_version": {
                                            "default": null,
                                            "description": "The engine version to use"
                                        },
                                        "final_snapshot_identifier_prefix": {
                                            "default": "final",
                                            "description": "The name which is prefixed to the final snapshot on cluster destroy"
                                        },
                                        "iam_database_authentication_enabled": {
                                            "default": false,
                                            "description": "Specifies whether or mappings of AWS Identity and Access Management (IAM) accounts to database accounts is enabled"
                                        },
                                        "identifier": {
                                            "description": "The name of the RDS instance"
                                        },
                                        "instance_class": {
                                            "default": null,
                                            "description": "The instance type of the RDS instance"
                                        },
                                        "iops": {
                                            "default": 0,
                                            "description": "The amount of provisioned IOPS. Setting this implies a storage_type of 'io1'"
                                        },
                                        "kms_key_id": {
                                            "default": null,
                                            "description": "The ARN for the KMS encryption key. If creating an encrypted replica, set this to the destination KMS ARN. If storage_encrypted is set to true and kms_key_id is not specified the default KMS key created in your account will be used"
                                        },
                                        "license_model": {
                                            "default": null,
                                            "description": "License model information for this DB instance. Optional, but required for some DB engines, i.e. Oracle SE1"
                                        },
                                        "maintenance_window": {
                                            "default": null,
                                            "description": "The window to perform maintenance in. Syntax: 'ddd:hh24:mi-ddd:hh24:mi'. Eg: 'Mon:00:00-Mon:03:00'"
                                        },
                                        "max_allocated_storage": {
                                            "default": 0,
                                            "description": "Specifies the value for Storage Autoscaling"
                                        },
                                        "monitoring_interval": {
                                            "default": 0,
                                            "description": "The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB instance. To disable collecting Enhanced Monitoring metrics, specify 0. The default is 0. Valid Values: 0, 1, 5, 10, 15, 30, 60."
                                        },
                                        "monitoring_role_arn": {
                                            "default": null,
                                            "description": "The ARN for the IAM role that permits RDS to send enhanced monitoring metrics to CloudWatch Logs. Must be specified if monitoring_interval is non-zero."
                                        },
                                        "monitoring_role_description": {
                                            "default": null,
                                            "description": "Description of the monitoring IAM role"
                                        },
                                        "monitoring_role_name": {
                                            "default": "rds-monitoring-role",
                                            "description": "Name of the IAM role which will be created when create_monitoring_role is enabled."
                                        },
                                        "multi_az": {
                                            "default": false,
                                            "description": "Specifies if the RDS instance is multi-AZ"
                                        },
                                        "option_group_name": {
                                            "default": null,
                                            "description": "Name of the DB option group to associate."
                                        },
                                        "parameter_group_name": {
                                            "default": null,
                                            "description": "Name of the DB parameter group to associate"
                                        },
                                        "password": {
                                            "default": null,
                                            "description": "Password for the master DB user. Note that this may show up in logs, and it will be stored in the state file"
                                        },
                                        "performance_insights_enabled": {
                                            "default": false,
                                            "description": "Specifies whether Performance Insights are enabled"
                                        },
                                        "performance_insights_kms_key_id": {
                                            "default": null,
                                            "description": "The ARN for the KMS key to encrypt Performance Insights data."
                                        },
                                        "performance_insights_retention_period": {
                                            "default": 7,
                                            "description": "The amount of time in days to retain Performance Insights data. Either 7 (7 days) or 731 (2 years)."
                                        },
                                        "port": {
                                            "default": null,
                                            "description": "The port on which the DB accepts connections"
                                        },
                                        "publicly_accessible": {
                                            "default": false,
                                            "description": "Bool to control if instance is publicly accessible"
                                        },
                                        "replica_mode": {
                                            "default": null,
                                            "description": "Specifies whether the replica is in either mounted or open-read-only mode. This attribute is only supported by Oracle instances. Oracle replicas operate in open-read-only mode unless otherwise specified"
                                        },
                                        "replicate_source_db": {
                                            "default": null,
                                            "description": "Specifies that this resource is a Replicate database, and to use this value as the source database. This correlates to the identifier of another Amazon RDS Database to replicate."
                                        },
                                        "restore_to_point_in_time": {
                                            "default": null,
                                            "description": "Restore to a point in time (MySQL is NOT supported)"
                                        },
                                        "s3_import": {
                                            "default": null,
                                            "description": "Restore from a Percona Xtrabackup in S3 (only MySQL is supported)"
                                        },
                                        "skip_final_snapshot": {
                                            "default": false,
                                            "description": "Determines whether a final DB snapshot is created before the DB instance is deleted. If true is specified, no DBSnapshot is created. If false is specified, a DB snapshot is created before the DB instance is deleted"
                                        },
                                        "snapshot_identifier": {
                                            "default": null,
                                            "description": "Specifies whether or not to create this database from a snapshot. This correlates to the snapshot ID you'd find in the RDS console, e.g: rds:production-2015-06-26-06-05."
                                        },
                                        "storage_encrypted": {
                                            "default": true,
                                            "description": "Specifies whether the DB instance is encrypted"
                                        },
                                        "storage_type": {
                                            "default": null,
                                            "description": "One of 'standard' (magnetic), 'gp2' (general purpose SSD), or 'io1' (provisioned IOPS SSD). The default is 'io1' if iops is specified, 'standard' if not. Note that this behaviour is different from the AWS web console, where the default is 'gp2'."
                                        },
                                        "tags": {
                                            "default": {},
                                            "description": "A mapping of tags to assign to all resources"
                                        },
                                        "timeouts": {
                                            "default": {},
                                            "description": "Updated Terraform resource management timeouts. Applies to `aws_db_instance` in particular to permit resource management times"
                                        },
                                        "timezone": {
                                            "default": null,
                                            "description": "Time zone of the DB instance. timezone is currently only supported by Microsoft SQL Server. The timezone can only be set on creation. See MSSQL User Guide for more information."
                                        },
                                        "username": {
                                            "default": null,
                                            "description": "Username for the master DB user"
                                        },
                                        "vpc_security_group_ids": {
                                            "default": [],
                                            "description": "List of VPC security groups to associate"
                                        }
                                    }
                                }
                            },
                            "db_option_group": {
                                "source": "./modules/db_option_group",
                                "expressions": {
                                    "create": {
                                        "references": [
                                            "local.create_db_option_group"
                                        ]
                                    },
                                    "engine_name": {
                                        "references": [
                                            "var.engine"
                                        ]
                                    },
                                    "major_engine_version": {
                                        "references": [
                                            "var.major_engine_version"
                                        ]
                                    },
                                    "name": {
                                        "references": [
                                            "var.option_group_name",
                                            "var.identifier"
                                        ]
                                    },
                                    "option_group_description": {
                                        "references": [
                                            "var.option_group_description"
                                        ]
                                    },
                                    "options": {
                                        "references": [
                                            "var.options"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.tags",
                                            "var.db_option_group_tags"
                                        ]
                                    },
                                    "timeouts": {
                                        "references": [
                                            "var.option_group_timeouts"
                                        ]
                                    },
                                    "use_name_prefix": {
                                        "references": [
                                            "var.option_group_use_name_prefix"
                                        ]
                                    }
                                },
                                "module": {
                                    "outputs": {
                                        "db_option_group_arn": {
                                            "expression": {
                                                "references": [
                                                    "aws_db_option_group.this[0].arn",
                                                    "aws_db_option_group.this[0]",
                                                    "aws_db_option_group.this"
                                                ]
                                            },
                                            "description": "The ARN of the db option group"
                                        },
                                        "db_option_group_id": {
                                            "expression": {
                                                "references": [
                                                    "aws_db_option_group.this[0].id",
                                                    "aws_db_option_group.this[0]",
                                                    "aws_db_option_group.this"
                                                ]
                                            },
                                            "description": "The db option group id"
                                        }
                                    },
                                    "resources": [
                                        {
                                            "address": "aws_db_option_group.this",
                                            "mode": "managed",
                                            "type": "aws_db_option_group",
                                            "name": "this",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "engine_name": {
                                                    "references": [
                                                        "var.engine_name"
                                                    ]
                                                },
                                                "major_engine_version": {
                                                    "references": [
                                                        "var.major_engine_version"
                                                    ]
                                                },
                                                "name": {
                                                    "references": [
                                                        "local.name"
                                                    ]
                                                },
                                                "name_prefix": {
                                                    "references": [
                                                        "local.name_prefix"
                                                    ]
                                                },
                                                "option_group_description": {
                                                    "references": [
                                                        "local.description"
                                                    ]
                                                },
                                                "tags": {
                                                    "references": [
                                                        "var.tags",
                                                        "var.name"
                                                    ]
                                                },
                                                "timeouts": {
                                                    "delete": {
                                                        "references": [
                                                            "var.timeouts"
                                                        ]
                                                    }
                                                }
                                            },
                                            "schema_version": 0,
                                            "count_expression": {
                                                "references": [
                                                    "var.create"
                                                ]
                                            }
                                        }
                                    ],
                                    "variables": {
                                        "create": {
                                            "default": true,
                                            "description": "Whether to create this resource or not?"
                                        },
                                        "engine_name": {
                                            "default": null,
                                            "description": "Specifies the name of the engine that this option group should be associated with"
                                        },
                                        "major_engine_version": {
                                            "default": null,
                                            "description": "Specifies the major version of the engine that this option group should be associated with"
                                        },
                                        "name": {
                                            "default": "",
                                            "description": "The name of the option group"
                                        },
                                        "option_group_description": {
                                            "default": null,
                                            "description": "The description of the option group"
                                        },
                                        "options": {
                                            "default": [],
                                            "description": "A list of Options to apply"
                                        },
                                        "tags": {
                                            "default": {},
                                            "description": "A mapping of tags to assign to the resource"
                                        },
                                        "timeouts": {
                                            "default": {},
                                            "description": "Define maximum timeout for deletion of `aws_db_option_group` resource"
                                        },
                                        "use_name_prefix": {
                                            "default": true,
                                            "description": "Determines whether to use `name` as is or create a unique name beginning with `name` as the specified prefix"
                                        }
                                    }
                                }
                            },
                            "db_parameter_group": {
                                "source": "./modules/db_parameter_group",
                                "expressions": {
                                    "create": {
                                        "references": [
                                            "local.create_db_parameter_group"
                                        ]
                                    },
                                    "description": {
                                        "references": [
                                            "var.parameter_group_description"
                                        ]
                                    },
                                    "family": {
                                        "references": [
                                            "var.family"
                                        ]
                                    },
                                    "name": {
                                        "references": [
                                            "var.parameter_group_name",
                                            "var.identifier"
                                        ]
                                    },
                                    "parameters": {
                                        "references": [
                                            "var.parameters"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.tags",
                                            "var.db_parameter_group_tags"
                                        ]
                                    },
                                    "use_name_prefix": {
                                        "references": [
                                            "var.parameter_group_use_name_prefix"
                                        ]
                                    }
                                },
                                "module": {
                                    "outputs": {
                                        "db_parameter_group_arn": {
                                            "expression": {
                                                "references": [
                                                    "aws_db_parameter_group.this[0].arn",
                                                    "aws_db_parameter_group.this[0]",
                                                    "aws_db_parameter_group.this"
                                                ]
                                            },
                                            "description": "The ARN of the db parameter group"
                                        },
                                        "db_parameter_group_id": {
                                            "expression": {
                                                "references": [
                                                    "aws_db_parameter_group.this[0].id",
                                                    "aws_db_parameter_group.this[0]",
                                                    "aws_db_parameter_group.this"
                                                ]
                                            },
                                            "description": "The db parameter group id"
                                        }
                                    },
                                    "resources": [
                                        {
                                            "address": "aws_db_parameter_group.this",
                                            "mode": "managed",
                                            "type": "aws_db_parameter_group",
                                            "name": "this",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "description": {
                                                    "references": [
                                                        "local.description"
                                                    ]
                                                },
                                                "family": {
                                                    "references": [
                                                        "var.family"
                                                    ]
                                                },
                                                "name": {
                                                    "references": [
                                                        "local.name"
                                                    ]
                                                },
                                                "name_prefix": {
                                                    "references": [
                                                        "local.name_prefix"
                                                    ]
                                                },
                                                "tags": {
                                                    "references": [
                                                        "var.tags",
                                                        "var.name"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0,
                                            "count_expression": {
                                                "references": [
                                                    "var.create"
                                                ]
                                            }
                                        }
                                    ],
                                    "variables": {
                                        "create": {
                                            "default": true,
                                            "description": "Whether to create this resource or not?"
                                        },
                                        "description": {
                                            "default": null,
                                            "description": "The description of the DB parameter group"
                                        },
                                        "family": {
                                            "default": null,
                                            "description": "The family of the DB parameter group"
                                        },
                                        "name": {
                                            "default": "",
                                            "description": "The name of the DB parameter group"
                                        },
                                        "parameters": {
                                            "default": [],
                                            "description": "A list of DB parameter maps to apply"
                                        },
                                        "tags": {
                                            "default": {},
                                            "description": "A mapping of tags to assign to the resource"
                                        },
                                        "use_name_prefix": {
                                            "default": true,
                                            "description": "Determines whether to use `name` as is or create a unique name beginning with `name` as the specified prefix"
                                        }
                                    }
                                }
                            },
                            "db_subnet_group": {
                                "source": "./modules/db_subnet_group",
                                "expressions": {
                                    "create": {
                                        "references": [
                                            "local.create_db_subnet_group"
                                        ]
                                    },
                                    "description": {
                                        "references": [
                                            "var.db_subnet_group_description"
                                        ]
                                    },
                                    "name": {
                                        "references": [
                                            "var.db_subnet_group_name",
                                            "var.identifier"
                                        ]
                                    },
                                    "subnet_ids": {
                                        "references": [
                                            "var.subnet_ids"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.tags",
                                            "var.db_subnet_group_tags"
                                        ]
                                    },
                                    "use_name_prefix": {
                                        "references": [
                                            "var.db_subnet_group_use_name_prefix"
                                        ]
                                    }
                                },
                                "module": {
                                    "outputs": {
                                        "db_subnet_group_arn": {
                                            "expression": {
                                                "references": [
                                                    "aws_db_subnet_group.this[0].arn",
                                                    "aws_db_subnet_group.this[0]",
                                                    "aws_db_subnet_group.this"
                                                ]
                                            },
                                            "description": "The ARN of the db subnet group"
                                        },
                                        "db_subnet_group_id": {
                                            "expression": {
                                                "references": [
                                                    "aws_db_subnet_group.this[0].id",
                                                    "aws_db_subnet_group.this[0]",
                                                    "aws_db_subnet_group.this"
                                                ]
                                            },
                                            "description": "The db subnet group name"
                                        }
                                    },
                                    "resources": [
                                        {
                                            "address": "aws_db_subnet_group.this",
                                            "mode": "managed",
                                            "type": "aws_db_subnet_group",
                                            "name": "this",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "description": {
                                                    "references": [
                                                        "local.description"
                                                    ]
                                                },
                                                "name": {
                                                    "references": [
                                                        "local.name"
                                                    ]
                                                },
                                                "name_prefix": {
                                                    "references": [
                                                        "local.name_prefix"
                                                    ]
                                                },
                                                "subnet_ids": {
                                                    "references": [
                                                        "var.subnet_ids"
                                                    ]
                                                },
                                                "tags": {
                                                    "references": [
                                                        "var.tags",
                                                        "var.name"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0,
                                            "count_expression": {
                                                "references": [
                                                    "var.create"
                                                ]
                                            }
                                        }
                                    ],
                                    "variables": {
                                        "create": {
                                            "default": true,
                                            "description": "Whether to create this resource or not?"
                                        },
                                        "description": {
                                            "default": null,
                                            "description": "The description of the DB subnet group"
                                        },
                                        "name": {
                                            "default": "",
                                            "description": "The name of the DB subnet group"
                                        },
                                        "subnet_ids": {
                                            "default": [],
                                            "description": "A list of VPC subnet IDs"
                                        },
                                        "tags": {
                                            "default": {},
                                            "description": "A mapping of tags to assign to the resource"
                                        },
                                        "use_name_prefix": {
                                            "default": true,
                                            "description": "Determines whether to use `name` as is or create a unique name beginning with `name` as the specified prefix"
                                        }
                                    }
                                }
                            }
                        },
                        "variables": {
                            "allocated_storage": {
                                "default": null,
                                "description": "The allocated storage in gigabytes"
                            },
                            "allow_major_version_upgrade": {
                                "default": false,
                                "description": "Indicates that major version upgrades are allowed. Changing this parameter does not result in an outage and the change is asynchronously applied as soon as possible"
                            },
                            "apply_immediately": {
                                "default": false,
                                "description": "Specifies whether any database modifications are applied immediately, or during the next maintenance window"
                            },
                            "auto_minor_version_upgrade": {
                                "default": true,
                                "description": "Indicates that minor engine upgrades will be applied automatically to the DB instance during the maintenance window"
                            },
                            "availability_zone": {
                                "default": null,
                                "description": "The Availability Zone of the RDS instance"
                            },
                            "backup_retention_period": {
                                "default": null,
                                "description": "The days to retain backups for"
                            },
                            "backup_window": {
                                "default": null,
                                "description": "The daily time range (in UTC) during which automated backups are created if they are enabled. Example: '09:46-10:16'. Must not overlap with maintenance_window"
                            },
                            "ca_cert_identifier": {
                                "default": null,
                                "description": "Specifies the identifier of the CA certificate for the DB instance"
                            },
                            "character_set_name": {
                                "default": null,
                                "description": "The character set name to use for DB encoding in Oracle instances. This can't be changed. See Oracle Character Sets Supported in Amazon RDS and Collations and Character Sets for Microsoft SQL Server for more information. This can only be set on creation"
                            },
                            "cloudwatch_log_group_kms_key_id": {
                                "default": null,
                                "description": "The ARN of the KMS Key to use when encrypting log data"
                            },
                            "cloudwatch_log_group_retention_in_days": {
                                "default": 7,
                                "description": "The number of days to retain CloudWatch logs for the DB instance"
                            },
                            "copy_tags_to_snapshot": {
                                "default": false,
                                "description": "On delete, copy all Instance tags to the final snapshot"
                            },
                            "create_cloudwatch_log_group": {
                                "default": false,
                                "description": "Determines whether a CloudWatch log group is created for each `enabled_cloudwatch_logs_exports`"
                            },
                            "create_db_instance": {
                                "default": true,
                                "description": "Whether to create a database instance"
                            },
                            "create_db_option_group": {
                                "default": true,
                                "description": "Create a database option group"
                            },
                            "create_db_parameter_group": {
                                "default": true,
                                "description": "Whether to create a database parameter group"
                            },
                            "create_db_subnet_group": {
                                "default": false,
                                "description": "Whether to create a database subnet group"
                            },
                            "create_monitoring_role": {
                                "default": false,
                                "description": "Create IAM role with a defined name that permits RDS to send enhanced monitoring metrics to CloudWatch Logs"
                            },
                            "create_random_password": {
                                "default": true,
                                "description": "Whether to create random password for RDS primary cluster"
                            },
                            "db_instance_tags": {
                                "default": {},
                                "description": "Additional tags for the DB instance"
                            },
                            "db_name": {
                                "default": null,
                                "description": "The DB name to create. If omitted, no database is created initially"
                            },
                            "db_option_group_tags": {
                                "default": {},
                                "description": "Additional tags for the DB option group"
                            },
                            "db_parameter_group_tags": {
                                "default": {},
                                "description": "Additional tags for the  DB parameter group"
                            },
                            "db_subnet_group_description": {
                                "default": null,
                                "description": "Description of the DB subnet group to create"
                            },
                            "db_subnet_group_name": {
                                "default": null,
                                "description": "Name of DB subnet group. DB instance will be created in the VPC associated with the DB subnet group. If unspecified, will be created in the default VPC"
                            },
                            "db_subnet_group_tags": {
                                "default": {},
                                "description": "Additional tags for the DB subnet group"
                            },
                            "db_subnet_group_use_name_prefix": {
                                "default": true,
                                "description": "Determines whether to use `subnet_group_name` as is or create a unique name beginning with the `subnet_group_name` as the prefix"
                            },
                            "delete_automated_backups": {
                                "default": true,
                                "description": "Specifies whether to remove automated backups immediately after the DB instance is deleted"
                            },
                            "deletion_protection": {
                                "default": false,
                                "description": "The database can't be deleted when this value is set to true"
                            },
                            "domain": {
                                "default": null,
                                "description": "The ID of the Directory Service Active Directory domain to create the instance in"
                            },
                            "domain_iam_role_name": {
                                "default": null,
                                "description": "(Required if domain is provided) The name of the IAM role to be used when making API calls to the Directory Service"
                            },
                            "enabled_cloudwatch_logs_exports": {
                                "default": [],
                                "description": "List of log types to enable for exporting to CloudWatch logs. If omitted, no logs will be exported. Valid values (depending on engine): alert, audit, error, general, listener, slowquery, trace, postgresql (PostgreSQL), upgrade (PostgreSQL)"
                            },
                            "engine": {
                                "default": null,
                                "description": "The database engine to use"
                            },
                            "engine_version": {
                                "default": null,
                                "description": "The engine version to use"
                            },
                            "family": {
                                "default": null,
                                "description": "The family of the DB parameter group"
                            },
                            "final_snapshot_identifier_prefix": {
                                "default": "final",
                                "description": "The name which is prefixed to the final snapshot on cluster destroy"
                            },
                            "iam_database_authentication_enabled": {
                                "default": false,
                                "description": "Specifies whether or not the mappings of AWS Identity and Access Management (IAM) accounts to database accounts are enabled"
                            },
                            "identifier": {
                                "description": "The name of the RDS instance"
                            },
                            "instance_class": {
                                "default": null,
                                "description": "The instance type of the RDS instance"
                            },
                            "iops": {
                                "default": 0,
                                "description": "The amount of provisioned IOPS. Setting this implies a storage_type of 'io1'"
                            },
                            "kms_key_id": {
                                "default": null,
                                "description": "The ARN for the KMS encryption key. If creating an encrypted replica, set this to the destination KMS ARN. If storage_encrypted is set to true and kms_key_id is not specified the default KMS key created in your account will be used"
                            },
                            "license_model": {
                                "default": null,
                                "description": "License model information for this DB instance. Optional, but required for some DB engines, i.e. Oracle SE1"
                            },
                            "maintenance_window": {
                                "default": null,
                                "description": "The window to perform maintenance in. Syntax: 'ddd:hh24:mi-ddd:hh24:mi'. Eg: 'Mon:00:00-Mon:03:00'"
                            },
                            "major_engine_version": {
                                "default": null,
                                "description": "Specifies the major version of the engine that this option group should be associated with"
                            },
                            "max_allocated_storage": {
                                "default": 0,
                                "description": "Specifies the value for Storage Autoscaling"
                            },
                            "monitoring_interval": {
                                "default": 0,
                                "description": "The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB instance. To disable collecting Enhanced Monitoring metrics, specify 0. The default is 0. Valid Values: 0, 1, 5, 10, 15, 30, 60"
                            },
                            "monitoring_role_arn": {
                                "default": null,
                                "description": "The ARN for the IAM role that permits RDS to send enhanced monitoring metrics to CloudWatch Logs. Must be specified if monitoring_interval is non-zero"
                            },
                            "monitoring_role_description": {
                                "default": null,
                                "description": "Description of the monitoring IAM role"
                            },
                            "monitoring_role_name": {
                                "default": "rds-monitoring-role",
                                "description": "Name of the IAM role which will be created when create_monitoring_role is enabled"
                            },
                            "multi_az": {
                                "default": false,
                                "description": "Specifies if the RDS instance is multi-AZ"
                            },
                            "option_group_description": {
                                "default": null,
                                "description": "The description of the option group"
                            },
                            "option_group_name": {
                                "default": null,
                                "description": "Name of the option group"
                            },
                            "option_group_timeouts": {
                                "default": {},
                                "description": "Define maximum timeout for deletion of `aws_db_option_group` resource"
                            },
                            "option_group_use_name_prefix": {
                                "default": true,
                                "description": "Determines whether to use `option_group_name` as is or create a unique name beginning with the `option_group_name` as the prefix"
                            },
                            "options": {
                                "default": [],
                                "description": "A list of Options to apply"
                            },
                            "parameter_group_description": {
                                "default": null,
                                "description": "Description of the DB parameter group to create"
                            },
                            "parameter_group_name": {
                                "default": null,
                                "description": "Name of the DB parameter group to associate or create"
                            },
                            "parameter_group_use_name_prefix": {
                                "default": true,
                                "description": "Determines whether to use `parameter_group_name` as is or create a unique name beginning with the `parameter_group_name` as the prefix"
                            },
                            "parameters": {
                                "default": [],
                                "description": "A list of DB parameters (map) to apply"
                            },
                            "password": {
                                "default": null,
                                "description": "Password for the master DB user. Note that this may show up in logs, and it will be stored in the state file"
                            },
                            "performance_insights_enabled": {
                                "default": false,
                                "description": "Specifies whether Performance Insights are enabled"
                            },
                            "performance_insights_kms_key_id": {
                                "default": null,
                                "description": "The ARN for the KMS key to encrypt Performance Insights data"
                            },
                            "performance_insights_retention_period": {
                                "default": 7,
                                "description": "The amount of time in days to retain Performance Insights data. Either 7 (7 days) or 731 (2 years)"
                            },
                            "port": {
                                "default": null,
                                "description": "The port on which the DB accepts connections"
                            },
                            "publicly_accessible": {
                                "default": false,
                                "description": "Bool to control if instance is publicly accessible"
                            },
                            "putin_khuylo": {
                                "default": true,
                                "description": "Do you agree that Putin doesn't respect Ukrainian sovereignty and territorial integrity? More info: https://en.wikipedia.org/wiki/Putin_khuylo!"
                            },
                            "random_password_length": {
                                "default": 16,
                                "description": "Length of random password to create"
                            },
                            "replica_mode": {
                                "default": null,
                                "description": "Specifies whether the replica is in either mounted or open-read-only mode. This attribute is only supported by Oracle instances. Oracle replicas operate in open-read-only mode unless otherwise specified"
                            },
                            "replicate_source_db": {
                                "default": null,
                                "description": "Specifies that this resource is a Replicate database, and to use this value as the source database. This correlates to the identifier of another Amazon RDS Database to replicate"
                            },
                            "restore_to_point_in_time": {
                                "default": null,
                                "description": "Restore to a point in time (MySQL is NOT supported)"
                            },
                            "s3_import": {
                                "default": null,
                                "description": "Restore from a Percona Xtrabackup in S3 (only MySQL is supported)"
                            },
                            "skip_final_snapshot": {
                                "default": false,
                                "description": "Determines whether a final DB snapshot is created before the DB instance is deleted. If true is specified, no DBSnapshot is created. If false is specified, a DB snapshot is created before the DB instance is deleted"
                            },
                            "snapshot_identifier": {
                                "default": null,
                                "description": "Specifies whether or not to create this database from a snapshot. This correlates to the snapshot ID you'd find in the RDS console, e.g: rds:production-2015-06-26-06-05"
                            },
                            "storage_encrypted": {
                                "default": true,
                                "description": "Specifies whether the DB instance is encrypted"
                            },
                            "storage_type": {
                                "default": null,
                                "description": "One of 'standard' (magnetic), 'gp2' (general purpose SSD), or 'io1' (provisioned IOPS SSD). The default is 'io1' if iops is specified, 'gp2' if not"
                            },
                            "subnet_ids": {
                                "default": [],
                                "description": "A list of VPC subnet IDs"
                            },
                            "tags": {
                                "default": {},
                                "description": "A mapping of tags to assign to all resources"
                            },
                            "timeouts": {
                                "default": {},
                                "description": "Updated Terraform resource management timeouts. Applies to `aws_db_instance` in particular to permit resource management times"
                            },
                            "timezone": {
                                "default": null,
                                "description": "Time zone of the DB instance. timezone is currently only supported by Microsoft SQL Server. The timezone can only be set on creation. See MSSQL User Guide for more information"
                            },
                            "username": {
                                "default": null,
                                "description": "Username for the master DB user"
                            },
                            "vpc_security_group_ids": {
                                "default": [],
                                "description": "List of VPC security groups to associate"
                            }
                        }
                    }
                },
                "db_disabled": {
                    "source": "../../my-custom-rds-module",
                    "expressions": {
                        "create_db_instance": {
                            "constant_value": false
                        },
                        "create_db_option_group": {
                            "constant_value": false
                        },
                        "create_db_parameter_group": {
                            "constant_value": false
                        },
                        "identifier": {
                            "references": [
                                "local.name"
                            ]
                        }
                    },
                    "module": {
                        "outputs": {
                            "db_instance_address": {
                                "expression": {
                                    "references": [
                                        "module.db_instance.db_instance_address",
                                        "module.db_instance"
                                    ]
                                },
                                "description": "The address of the RDS instance"
                            },
                            "db_instance_arn": {
                                "expression": {
                                    "references": [
                                        "module.db_instance.db_instance_arn",
                                        "module.db_instance"
                                    ]
                                },
                                "description": "The ARN of the RDS instance"
                            },
                            "db_instance_availability_zone": {
                                "expression": {
                                    "references": [
                                        "module.db_instance.db_instance_availability_zone",
                                        "module.db_instance"
                                    ]
                                },
                                "description": "The availability zone of the RDS instance"
                            },
                            "db_instance_ca_cert_identifier": {
                                "expression": {
                                    "references": [
                                        "module.db_instance.db_instance_ca_cert_identifier",
                                        "module.db_instance"
                                    ]
                                },
                                "description": "Specifies the identifier of the CA certificate for the DB instance"
                            },
                            "db_instance_cloudwatch_log_groups": {
                                "expression": {
                                    "references": [
                                        "module.db_instance.db_instance_cloudwatch_log_groups",
                                        "module.db_instance"
                                    ]
                                },
                                "description": "Map of CloudWatch log groups created and their attributes"
                            },
                            "db_instance_domain": {
                                "expression": {
                                    "references": [
                                        "module.db_instance.db_instance_domain",
                                        "module.db_instance"
                                    ]
                                },
                                "description": "The ID of the Directory Service Active Directory domain the instance is joined to"
                            },
                            "db_instance_domain_iam_role_name": {
                                "expression": {
                                    "references": [
                                        "module.db_instance.db_instance_domain_iam_role_name",
                                        "module.db_instance"
                                    ]
                                },
                                "description": "The name of the IAM role to be used when making API calls to the Directory Service. "
                            },
                            "db_instance_endpoint": {
                                "expression": {
                                    "references": [
                                        "module.db_instance.db_instance_endpoint",
                                        "module.db_instance"
                                    ]
                                },
                                "description": "The connection endpoint"
                            },
                            "db_instance_engine": {
                                "expression": {
                                    "references": [
                                        "module.db_instance.db_instance_engine",
                                        "module.db_instance"
                                    ]
                                },
                                "description": "The database engine"
                            },
                            "db_instance_engine_version_actual": {
                                "expression": {
                                    "references": [
                                        "module.db_instance.db_instance_engine_version_actual",
                                        "module.db_instance"
                                    ]
                                },
                                "description": "The running version of the database"
                            },
                            "db_instance_hosted_zone_id": {
                                "expression": {
                                    "references": [
                                        "module.db_instance.db_instance_hosted_zone_id",
                                        "module.db_instance"
                                    ]
                                },
                                "description": "The canonical hosted zone ID of the DB instance (to be used in a Route 53 Alias record)"
                            },
                            "db_instance_id": {
                                "expression": {
                                    "references": [
                                        "module.db_instance.db_instance_id",
                                        "module.db_instance"
                                    ]
                                },
                                "description": "The RDS instance ID"
                            },
                            "db_instance_name": {
                                "expression": {
                                    "references": [
                                        "module.db_instance.db_instance_name",
                                        "module.db_instance"
                                    ]
                                },
                                "description": "The database name"
                            },
                            "db_instance_password": {
                                "sensitive": true,
                                "expression": {
                                    "references": [
                                        "local.password"
                                    ]
                                },
                                "description": "The database password (this password may be old, because Terraform doesn't track it after initial creation)"
                            },
                            "db_instance_port": {
                                "expression": {
                                    "references": [
                                        "module.db_instance.db_instance_port",
                                        "module.db_instance"
                                    ]
                                },
                                "description": "The database port"
                            },
                            "db_instance_resource_id": {
                                "expression": {
                                    "references": [
                                        "module.db_instance.db_instance_resource_id",
                                        "module.db_instance"
                                    ]
                                },
                                "description": "The RDS Resource ID of this instance"
                            },
                            "db_instance_status": {
                                "expression": {
                                    "references": [
                                        "module.db_instance.db_instance_status",
                                        "module.db_instance"
                                    ]
                                },
                                "description": "The RDS instance status"
                            },
                            "db_instance_username": {
                                "sensitive": true,
                                "expression": {
                                    "references": [
                                        "module.db_instance.db_instance_username",
                                        "module.db_instance"
                                    ]
                                },
                                "description": "The master username for the database"
                            },
                            "db_option_group_arn": {
                                "expression": {
                                    "references": [
                                        "module.db_option_group.db_option_group_arn",
                                        "module.db_option_group"
                                    ]
                                },
                                "description": "The ARN of the db option group"
                            },
                            "db_option_group_id": {
                                "expression": {
                                    "references": [
                                        "module.db_option_group.db_option_group_id",
                                        "module.db_option_group"
                                    ]
                                },
                                "description": "The db option group id"
                            },
                            "db_parameter_group_arn": {
                                "expression": {
                                    "references": [
                                        "module.db_parameter_group.db_parameter_group_arn",
                                        "module.db_parameter_group"
                                    ]
                                },
                                "description": "The ARN of the db parameter group"
                            },
                            "db_parameter_group_id": {
                                "expression": {
                                    "references": [
                                        "module.db_parameter_group.db_parameter_group_id",
                                        "module.db_parameter_group"
                                    ]
                                },
                                "description": "The db parameter group id"
                            },
                            "db_subnet_group_arn": {
                                "expression": {
                                    "references": [
                                        "module.db_subnet_group.db_subnet_group_arn",
                                        "module.db_subnet_group"
                                    ]
                                },
                                "description": "The ARN of the db subnet group"
                            },
                            "db_subnet_group_id": {
                                "expression": {
                                    "references": [
                                        "module.db_subnet_group.db_subnet_group_id",
                                        "module.db_subnet_group"
                                    ]
                                },
                                "description": "The db subnet group name"
                            },
                            "enhanced_monitoring_iam_role_arn": {
                                "expression": {
                                    "references": [
                                        "module.db_instance.enhanced_monitoring_iam_role_arn",
                                        "module.db_instance"
                                    ]
                                },
                                "description": "The Amazon Resource Name (ARN) specifying the monitoring role"
                            },
                            "enhanced_monitoring_iam_role_name": {
                                "expression": {
                                    "references": [
                                        "module.db_instance.enhanced_monitoring_iam_role_name",
                                        "module.db_instance"
                                    ]
                                },
                                "description": "The name of the monitoring role"
                            }
                        },
                        "resources": [
                            {
                                "address": "random_password.master_password",
                                "mode": "managed",
                                "type": "random_password",
                                "name": "master_password",
                                "provider_config_key": "module.db_disabled:random",
                                "expressions": {
                                    "length": {
                                        "references": [
                                            "var.random_password_length"
                                        ]
                                    },
                                    "special": {
                                        "constant_value": false
                                    }
                                },
                                "schema_version": 1,
                                "count_expression": {
                                    "references": [
                                        "local.create_random_password"
                                    ]
                                }
                            }
                        ],
                        "module_calls": {
                            "db_instance": {
                                "source": "./modules/db_instance",
                                "expressions": {
                                    "allocated_storage": {
                                        "references": [
                                            "var.allocated_storage"
                                        ]
                                    },
                                    "allow_major_version_upgrade": {
                                        "references": [
                                            "var.allow_major_version_upgrade"
                                        ]
                                    },
                                    "apply_immediately": {
                                        "references": [
                                            "var.apply_immediately"
                                        ]
                                    },
                                    "auto_minor_version_upgrade": {
                                        "references": [
                                            "var.auto_minor_version_upgrade"
                                        ]
                                    },
                                    "availability_zone": {
                                        "references": [
                                            "var.availability_zone"
                                        ]
                                    },
                                    "backup_retention_period": {
                                        "references": [
                                            "var.backup_retention_period"
                                        ]
                                    },
                                    "backup_window": {
                                        "references": [
                                            "var.backup_window"
                                        ]
                                    },
                                    "ca_cert_identifier": {
                                        "references": [
                                            "var.ca_cert_identifier"
                                        ]
                                    },
                                    "character_set_name": {
                                        "references": [
                                            "var.character_set_name"
                                        ]
                                    },
                                    "cloudwatch_log_group_kms_key_id": {
                                        "references": [
                                            "var.cloudwatch_log_group_kms_key_id"
                                        ]
                                    },
                                    "cloudwatch_log_group_retention_in_days": {
                                        "references": [
                                            "var.cloudwatch_log_group_retention_in_days"
                                        ]
                                    },
                                    "copy_tags_to_snapshot": {
                                        "references": [
                                            "var.copy_tags_to_snapshot"
                                        ]
                                    },
                                    "create": {
                                        "references": [
                                            "local.create_db_instance"
                                        ]
                                    },
                                    "create_cloudwatch_log_group": {
                                        "references": [
                                            "var.create_cloudwatch_log_group"
                                        ]
                                    },
                                    "create_monitoring_role": {
                                        "references": [
                                            "var.create_monitoring_role"
                                        ]
                                    },
                                    "db_name": {
                                        "references": [
                                            "var.db_name"
                                        ]
                                    },
                                    "db_subnet_group_name": {
                                        "references": [
                                            "local.db_subnet_group_name"
                                        ]
                                    },
                                    "delete_automated_backups": {
                                        "references": [
                                            "var.delete_automated_backups"
                                        ]
                                    },
                                    "deletion_protection": {
                                        "references": [
                                            "var.deletion_protection"
                                        ]
                                    },
                                    "domain": {
                                        "references": [
                                            "var.domain"
                                        ]
                                    },
                                    "domain_iam_role_name": {
                                        "references": [
                                            "var.domain_iam_role_name"
                                        ]
                                    },
                                    "enabled_cloudwatch_logs_exports": {
                                        "references": [
                                            "var.enabled_cloudwatch_logs_exports"
                                        ]
                                    },
                                    "engine": {
                                        "references": [
                                            "var.engine"
                                        ]
                                    },
                                    "engine_version": {
                                        "references": [
                                            "var.engine_version"
                                        ]
                                    },
                                    "final_snapshot_identifier_prefix": {
                                        "references": [
                                            "var.final_snapshot_identifier_prefix"
                                        ]
                                    },
                                    "iam_database_authentication_enabled": {
                                        "references": [
                                            "var.iam_database_authentication_enabled"
                                        ]
                                    },
                                    "identifier": {
                                        "references": [
                                            "var.identifier"
                                        ]
                                    },
                                    "instance_class": {
                                        "references": [
                                            "var.instance_class"
                                        ]
                                    },
                                    "iops": {
                                        "references": [
                                            "var.iops"
                                        ]
                                    },
                                    "kms_key_id": {
                                        "references": [
                                            "var.kms_key_id"
                                        ]
                                    },
                                    "license_model": {
                                        "references": [
                                            "var.license_model"
                                        ]
                                    },
                                    "maintenance_window": {
                                        "references": [
                                            "var.maintenance_window"
                                        ]
                                    },
                                    "max_allocated_storage": {
                                        "references": [
                                            "var.max_allocated_storage"
                                        ]
                                    },
                                    "monitoring_interval": {
                                        "references": [
                                            "var.monitoring_interval"
                                        ]
                                    },
                                    "monitoring_role_arn": {
                                        "references": [
                                            "var.monitoring_role_arn"
                                        ]
                                    },
                                    "monitoring_role_description": {
                                        "references": [
                                            "var.monitoring_role_description"
                                        ]
                                    },
                                    "monitoring_role_name": {
                                        "references": [
                                            "var.monitoring_role_name"
                                        ]
                                    },
                                    "multi_az": {
                                        "references": [
                                            "var.multi_az"
                                        ]
                                    },
                                    "option_group_name": {
                                        "references": [
                                            "local.option_group"
                                        ]
                                    },
                                    "parameter_group_name": {
                                        "references": [
                                            "local.parameter_group_name_id"
                                        ]
                                    },
                                    "password": {
                                        "references": [
                                            "local.password"
                                        ]
                                    },
                                    "performance_insights_enabled": {
                                        "references": [
                                            "var.performance_insights_enabled"
                                        ]
                                    },
                                    "performance_insights_kms_key_id": {
                                        "references": [
                                            "var.performance_insights_enabled",
                                            "var.performance_insights_kms_key_id"
                                        ]
                                    },
                                    "performance_insights_retention_period": {
                                        "references": [
                                            "var.performance_insights_retention_period"
                                        ]
                                    },
                                    "port": {
                                        "references": [
                                            "var.port"
                                        ]
                                    },
                                    "publicly_accessible": {
                                        "references": [
                                            "var.publicly_accessible"
                                        ]
                                    },
                                    "replica_mode": {
                                        "references": [
                                            "var.replica_mode"
                                        ]
                                    },
                                    "replicate_source_db": {
                                        "references": [
                                            "var.replicate_source_db"
                                        ]
                                    },
                                    "restore_to_point_in_time": {
                                        "references": [
                                            "var.restore_to_point_in_time"
                                        ]
                                    },
                                    "s3_import": {
                                        "references": [
                                            "var.s3_import"
                                        ]
                                    },
                                    "skip_final_snapshot": {
                                        "references": [
                                            "var.skip_final_snapshot"
                                        ]
                                    },
                                    "snapshot_identifier": {
                                        "references": [
                                            "var.snapshot_identifier"
                                        ]
                                    },
                                    "storage_encrypted": {
                                        "references": [
                                            "var.storage_encrypted"
                                        ]
                                    },
                                    "storage_type": {
                                        "references": [
                                            "var.storage_type"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.tags",
                                            "var.db_instance_tags"
                                        ]
                                    },
                                    "timeouts": {
                                        "references": [
                                            "var.timeouts"
                                        ]
                                    },
                                    "timezone": {
                                        "references": [
                                            "var.timezone"
                                        ]
                                    },
                                    "username": {
                                        "references": [
                                            "var.username"
                                        ]
                                    },
                                    "vpc_security_group_ids": {
                                        "references": [
                                            "var.vpc_security_group_ids"
                                        ]
                                    }
                                },
                                "module": {
                                    "outputs": {
                                        "db_instance_address": {
                                            "expression": {
                                                "references": [
                                                    "aws_db_instance.this[0].address",
                                                    "aws_db_instance.this[0]",
                                                    "aws_db_instance.this"
                                                ]
                                            },
                                            "description": "The address of the RDS instance"
                                        },
                                        "db_instance_arn": {
                                            "expression": {
                                                "references": [
                                                    "aws_db_instance.this[0].arn",
                                                    "aws_db_instance.this[0]",
                                                    "aws_db_instance.this"
                                                ]
                                            },
                                            "description": "The ARN of the RDS instance"
                                        },
                                        "db_instance_availability_zone": {
                                            "expression": {
                                                "references": [
                                                    "aws_db_instance.this[0].availability_zone",
                                                    "aws_db_instance.this[0]",
                                                    "aws_db_instance.this"
                                                ]
                                            },
                                            "description": "The availability zone of the RDS instance"
                                        },
                                        "db_instance_ca_cert_identifier": {
                                            "expression": {
                                                "references": [
                                                    "aws_db_instance.this[0].ca_cert_identifier",
                                                    "aws_db_instance.this[0]",
                                                    "aws_db_instance.this"
                                                ]
                                            },
                                            "description": "Specifies the identifier of the CA certificate for the DB instance"
                                        },
                                        "db_instance_cloudwatch_log_groups": {
                                            "expression": {
                                                "references": [
                                                    "aws_cloudwatch_log_group.this"
                                                ]
                                            },
                                            "description": "Map of CloudWatch log groups created and their attributes"
                                        },
                                        "db_instance_domain": {
                                            "expression": {
                                                "references": [
                                                    "aws_db_instance.this[0].domain",
                                                    "aws_db_instance.this[0]",
                                                    "aws_db_instance.this"
                                                ]
                                            },
                                            "description": "The ID of the Directory Service Active Directory domain the instance is joined to"
                                        },
                                        "db_instance_domain_iam_role_name": {
                                            "expression": {
                                                "references": [
                                                    "aws_db_instance.this[0].domain_iam_role_name",
                                                    "aws_db_instance.this[0]",
                                                    "aws_db_instance.this"
                                                ]
                                            },
                                            "description": "The name of the IAM role to be used when making API calls to the Directory Service. "
                                        },
                                        "db_instance_endpoint": {
                                            "expression": {
                                                "references": [
                                                    "aws_db_instance.this[0].endpoint",
                                                    "aws_db_instance.this[0]",
                                                    "aws_db_instance.this"
                                                ]
                                            },
                                            "description": "The connection endpoint"
                                        },
                                        "db_instance_engine": {
                                            "expression": {
                                                "references": [
                                                    "aws_db_instance.this[0].engine",
                                                    "aws_db_instance.this[0]",
                                                    "aws_db_instance.this"
                                                ]
                                            },
                                            "description": "The database engine"
                                        },
                                        "db_instance_engine_version_actual": {
                                            "expression": {
                                                "references": [
                                                    "aws_db_instance.this[0].engine_version_actual",
                                                    "aws_db_instance.this[0]",
                                                    "aws_db_instance.this"
                                                ]
                                            },
                                            "description": "The running version of the database"
                                        },
                                        "db_instance_hosted_zone_id": {
                                            "expression": {
                                                "references": [
                                                    "aws_db_instance.this[0].hosted_zone_id",
                                                    "aws_db_instance.this[0]",
                                                    "aws_db_instance.this"
                                                ]
                                            },
                                            "description": "The canonical hosted zone ID of the DB instance (to be used in a Route 53 Alias record)"
                                        },
                                        "db_instance_id": {
                                            "expression": {
                                                "references": [
                                                    "aws_db_instance.this[0].id",
                                                    "aws_db_instance.this[0]",
                                                    "aws_db_instance.this"
                                                ]
                                            },
                                            "description": "The RDS instance ID"
                                        },
                                        "db_instance_name": {
                                            "expression": {
                                                "references": [
                                                    "aws_db_instance.this[0].name",
                                                    "aws_db_instance.this[0]",
                                                    "aws_db_instance.this"
                                                ]
                                            },
                                            "description": "The database name"
                                        },
                                        "db_instance_password": {
                                            "sensitive": true,
                                            "expression": {
                                                "references": [
                                                    "aws_db_instance.this[0].password",
                                                    "aws_db_instance.this[0]",
                                                    "aws_db_instance.this"
                                                ]
                                            },
                                            "description": "The master password"
                                        },
                                        "db_instance_port": {
                                            "expression": {
                                                "references": [
                                                    "aws_db_instance.this[0].port",
                                                    "aws_db_instance.this[0]",
                                                    "aws_db_instance.this"
                                                ]
                                            },
                                            "description": "The database port"
                                        },
                                        "db_instance_resource_id": {
                                            "expression": {
                                                "references": [
                                                    "aws_db_instance.this[0].resource_id",
                                                    "aws_db_instance.this[0]",
                                                    "aws_db_instance.this"
                                                ]
                                            },
                                            "description": "The RDS Resource ID of this instance"
                                        },
                                        "db_instance_status": {
                                            "expression": {
                                                "references": [
                                                    "aws_db_instance.this[0].status",
                                                    "aws_db_instance.this[0]",
                                                    "aws_db_instance.this"
                                                ]
                                            },
                                            "description": "The RDS instance status"
                                        },
                                        "db_instance_username": {
                                            "sensitive": true,
                                            "expression": {
                                                "references": [
                                                    "aws_db_instance.this[0].username",
                                                    "aws_db_instance.this[0]",
                                                    "aws_db_instance.this"
                                                ]
                                            },
                                            "description": "The master username for the database"
                                        },
                                        "enhanced_monitoring_iam_role_arn": {
                                            "expression": {
                                                "references": [
                                                    "aws_iam_role.enhanced_monitoring[0].arn",
                                                    "aws_iam_role.enhanced_monitoring[0]",
                                                    "aws_iam_role.enhanced_monitoring"
                                                ]
                                            },
                                            "description": "The Amazon Resource Name (ARN) specifying the monitoring role"
                                        },
                                        "enhanced_monitoring_iam_role_name": {
                                            "expression": {
                                                "references": [
                                                    "aws_iam_role.enhanced_monitoring[0].name",
                                                    "aws_iam_role.enhanced_monitoring[0]",
                                                    "aws_iam_role.enhanced_monitoring"
                                                ]
                                            },
                                            "description": "The name of the monitoring role"
                                        }
                                    },
                                    "resources": [
                                        {
                                            "address": "aws_cloudwatch_log_group.this",
                                            "mode": "managed",
                                            "type": "aws_cloudwatch_log_group",
                                            "name": "this",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "kms_key_id": {
                                                    "references": [
                                                        "var.cloudwatch_log_group_kms_key_id"
                                                    ]
                                                },
                                                "name": {
                                                    "references": [
                                                        "var.identifier",
                                                        "each.value"
                                                    ]
                                                },
                                                "retention_in_days": {
                                                    "references": [
                                                        "var.cloudwatch_log_group_retention_in_days"
                                                    ]
                                                },
                                                "tags": {
                                                    "references": [
                                                        "var.tags"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0,
                                            "for_each_expression": {
                                                "references": [
                                                    "var.enabled_cloudwatch_logs_exports",
                                                    "var.create",
                                                    "var.create_cloudwatch_log_group"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "aws_db_instance.this",
                                            "mode": "managed",
                                            "type": "aws_db_instance",
                                            "name": "this",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "allocated_storage": {
                                                    "references": [
                                                        "var.allocated_storage"
                                                    ]
                                                },
                                                "allow_major_version_upgrade": {
                                                    "references": [
                                                        "var.allow_major_version_upgrade"
                                                    ]
                                                },
                                                "apply_immediately": {
                                                    "references": [
                                                        "var.apply_immediately"
                                                    ]
                                                },
                                                "auto_minor_version_upgrade": {
                                                    "references": [
                                                        "var.auto_minor_version_upgrade"
                                                    ]
                                                },
                                                "availability_zone": {
                                                    "references": [
                                                        "var.availability_zone"
                                                    ]
                                                },
                                                "backup_retention_period": {
                                                    "references": [
                                                        "var.backup_retention_period"
                                                    ]
                                                },
                                                "backup_window": {
                                                    "references": [
                                                        "var.backup_window"
                                                    ]
                                                },
                                                "ca_cert_identifier": {
                                                    "references": [
                                                        "var.ca_cert_identifier"
                                                    ]
                                                },
                                                "character_set_name": {
                                                    "references": [
                                                        "var.character_set_name"
                                                    ]
                                                },
                                                "copy_tags_to_snapshot": {
                                                    "references": [
                                                        "var.copy_tags_to_snapshot"
                                                    ]
                                                },
                                                "db_name": {
                                                    "references": [
                                                        "var.db_name"
                                                    ]
                                                },
                                                "db_subnet_group_name": {
                                                    "references": [
                                                        "var.db_subnet_group_name"
                                                    ]
                                                },
                                                "delete_automated_backups": {
                                                    "references": [
                                                        "var.delete_automated_backups"
                                                    ]
                                                },
                                                "deletion_protection": {
                                                    "references": [
                                                        "var.deletion_protection"
                                                    ]
                                                },
                                                "domain": {
                                                    "references": [
                                                        "var.domain"
                                                    ]
                                                },
                                                "domain_iam_role_name": {
                                                    "references": [
                                                        "var.domain_iam_role_name"
                                                    ]
                                                },
                                                "enabled_cloudwatch_logs_exports": {
                                                    "references": [
                                                        "var.enabled_cloudwatch_logs_exports"
                                                    ]
                                                },
                                                "engine": {
                                                    "references": [
                                                        "local.engine"
                                                    ]
                                                },
                                                "engine_version": {
                                                    "references": [
                                                        "local.engine_version"
                                                    ]
                                                },
                                                "final_snapshot_identifier": {
                                                    "references": [
                                                        "local.final_snapshot_identifier"
                                                    ]
                                                },
                                                "iam_database_authentication_enabled": {
                                                    "references": [
                                                        "var.iam_database_authentication_enabled"
                                                    ]
                                                },
                                                "identifier": {
                                                    "references": [
                                                        "var.identifier"
                                                    ]
                                                },
                                                "instance_class": {
                                                    "references": [
                                                        "var.instance_class"
                                                    ]
                                                },
                                                "iops": {
                                                    "references": [
                                                        "var.iops"
                                                    ]
                                                },
                                                "kms_key_id": {
                                                    "references": [
                                                        "var.kms_key_id"
                                                    ]
                                                },
                                                "license_model": {
                                                    "references": [
                                                        "var.license_model"
                                                    ]
                                                },
                                                "maintenance_window": {
                                                    "references": [
                                                        "var.maintenance_window"
                                                    ]
                                                },
                                                "max_allocated_storage": {
                                                    "references": [
                                                        "var.max_allocated_storage"
                                                    ]
                                                },
                                                "monitoring_interval": {
                                                    "references": [
                                                        "var.monitoring_interval"
                                                    ]
                                                },
                                                "monitoring_role_arn": {
                                                    "references": [
                                                        "var.monitoring_interval",
                                                        "local.monitoring_role_arn"
                                                    ]
                                                },
                                                "multi_az": {
                                                    "references": [
                                                        "var.multi_az"
                                                    ]
                                                },
                                                "option_group_name": {
                                                    "references": [
                                                        "var.option_group_name"
                                                    ]
                                                },
                                                "parameter_group_name": {
                                                    "references": [
                                                        "var.parameter_group_name"
                                                    ]
                                                },
                                                "password": {
                                                    "references": [
                                                        "local.password"
                                                    ]
                                                },
                                                "performance_insights_enabled": {
                                                    "references": [
                                                        "var.performance_insights_enabled"
                                                    ]
                                                },
                                                "performance_insights_kms_key_id": {
                                                    "references": [
                                                        "var.performance_insights_enabled",
                                                        "var.performance_insights_kms_key_id"
                                                    ]
                                                },
                                                "performance_insights_retention_period": {
                                                    "references": [
                                                        "var.performance_insights_enabled",
                                                        "var.performance_insights_retention_period"
                                                    ]
                                                },
                                                "port": {
                                                    "references": [
                                                        "var.port"
                                                    ]
                                                },
                                                "publicly_accessible": {
                                                    "references": [
                                                        "var.publicly_accessible"
                                                    ]
                                                },
                                                "replica_mode": {
                                                    "references": [
                                                        "var.replica_mode"
                                                    ]
                                                },
                                                "replicate_source_db": {
                                                    "references": [
                                                        "var.replicate_source_db"
                                                    ]
                                                },
                                                "skip_final_snapshot": {
                                                    "references": [
                                                        "var.skip_final_snapshot"
                                                    ]
                                                },
                                                "snapshot_identifier": {
                                                    "references": [
                                                        "var.snapshot_identifier"
                                                    ]
                                                },
                                                "storage_encrypted": {
                                                    "references": [
                                                        "var.storage_encrypted"
                                                    ]
                                                },
                                                "storage_type": {
                                                    "references": [
                                                        "var.storage_type"
                                                    ]
                                                },
                                                "tags": {
                                                    "references": [
                                                        "var.tags"
                                                    ]
                                                },
                                                "timeouts": {
                                                    "create": {
                                                        "references": [
                                                            "var.timeouts"
                                                        ]
                                                    },
                                                    "delete": {
                                                        "references": [
                                                            "var.timeouts"
                                                        ]
                                                    },
                                                    "update": {
                                                        "references": [
                                                            "var.timeouts"
                                                        ]
                                                    }
                                                },
                                                "timezone": {
                                                    "references": [
                                                        "var.timezone"
                                                    ]
                                                },
                                                "username": {
                                                    "references": [
                                                        "local.username"
                                                    ]
                                                },
                                                "vpc_security_group_ids": {
                                                    "references": [
                                                        "var.vpc_security_group_ids"
                                                    ]
                                                }
                                            },
                                            "schema_version": 1,
                                            "count_expression": {
                                                "references": [
                                                    "var.create"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "aws_iam_role.enhanced_monitoring",
                                            "mode": "managed",
                                            "type": "aws_iam_role",
                                            "name": "enhanced_monitoring",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "assume_role_policy": {
                                                    "references": [
                                                        "data.aws_iam_policy_document.enhanced_monitoring.json",
                                                        "data.aws_iam_policy_document.enhanced_monitoring"
                                                    ]
                                                },
                                                "description": {
                                                    "references": [
                                                        "var.monitoring_role_description"
                                                    ]
                                                },
                                                "name": {
                                                    "references": [
                                                        "var.monitoring_role_name"
                                                    ]
                                                },
                                                "tags": {
                                                    "references": [
                                                        "var.monitoring_role_name",
                                                        "var.tags"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0,
                                            "count_expression": {
                                                "references": [
                                                    "var.create_monitoring_role"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "aws_iam_role_policy_attachment.enhanced_monitoring",
                                            "mode": "managed",
                                            "type": "aws_iam_role_policy_attachment",
                                            "name": "enhanced_monitoring",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "policy_arn": {
                                                    "references": [
                                                        "data.aws_partition.current.partition",
                                                        "data.aws_partition.current"
                                                    ]
                                                },
                                                "role": {
                                                    "references": [
                                                        "aws_iam_role.enhanced_monitoring[0].name",
                                                        "aws_iam_role.enhanced_monitoring[0]",
                                                        "aws_iam_role.enhanced_monitoring"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0,
                                            "count_expression": {
                                                "references": [
                                                    "var.create_monitoring_role"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "random_id.snapshot_identifier",
                                            "mode": "managed",
                                            "type": "random_id",
                                            "name": "snapshot_identifier",
                                            "provider_config_key": "module.db_disabled:random",
                                            "expressions": {
                                                "byte_length": {
                                                    "constant_value": 4
                                                },
                                                "keepers": {
                                                    "references": [
                                                        "var.identifier"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0,
                                            "count_expression": {
                                                "references": [
                                                    "var.create",
                                                    "var.skip_final_snapshot"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "data.aws_iam_policy_document.enhanced_monitoring",
                                            "mode": "data",
                                            "type": "aws_iam_policy_document",
                                            "name": "enhanced_monitoring",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "statement": [
                                                    {
                                                        "actions": {
                                                            "constant_value": [
                                                                "sts:AssumeRole"
                                                            ]
                                                        },
                                                        "principals": [
                                                            {
                                                                "identifiers": {
                                                                    "constant_value": [
                                                                        "monitoring.rds.amazonaws.com"
                                                                    ]
                                                                },
                                                                "type": {
                                                                    "constant_value": "Service"
                                                                }
                                                            }
                                                        ]
                                                    }
                                                ]
                                            },
                                            "schema_version": 0
                                        },
                                        {
                                            "address": "data.aws_partition.current",
                                            "mode": "data",
                                            "type": "aws_partition",
                                            "name": "current",
                                            "provider_config_key": "aws",
                                            "schema_version": 0
                                        }
                                    ],
                                    "variables": {
                                        "allocated_storage": {
                                            "default": null,
                                            "description": "The allocated storage in gigabytes"
                                        },
                                        "allow_major_version_upgrade": {
                                            "default": false,
                                            "description": "Indicates that major version upgrades are allowed. Changing this parameter does not result in an outage and the change is asynchronously applied as soon as possible"
                                        },
                                        "apply_immediately": {
                                            "default": false,
                                            "description": "Specifies whether any database modifications are applied immediately, or during the next maintenance window"
                                        },
                                        "auto_minor_version_upgrade": {
                                            "default": true,
                                            "description": "Indicates that minor engine upgrades will be applied automatically to the DB instance during the maintenance window"
                                        },
                                        "availability_zone": {
                                            "default": null,
                                            "description": "The Availability Zone of the RDS instance"
                                        },
                                        "backup_retention_period": {
                                            "default": null,
                                            "description": "The days to retain backups for"
                                        },
                                        "backup_window": {
                                            "default": null,
                                            "description": "The daily time range (in UTC) during which automated backups are created if they are enabled. Example: '09:46-10:16'. Must not overlap with maintenance_window"
                                        },
                                        "ca_cert_identifier": {
                                            "default": null,
                                            "description": "Specifies the identifier of the CA certificate for the DB instance"
                                        },
                                        "character_set_name": {
                                            "default": null,
                                            "description": "The character set name to use for DB encoding in Oracle instances. This can't be changed. See Oracle Character Sets Supported in Amazon RDS and Collations and Character Sets for Microsoft SQL Server for more information. This can only be set on creation."
                                        },
                                        "cloudwatch_log_group_kms_key_id": {
                                            "default": null,
                                            "description": "The ARN of the KMS Key to use when encrypting log data"
                                        },
                                        "cloudwatch_log_group_retention_in_days": {
                                            "default": 7,
                                            "description": "The number of days to retain CloudWatch logs for the DB instance"
                                        },
                                        "copy_tags_to_snapshot": {
                                            "default": false,
                                            "description": "On delete, copy all Instance tags to the final snapshot"
                                        },
                                        "create": {
                                            "default": true,
                                            "description": "Whether to create this resource or not?"
                                        },
                                        "create_cloudwatch_log_group": {
                                            "default": false,
                                            "description": "Determines whether a CloudWatch log group is created for each `enabled_cloudwatch_logs_exports`"
                                        },
                                        "create_monitoring_role": {
                                            "default": false,
                                            "description": "Create IAM role with a defined name that permits RDS to send enhanced monitoring metrics to CloudWatch Logs."
                                        },
                                        "db_name": {
                                            "default": null,
                                            "description": "The DB name to create. If omitted, no database is created initially"
                                        },
                                        "db_subnet_group_name": {
                                            "default": null,
                                            "description": "Name of DB subnet group. DB instance will be created in the VPC associated with the DB subnet group. If unspecified, will be created in the default VPC"
                                        },
                                        "delete_automated_backups": {
                                            "default": true,
                                            "description": "Specifies whether to remove automated backups immediately after the DB instance is deleted"
                                        },
                                        "deletion_protection": {
                                            "default": false,
                                            "description": "The database can't be deleted when this value is set to true."
                                        },
                                        "domain": {
                                            "default": null,
                                            "description": "The ID of the Directory Service Active Directory domain to create the instance in"
                                        },
                                        "domain_iam_role_name": {
                                            "default": null,
                                            "description": "(Required if domain is provided) The name of the IAM role to be used when making API calls to the Directory Service"
                                        },
                                        "enabled_cloudwatch_logs_exports": {
                                            "default": [],
                                            "description": "List of log types to enable for exporting to CloudWatch logs. If omitted, no logs will be exported. Valid values (depending on engine): alert, audit, error, general, listener, slowquery, trace, postgresql (PostgreSQL), upgrade (PostgreSQL)."
                                        },
                                        "engine": {
                                            "default": null,
                                            "description": "The database engine to use"
                                        },
                                        "engine_version": {
                                            "default": null,
                                            "description": "The engine version to use"
                                        },
                                        "final_snapshot_identifier_prefix": {
                                            "default": "final",
                                            "description": "The name which is prefixed to the final snapshot on cluster destroy"
                                        },
                                        "iam_database_authentication_enabled": {
                                            "default": false,
                                            "description": "Specifies whether or mappings of AWS Identity and Access Management (IAM) accounts to database accounts is enabled"
                                        },
                                        "identifier": {
                                            "description": "The name of the RDS instance"
                                        },
                                        "instance_class": {
                                            "default": null,
                                            "description": "The instance type of the RDS instance"
                                        },
                                        "iops": {
                                            "default": 0,
                                            "description": "The amount of provisioned IOPS. Setting this implies a storage_type of 'io1'"
                                        },
                                        "kms_key_id": {
                                            "default": null,
                                            "description": "The ARN for the KMS encryption key. If creating an encrypted replica, set this to the destination KMS ARN. If storage_encrypted is set to true and kms_key_id is not specified the default KMS key created in your account will be used"
                                        },
                                        "license_model": {
                                            "default": null,
                                            "description": "License model information for this DB instance. Optional, but required for some DB engines, i.e. Oracle SE1"
                                        },
                                        "maintenance_window": {
                                            "default": null,
                                            "description": "The window to perform maintenance in. Syntax: 'ddd:hh24:mi-ddd:hh24:mi'. Eg: 'Mon:00:00-Mon:03:00'"
                                        },
                                        "max_allocated_storage": {
                                            "default": 0,
                                            "description": "Specifies the value for Storage Autoscaling"
                                        },
                                        "monitoring_interval": {
                                            "default": 0,
                                            "description": "The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB instance. To disable collecting Enhanced Monitoring metrics, specify 0. The default is 0. Valid Values: 0, 1, 5, 10, 15, 30, 60."
                                        },
                                        "monitoring_role_arn": {
                                            "default": null,
                                            "description": "The ARN for the IAM role that permits RDS to send enhanced monitoring metrics to CloudWatch Logs. Must be specified if monitoring_interval is non-zero."
                                        },
                                        "monitoring_role_description": {
                                            "default": null,
                                            "description": "Description of the monitoring IAM role"
                                        },
                                        "monitoring_role_name": {
                                            "default": "rds-monitoring-role",
                                            "description": "Name of the IAM role which will be created when create_monitoring_role is enabled."
                                        },
                                        "multi_az": {
                                            "default": false,
                                            "description": "Specifies if the RDS instance is multi-AZ"
                                        },
                                        "option_group_name": {
                                            "default": null,
                                            "description": "Name of the DB option group to associate."
                                        },
                                        "parameter_group_name": {
                                            "default": null,
                                            "description": "Name of the DB parameter group to associate"
                                        },
                                        "password": {
                                            "default": null,
                                            "description": "Password for the master DB user. Note that this may show up in logs, and it will be stored in the state file"
                                        },
                                        "performance_insights_enabled": {
                                            "default": false,
                                            "description": "Specifies whether Performance Insights are enabled"
                                        },
                                        "performance_insights_kms_key_id": {
                                            "default": null,
                                            "description": "The ARN for the KMS key to encrypt Performance Insights data."
                                        },
                                        "performance_insights_retention_period": {
                                            "default": 7,
                                            "description": "The amount of time in days to retain Performance Insights data. Either 7 (7 days) or 731 (2 years)."
                                        },
                                        "port": {
                                            "default": null,
                                            "description": "The port on which the DB accepts connections"
                                        },
                                        "publicly_accessible": {
                                            "default": false,
                                            "description": "Bool to control if instance is publicly accessible"
                                        },
                                        "replica_mode": {
                                            "default": null,
                                            "description": "Specifies whether the replica is in either mounted or open-read-only mode. This attribute is only supported by Oracle instances. Oracle replicas operate in open-read-only mode unless otherwise specified"
                                        },
                                        "replicate_source_db": {
                                            "default": null,
                                            "description": "Specifies that this resource is a Replicate database, and to use this value as the source database. This correlates to the identifier of another Amazon RDS Database to replicate."
                                        },
                                        "restore_to_point_in_time": {
                                            "default": null,
                                            "description": "Restore to a point in time (MySQL is NOT supported)"
                                        },
                                        "s3_import": {
                                            "default": null,
                                            "description": "Restore from a Percona Xtrabackup in S3 (only MySQL is supported)"
                                        },
                                        "skip_final_snapshot": {
                                            "default": false,
                                            "description": "Determines whether a final DB snapshot is created before the DB instance is deleted. If true is specified, no DBSnapshot is created. If false is specified, a DB snapshot is created before the DB instance is deleted"
                                        },
                                        "snapshot_identifier": {
                                            "default": null,
                                            "description": "Specifies whether or not to create this database from a snapshot. This correlates to the snapshot ID you'd find in the RDS console, e.g: rds:production-2015-06-26-06-05."
                                        },
                                        "storage_encrypted": {
                                            "default": true,
                                            "description": "Specifies whether the DB instance is encrypted"
                                        },
                                        "storage_type": {
                                            "default": null,
                                            "description": "One of 'standard' (magnetic), 'gp2' (general purpose SSD), or 'io1' (provisioned IOPS SSD). The default is 'io1' if iops is specified, 'standard' if not. Note that this behaviour is different from the AWS web console, where the default is 'gp2'."
                                        },
                                        "tags": {
                                            "default": {},
                                            "description": "A mapping of tags to assign to all resources"
                                        },
                                        "timeouts": {
                                            "default": {},
                                            "description": "Updated Terraform resource management timeouts. Applies to `aws_db_instance` in particular to permit resource management times"
                                        },
                                        "timezone": {
                                            "default": null,
                                            "description": "Time zone of the DB instance. timezone is currently only supported by Microsoft SQL Server. The timezone can only be set on creation. See MSSQL User Guide for more information."
                                        },
                                        "username": {
                                            "default": null,
                                            "description": "Username for the master DB user"
                                        },
                                        "vpc_security_group_ids": {
                                            "default": [],
                                            "description": "List of VPC security groups to associate"
                                        }
                                    }
                                }
                            },
                            "db_option_group": {
                                "source": "./modules/db_option_group",
                                "expressions": {
                                    "create": {
                                        "references": [
                                            "local.create_db_option_group"
                                        ]
                                    },
                                    "engine_name": {
                                        "references": [
                                            "var.engine"
                                        ]
                                    },
                                    "major_engine_version": {
                                        "references": [
                                            "var.major_engine_version"
                                        ]
                                    },
                                    "name": {
                                        "references": [
                                            "var.option_group_name",
                                            "var.identifier"
                                        ]
                                    },
                                    "option_group_description": {
                                        "references": [
                                            "var.option_group_description"
                                        ]
                                    },
                                    "options": {
                                        "references": [
                                            "var.options"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.tags",
                                            "var.db_option_group_tags"
                                        ]
                                    },
                                    "timeouts": {
                                        "references": [
                                            "var.option_group_timeouts"
                                        ]
                                    },
                                    "use_name_prefix": {
                                        "references": [
                                            "var.option_group_use_name_prefix"
                                        ]
                                    }
                                },
                                "module": {
                                    "outputs": {
                                        "db_option_group_arn": {
                                            "expression": {
                                                "references": [
                                                    "aws_db_option_group.this[0].arn",
                                                    "aws_db_option_group.this[0]",
                                                    "aws_db_option_group.this"
                                                ]
                                            },
                                            "description": "The ARN of the db option group"
                                        },
                                        "db_option_group_id": {
                                            "expression": {
                                                "references": [
                                                    "aws_db_option_group.this[0].id",
                                                    "aws_db_option_group.this[0]",
                                                    "aws_db_option_group.this"
                                                ]
                                            },
                                            "description": "The db option group id"
                                        }
                                    },
                                    "resources": [
                                        {
                                            "address": "aws_db_option_group.this",
                                            "mode": "managed",
                                            "type": "aws_db_option_group",
                                            "name": "this",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "engine_name": {
                                                    "references": [
                                                        "var.engine_name"
                                                    ]
                                                },
                                                "major_engine_version": {
                                                    "references": [
                                                        "var.major_engine_version"
                                                    ]
                                                },
                                                "name": {
                                                    "references": [
                                                        "local.name"
                                                    ]
                                                },
                                                "name_prefix": {
                                                    "references": [
                                                        "local.name_prefix"
                                                    ]
                                                },
                                                "option_group_description": {
                                                    "references": [
                                                        "local.description"
                                                    ]
                                                },
                                                "tags": {
                                                    "references": [
                                                        "var.tags",
                                                        "var.name"
                                                    ]
                                                },
                                                "timeouts": {
                                                    "delete": {
                                                        "references": [
                                                            "var.timeouts"
                                                        ]
                                                    }
                                                }
                                            },
                                            "schema_version": 0,
                                            "count_expression": {
                                                "references": [
                                                    "var.create"
                                                ]
                                            }
                                        }
                                    ],
                                    "variables": {
                                        "create": {
                                            "default": true,
                                            "description": "Whether to create this resource or not?"
                                        },
                                        "engine_name": {
                                            "default": null,
                                            "description": "Specifies the name of the engine that this option group should be associated with"
                                        },
                                        "major_engine_version": {
                                            "default": null,
                                            "description": "Specifies the major version of the engine that this option group should be associated with"
                                        },
                                        "name": {
                                            "default": "",
                                            "description": "The name of the option group"
                                        },
                                        "option_group_description": {
                                            "default": null,
                                            "description": "The description of the option group"
                                        },
                                        "options": {
                                            "default": [],
                                            "description": "A list of Options to apply"
                                        },
                                        "tags": {
                                            "default": {},
                                            "description": "A mapping of tags to assign to the resource"
                                        },
                                        "timeouts": {
                                            "default": {},
                                            "description": "Define maximum timeout for deletion of `aws_db_option_group` resource"
                                        },
                                        "use_name_prefix": {
                                            "default": true,
                                            "description": "Determines whether to use `name` as is or create a unique name beginning with `name` as the specified prefix"
                                        }
                                    }
                                }
                            },
                            "db_parameter_group": {
                                "source": "./modules/db_parameter_group",
                                "expressions": {
                                    "create": {
                                        "references": [
                                            "local.create_db_parameter_group"
                                        ]
                                    },
                                    "description": {
                                        "references": [
                                            "var.parameter_group_description"
                                        ]
                                    },
                                    "family": {
                                        "references": [
                                            "var.family"
                                        ]
                                    },
                                    "name": {
                                        "references": [
                                            "var.parameter_group_name",
                                            "var.identifier"
                                        ]
                                    },
                                    "parameters": {
                                        "references": [
                                            "var.parameters"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.tags",
                                            "var.db_parameter_group_tags"
                                        ]
                                    },
                                    "use_name_prefix": {
                                        "references": [
                                            "var.parameter_group_use_name_prefix"
                                        ]
                                    }
                                },
                                "module": {
                                    "outputs": {
                                        "db_parameter_group_arn": {
                                            "expression": {
                                                "references": [
                                                    "aws_db_parameter_group.this[0].arn",
                                                    "aws_db_parameter_group.this[0]",
                                                    "aws_db_parameter_group.this"
                                                ]
                                            },
                                            "description": "The ARN of the db parameter group"
                                        },
                                        "db_parameter_group_id": {
                                            "expression": {
                                                "references": [
                                                    "aws_db_parameter_group.this[0].id",
                                                    "aws_db_parameter_group.this[0]",
                                                    "aws_db_parameter_group.this"
                                                ]
                                            },
                                            "description": "The db parameter group id"
                                        }
                                    },
                                    "resources": [
                                        {
                                            "address": "aws_db_parameter_group.this",
                                            "mode": "managed",
                                            "type": "aws_db_parameter_group",
                                            "name": "this",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "description": {
                                                    "references": [
                                                        "local.description"
                                                    ]
                                                },
                                                "family": {
                                                    "references": [
                                                        "var.family"
                                                    ]
                                                },
                                                "name": {
                                                    "references": [
                                                        "local.name"
                                                    ]
                                                },
                                                "name_prefix": {
                                                    "references": [
                                                        "local.name_prefix"
                                                    ]
                                                },
                                                "tags": {
                                                    "references": [
                                                        "var.tags",
                                                        "var.name"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0,
                                            "count_expression": {
                                                "references": [
                                                    "var.create"
                                                ]
                                            }
                                        }
                                    ],
                                    "variables": {
                                        "create": {
                                            "default": true,
                                            "description": "Whether to create this resource or not?"
                                        },
                                        "description": {
                                            "default": null,
                                            "description": "The description of the DB parameter group"
                                        },
                                        "family": {
                                            "default": null,
                                            "description": "The family of the DB parameter group"
                                        },
                                        "name": {
                                            "default": "",
                                            "description": "The name of the DB parameter group"
                                        },
                                        "parameters": {
                                            "default": [],
                                            "description": "A list of DB parameter maps to apply"
                                        },
                                        "tags": {
                                            "default": {},
                                            "description": "A mapping of tags to assign to the resource"
                                        },
                                        "use_name_prefix": {
                                            "default": true,
                                            "description": "Determines whether to use `name` as is or create a unique name beginning with `name` as the specified prefix"
                                        }
                                    }
                                }
                            },
                            "db_subnet_group": {
                                "source": "./modules/db_subnet_group",
                                "expressions": {
                                    "create": {
                                        "references": [
                                            "local.create_db_subnet_group"
                                        ]
                                    },
                                    "description": {
                                        "references": [
                                            "var.db_subnet_group_description"
                                        ]
                                    },
                                    "name": {
                                        "references": [
                                            "var.db_subnet_group_name",
                                            "var.identifier"
                                        ]
                                    },
                                    "subnet_ids": {
                                        "references": [
                                            "var.subnet_ids"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.tags",
                                            "var.db_subnet_group_tags"
                                        ]
                                    },
                                    "use_name_prefix": {
                                        "references": [
                                            "var.db_subnet_group_use_name_prefix"
                                        ]
                                    }
                                },
                                "module": {
                                    "outputs": {
                                        "db_subnet_group_arn": {
                                            "expression": {
                                                "references": [
                                                    "aws_db_subnet_group.this[0].arn",
                                                    "aws_db_subnet_group.this[0]",
                                                    "aws_db_subnet_group.this"
                                                ]
                                            },
                                            "description": "The ARN of the db subnet group"
                                        },
                                        "db_subnet_group_id": {
                                            "expression": {
                                                "references": [
                                                    "aws_db_subnet_group.this[0].id",
                                                    "aws_db_subnet_group.this[0]",
                                                    "aws_db_subnet_group.this"
                                                ]
                                            },
                                            "description": "The db subnet group name"
                                        }
                                    },
                                    "resources": [
                                        {
                                            "address": "aws_db_subnet_group.this",
                                            "mode": "managed",
                                            "type": "aws_db_subnet_group",
                                            "name": "this",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "description": {
                                                    "references": [
                                                        "local.description"
                                                    ]
                                                },
                                                "name": {
                                                    "references": [
                                                        "local.name"
                                                    ]
                                                },
                                                "name_prefix": {
                                                    "references": [
                                                        "local.name_prefix"
                                                    ]
                                                },
                                                "subnet_ids": {
                                                    "references": [
                                                        "var.subnet_ids"
                                                    ]
                                                },
                                                "tags": {
                                                    "references": [
                                                        "var.tags",
                                                        "var.name"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0,
                                            "count_expression": {
                                                "references": [
                                                    "var.create"
                                                ]
                                            }
                                        }
                                    ],
                                    "variables": {
                                        "create": {
                                            "default": true,
                                            "description": "Whether to create this resource or not?"
                                        },
                                        "description": {
                                            "default": null,
                                            "description": "The description of the DB subnet group"
                                        },
                                        "name": {
                                            "default": "",
                                            "description": "The name of the DB subnet group"
                                        },
                                        "subnet_ids": {
                                            "default": [],
                                            "description": "A list of VPC subnet IDs"
                                        },
                                        "tags": {
                                            "default": {},
                                            "description": "A mapping of tags to assign to the resource"
                                        },
                                        "use_name_prefix": {
                                            "default": true,
                                            "description": "Determines whether to use `name` as is or create a unique name beginning with `name` as the specified prefix"
                                        }
                                    }
                                }
                            }
                        },
                        "variables": {
                            "allocated_storage": {
                                "default": null,
                                "description": "The allocated storage in gigabytes"
                            },
                            "allow_major_version_upgrade": {
                                "default": false,
                                "description": "Indicates that major version upgrades are allowed. Changing this parameter does not result in an outage and the change is asynchronously applied as soon as possible"
                            },
                            "apply_immediately": {
                                "default": false,
                                "description": "Specifies whether any database modifications are applied immediately, or during the next maintenance window"
                            },
                            "auto_minor_version_upgrade": {
                                "default": true,
                                "description": "Indicates that minor engine upgrades will be applied automatically to the DB instance during the maintenance window"
                            },
                            "availability_zone": {
                                "default": null,
                                "description": "The Availability Zone of the RDS instance"
                            },
                            "backup_retention_period": {
                                "default": null,
                                "description": "The days to retain backups for"
                            },
                            "backup_window": {
                                "default": null,
                                "description": "The daily time range (in UTC) during which automated backups are created if they are enabled. Example: '09:46-10:16'. Must not overlap with maintenance_window"
                            },
                            "ca_cert_identifier": {
                                "default": null,
                                "description": "Specifies the identifier of the CA certificate for the DB instance"
                            },
                            "character_set_name": {
                                "default": null,
                                "description": "The character set name to use for DB encoding in Oracle instances. This can't be changed. See Oracle Character Sets Supported in Amazon RDS and Collations and Character Sets for Microsoft SQL Server for more information. This can only be set on creation"
                            },
                            "cloudwatch_log_group_kms_key_id": {
                                "default": null,
                                "description": "The ARN of the KMS Key to use when encrypting log data"
                            },
                            "cloudwatch_log_group_retention_in_days": {
                                "default": 7,
                                "description": "The number of days to retain CloudWatch logs for the DB instance"
                            },
                            "copy_tags_to_snapshot": {
                                "default": false,
                                "description": "On delete, copy all Instance tags to the final snapshot"
                            },
                            "create_cloudwatch_log_group": {
                                "default": false,
                                "description": "Determines whether a CloudWatch log group is created for each `enabled_cloudwatch_logs_exports`"
                            },
                            "create_db_instance": {
                                "default": true,
                                "description": "Whether to create a database instance"
                            },
                            "create_db_option_group": {
                                "default": true,
                                "description": "Create a database option group"
                            },
                            "create_db_parameter_group": {
                                "default": true,
                                "description": "Whether to create a database parameter group"
                            },
                            "create_db_subnet_group": {
                                "default": false,
                                "description": "Whether to create a database subnet group"
                            },
                            "create_monitoring_role": {
                                "default": false,
                                "description": "Create IAM role with a defined name that permits RDS to send enhanced monitoring metrics to CloudWatch Logs"
                            },
                            "create_random_password": {
                                "default": true,
                                "description": "Whether to create random password for RDS primary cluster"
                            },
                            "db_instance_tags": {
                                "default": {},
                                "description": "Additional tags for the DB instance"
                            },
                            "db_name": {
                                "default": null,
                                "description": "The DB name to create. If omitted, no database is created initially"
                            },
                            "db_option_group_tags": {
                                "default": {},
                                "description": "Additional tags for the DB option group"
                            },
                            "db_parameter_group_tags": {
                                "default": {},
                                "description": "Additional tags for the  DB parameter group"
                            },
                            "db_subnet_group_description": {
                                "default": null,
                                "description": "Description of the DB subnet group to create"
                            },
                            "db_subnet_group_name": {
                                "default": null,
                                "description": "Name of DB subnet group. DB instance will be created in the VPC associated with the DB subnet group. If unspecified, will be created in the default VPC"
                            },
                            "db_subnet_group_tags": {
                                "default": {},
                                "description": "Additional tags for the DB subnet group"
                            },
                            "db_subnet_group_use_name_prefix": {
                                "default": true,
                                "description": "Determines whether to use `subnet_group_name` as is or create a unique name beginning with the `subnet_group_name` as the prefix"
                            },
                            "delete_automated_backups": {
                                "default": true,
                                "description": "Specifies whether to remove automated backups immediately after the DB instance is deleted"
                            },
                            "deletion_protection": {
                                "default": false,
                                "description": "The database can't be deleted when this value is set to true"
                            },
                            "domain": {
                                "default": null,
                                "description": "The ID of the Directory Service Active Directory domain to create the instance in"
                            },
                            "domain_iam_role_name": {
                                "default": null,
                                "description": "(Required if domain is provided) The name of the IAM role to be used when making API calls to the Directory Service"
                            },
                            "enabled_cloudwatch_logs_exports": {
                                "default": [],
                                "description": "List of log types to enable for exporting to CloudWatch logs. If omitted, no logs will be exported. Valid values (depending on engine): alert, audit, error, general, listener, slowquery, trace, postgresql (PostgreSQL), upgrade (PostgreSQL)"
                            },
                            "engine": {
                                "default": null,
                                "description": "The database engine to use"
                            },
                            "engine_version": {
                                "default": null,
                                "description": "The engine version to use"
                            },
                            "family": {
                                "default": null,
                                "description": "The family of the DB parameter group"
                            },
                            "final_snapshot_identifier_prefix": {
                                "default": "final",
                                "description": "The name which is prefixed to the final snapshot on cluster destroy"
                            },
                            "iam_database_authentication_enabled": {
                                "default": false,
                                "description": "Specifies whether or not the mappings of AWS Identity and Access Management (IAM) accounts to database accounts are enabled"
                            },
                            "identifier": {
                                "description": "The name of the RDS instance"
                            },
                            "instance_class": {
                                "default": null,
                                "description": "The instance type of the RDS instance"
                            },
                            "iops": {
                                "default": 0,
                                "description": "The amount of provisioned IOPS. Setting this implies a storage_type of 'io1'"
                            },
                            "kms_key_id": {
                                "default": null,
                                "description": "The ARN for the KMS encryption key. If creating an encrypted replica, set this to the destination KMS ARN. If storage_encrypted is set to true and kms_key_id is not specified the default KMS key created in your account will be used"
                            },
                            "license_model": {
                                "default": null,
                                "description": "License model information for this DB instance. Optional, but required for some DB engines, i.e. Oracle SE1"
                            },
                            "maintenance_window": {
                                "default": null,
                                "description": "The window to perform maintenance in. Syntax: 'ddd:hh24:mi-ddd:hh24:mi'. Eg: 'Mon:00:00-Mon:03:00'"
                            },
                            "major_engine_version": {
                                "default": null,
                                "description": "Specifies the major version of the engine that this option group should be associated with"
                            },
                            "max_allocated_storage": {
                                "default": 0,
                                "description": "Specifies the value for Storage Autoscaling"
                            },
                            "monitoring_interval": {
                                "default": 0,
                                "description": "The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB instance. To disable collecting Enhanced Monitoring metrics, specify 0. The default is 0. Valid Values: 0, 1, 5, 10, 15, 30, 60"
                            },
                            "monitoring_role_arn": {
                                "default": null,
                                "description": "The ARN for the IAM role that permits RDS to send enhanced monitoring metrics to CloudWatch Logs. Must be specified if monitoring_interval is non-zero"
                            },
                            "monitoring_role_description": {
                                "default": null,
                                "description": "Description of the monitoring IAM role"
                            },
                            "monitoring_role_name": {
                                "default": "rds-monitoring-role",
                                "description": "Name of the IAM role which will be created when create_monitoring_role is enabled"
                            },
                            "multi_az": {
                                "default": false,
                                "description": "Specifies if the RDS instance is multi-AZ"
                            },
                            "option_group_description": {
                                "default": null,
                                "description": "The description of the option group"
                            },
                            "option_group_name": {
                                "default": null,
                                "description": "Name of the option group"
                            },
                            "option_group_timeouts": {
                                "default": {},
                                "description": "Define maximum timeout for deletion of `aws_db_option_group` resource"
                            },
                            "option_group_use_name_prefix": {
                                "default": true,
                                "description": "Determines whether to use `option_group_name` as is or create a unique name beginning with the `option_group_name` as the prefix"
                            },
                            "options": {
                                "default": [],
                                "description": "A list of Options to apply"
                            },
                            "parameter_group_description": {
                                "default": null,
                                "description": "Description of the DB parameter group to create"
                            },
                            "parameter_group_name": {
                                "default": null,
                                "description": "Name of the DB parameter group to associate or create"
                            },
                            "parameter_group_use_name_prefix": {
                                "default": true,
                                "description": "Determines whether to use `parameter_group_name` as is or create a unique name beginning with the `parameter_group_name` as the prefix"
                            },
                            "parameters": {
                                "default": [],
                                "description": "A list of DB parameters (map) to apply"
                            },
                            "password": {
                                "default": null,
                                "description": "Password for the master DB user. Note that this may show up in logs, and it will be stored in the state file"
                            },
                            "performance_insights_enabled": {
                                "default": false,
                                "description": "Specifies whether Performance Insights are enabled"
                            },
                            "performance_insights_kms_key_id": {
                                "default": null,
                                "description": "The ARN for the KMS key to encrypt Performance Insights data"
                            },
                            "performance_insights_retention_period": {
                                "default": 7,
                                "description": "The amount of time in days to retain Performance Insights data. Either 7 (7 days) or 731 (2 years)"
                            },
                            "port": {
                                "default": null,
                                "description": "The port on which the DB accepts connections"
                            },
                            "publicly_accessible": {
                                "default": false,
                                "description": "Bool to control if instance is publicly accessible"
                            },
                            "putin_khuylo": {
                                "default": true,
                                "description": "Do you agree that Putin doesn't respect Ukrainian sovereignty and territorial integrity? More info: https://en.wikipedia.org/wiki/Putin_khuylo!"
                            },
                            "random_password_length": {
                                "default": 16,
                                "description": "Length of random password to create"
                            },
                            "replica_mode": {
                                "default": null,
                                "description": "Specifies whether the replica is in either mounted or open-read-only mode. This attribute is only supported by Oracle instances. Oracle replicas operate in open-read-only mode unless otherwise specified"
                            },
                            "replicate_source_db": {
                                "default": null,
                                "description": "Specifies that this resource is a Replicate database, and to use this value as the source database. This correlates to the identifier of another Amazon RDS Database to replicate"
                            },
                            "restore_to_point_in_time": {
                                "default": null,
                                "description": "Restore to a point in time (MySQL is NOT supported)"
                            },
                            "s3_import": {
                                "default": null,
                                "description": "Restore from a Percona Xtrabackup in S3 (only MySQL is supported)"
                            },
                            "skip_final_snapshot": {
                                "default": false,
                                "description": "Determines whether a final DB snapshot is created before the DB instance is deleted. If true is specified, no DBSnapshot is created. If false is specified, a DB snapshot is created before the DB instance is deleted"
                            },
                            "snapshot_identifier": {
                                "default": null,
                                "description": "Specifies whether or not to create this database from a snapshot. This correlates to the snapshot ID you'd find in the RDS console, e.g: rds:production-2015-06-26-06-05"
                            },
                            "storage_encrypted": {
                                "default": true,
                                "description": "Specifies whether the DB instance is encrypted"
                            },
                            "storage_type": {
                                "default": null,
                                "description": "One of 'standard' (magnetic), 'gp2' (general purpose SSD), or 'io1' (provisioned IOPS SSD). The default is 'io1' if iops is specified, 'gp2' if not"
                            },
                            "subnet_ids": {
                                "default": [],
                                "description": "A list of VPC subnet IDs"
                            },
                            "tags": {
                                "default": {},
                                "description": "A mapping of tags to assign to all resources"
                            },
                            "timeouts": {
                                "default": {},
                                "description": "Updated Terraform resource management timeouts. Applies to `aws_db_instance` in particular to permit resource management times"
                            },
                            "timezone": {
                                "default": null,
                                "description": "Time zone of the DB instance. timezone is currently only supported by Microsoft SQL Server. The timezone can only be set on creation. See MSSQL User Guide for more information"
                            },
                            "username": {
                                "default": null,
                                "description": "Username for the master DB user"
                            },
                            "vpc_security_group_ids": {
                                "default": [],
                                "description": "List of VPC security groups to associate"
                            }
                        }
                    }
                },
                "security_group": {
                    "source": "terraform-aws-modules/security-group/aws",
                    "expressions": {
                        "description": {
                            "constant_value": "Complete PostgreSQL example security group"
                        },
                        "ingress_with_cidr_blocks": {
                            "references": [
                                "module.vpc.vpc_cidr_block",
                                "module.vpc"
                            ]
                        },
                        "name": {
                            "references": [
                                "local.name"
                            ]
                        },
                        "tags": {
                            "references": [
                                "local.tags"
                            ]
                        },
                        "vpc_id": {
                            "references": [
                                "module.vpc.vpc_id",
                                "module.vpc"
                            ]
                        }
                    },
                    "module": {
                        "outputs": {
                            "security_group_description": {
                                "expression": {
                                    "references": [
                                        "aws_security_group.this[0].description",
                                        "aws_security_group.this[0]",
                                        "aws_security_group.this",
                                        "aws_security_group.this_name_prefix[0].description",
                                        "aws_security_group.this_name_prefix[0]",
                                        "aws_security_group.this_name_prefix"
                                    ]
                                },
                                "description": "The description of the security group"
                            },
                            "security_group_id": {
                                "expression": {
                                    "references": [
                                        "aws_security_group.this[0].id",
                                        "aws_security_group.this[0]",
                                        "aws_security_group.this",
                                        "aws_security_group.this_name_prefix[0].id",
                                        "aws_security_group.this_name_prefix[0]",
                                        "aws_security_group.this_name_prefix"
                                    ]
                                },
                                "description": "The ID of the security group"
                            },
                            "security_group_name": {
                                "expression": {
                                    "references": [
                                        "aws_security_group.this[0].name",
                                        "aws_security_group.this[0]",
                                        "aws_security_group.this",
                                        "aws_security_group.this_name_prefix[0].name",
                                        "aws_security_group.this_name_prefix[0]",
                                        "aws_security_group.this_name_prefix"
                                    ]
                                },
                                "description": "The name of the security group"
                            },
                            "security_group_owner_id": {
                                "expression": {
                                    "references": [
                                        "aws_security_group.this[0].owner_id",
                                        "aws_security_group.this[0]",
                                        "aws_security_group.this",
                                        "aws_security_group.this_name_prefix[0].owner_id",
                                        "aws_security_group.this_name_prefix[0]",
                                        "aws_security_group.this_name_prefix"
                                    ]
                                },
                                "description": "The owner ID"
                            },
                            "security_group_vpc_id": {
                                "expression": {
                                    "references": [
                                        "aws_security_group.this[0].vpc_id",
                                        "aws_security_group.this[0]",
                                        "aws_security_group.this",
                                        "aws_security_group.this_name_prefix[0].vpc_id",
                                        "aws_security_group.this_name_prefix[0]",
                                        "aws_security_group.this_name_prefix"
                                    ]
                                },
                                "description": "The VPC ID"
                            }
                        },
                        "resources": [
                            {
                                "address": "aws_security_group.this",
                                "mode": "managed",
                                "type": "aws_security_group",
                                "name": "this",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "description": {
                                        "references": [
                                            "var.description"
                                        ]
                                    },
                                    "name": {
                                        "references": [
                                            "var.name"
                                        ]
                                    },
                                    "revoke_rules_on_delete": {
                                        "references": [
                                            "var.revoke_rules_on_delete"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.name",
                                            "var.tags"
                                        ]
                                    },
                                    "timeouts": {
                                        "create": {
                                            "references": [
                                                "var.create_timeout"
                                            ]
                                        },
                                        "delete": {
                                            "references": [
                                                "var.delete_timeout"
                                            ]
                                        }
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "var.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 1,
                                "count_expression": {
                                    "references": [
                                        "local.create",
                                        "var.create_sg",
                                        "var.use_name_prefix"
                                    ]
                                }
                            },
                            {
                                "address": "aws_security_group.this_name_prefix",
                                "mode": "managed",
                                "type": "aws_security_group",
                                "name": "this_name_prefix",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "description": {
                                        "references": [
                                            "var.description"
                                        ]
                                    },
                                    "name_prefix": {
                                        "references": [
                                            "var.name"
                                        ]
                                    },
                                    "revoke_rules_on_delete": {
                                        "references": [
                                            "var.revoke_rules_on_delete"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.name",
                                            "var.tags"
                                        ]
                                    },
                                    "timeouts": {
                                        "create": {
                                            "references": [
                                                "var.create_timeout"
                                            ]
                                        },
                                        "delete": {
                                            "references": [
                                                "var.delete_timeout"
                                            ]
                                        }
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "var.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 1,
                                "count_expression": {
                                    "references": [
                                        "local.create",
                                        "var.create_sg",
                                        "var.use_name_prefix"
                                    ]
                                }
                            },
                            {
                                "address": "aws_security_group_rule.computed_egress_rules",
                                "mode": "managed",
                                "type": "aws_security_group_rule",
                                "name": "computed_egress_rules",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "cidr_blocks": {
                                        "references": [
                                            "var.egress_cidr_blocks"
                                        ]
                                    },
                                    "description": {
                                        "references": [
                                            "var.rules",
                                            "var.computed_egress_rules",
                                            "count.index"
                                        ]
                                    },
                                    "from_port": {
                                        "references": [
                                            "var.rules",
                                            "var.computed_egress_rules",
                                            "count.index"
                                        ]
                                    },
                                    "ipv6_cidr_blocks": {
                                        "references": [
                                            "var.egress_ipv6_cidr_blocks"
                                        ]
                                    },
                                    "prefix_list_ids": {
                                        "references": [
                                            "var.egress_prefix_list_ids"
                                        ]
                                    },
                                    "protocol": {
                                        "references": [
                                            "var.rules",
                                            "var.computed_egress_rules",
                                            "count.index"
                                        ]
                                    },
                                    "security_group_id": {
                                        "references": [
                                            "local.this_sg_id"
                                        ]
                                    },
                                    "to_port": {
                                        "references": [
                                            "var.rules",
                                            "var.computed_egress_rules",
                                            "count.index"
                                        ]
                                    },
                                    "type": {
                                        "constant_value": "egress"
                                    }
                                },
                                "schema_version": 2,
                                "count_expression": {
                                    "references": [
                                        "local.create",
                                        "var.number_of_computed_egress_rules"
                                    ]
                                }
                            },
                            {
                                "address": "aws_security_group_rule.computed_egress_with_cidr_blocks",
                                "mode": "managed",
                                "type": "aws_security_group_rule",
                                "name": "computed_egress_with_cidr_blocks",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "cidr_blocks": {
                                        "references": [
                                            "var.computed_egress_with_cidr_blocks",
                                            "count.index",
                                            "var.egress_cidr_blocks"
                                        ]
                                    },
                                    "description": {
                                        "references": [
                                            "var.computed_egress_with_cidr_blocks",
                                            "count.index"
                                        ]
                                    },
                                    "from_port": {
                                        "references": [
                                            "var.computed_egress_with_cidr_blocks",
                                            "count.index",
                                            "var.rules",
                                            "var.computed_egress_with_cidr_blocks",
                                            "count.index"
                                        ]
                                    },
                                    "prefix_list_ids": {
                                        "references": [
                                            "var.egress_prefix_list_ids"
                                        ]
                                    },
                                    "protocol": {
                                        "references": [
                                            "var.computed_egress_with_cidr_blocks",
                                            "count.index",
                                            "var.rules",
                                            "var.computed_egress_with_cidr_blocks",
                                            "count.index"
                                        ]
                                    },
                                    "security_group_id": {
                                        "references": [
                                            "local.this_sg_id"
                                        ]
                                    },
                                    "to_port": {
                                        "references": [
                                            "var.computed_egress_with_cidr_blocks",
                                            "count.index",
                                            "var.rules",
                                            "var.computed_egress_with_cidr_blocks",
                                            "count.index"
                                        ]
                                    },
                                    "type": {
                                        "constant_value": "egress"
                                    }
                                },
                                "schema_version": 2,
                                "count_expression": {
                                    "references": [
                                        "local.create",
                                        "var.number_of_computed_egress_with_cidr_blocks"
                                    ]
                                }
                            },
                            {
                                "address": "aws_security_group_rule.computed_egress_with_ipv6_cidr_blocks",
                                "mode": "managed",
                                "type": "aws_security_group_rule",
                                "name": "computed_egress_with_ipv6_cidr_blocks",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "description": {
                                        "references": [
                                            "var.computed_egress_with_ipv6_cidr_blocks",
                                            "count.index"
                                        ]
                                    },
                                    "from_port": {
                                        "references": [
                                            "var.computed_egress_with_ipv6_cidr_blocks",
                                            "count.index",
                                            "var.rules",
                                            "var.computed_egress_with_ipv6_cidr_blocks",
                                            "count.index"
                                        ]
                                    },
                                    "ipv6_cidr_blocks": {
                                        "references": [
                                            "var.computed_egress_with_ipv6_cidr_blocks",
                                            "count.index",
                                            "var.egress_ipv6_cidr_blocks"
                                        ]
                                    },
                                    "prefix_list_ids": {
                                        "references": [
                                            "var.egress_prefix_list_ids"
                                        ]
                                    },
                                    "protocol": {
                                        "references": [
                                            "var.computed_egress_with_ipv6_cidr_blocks",
                                            "count.index",
                                            "var.rules",
                                            "var.computed_egress_with_ipv6_cidr_blocks",
                                            "count.index"
                                        ]
                                    },
                                    "security_group_id": {
                                        "references": [
                                            "local.this_sg_id"
                                        ]
                                    },
                                    "to_port": {
                                        "references": [
                                            "var.computed_egress_with_ipv6_cidr_blocks",
                                            "count.index",
                                            "var.rules",
                                            "var.computed_egress_with_ipv6_cidr_blocks",
                                            "count.index"
                                        ]
                                    },
                                    "type": {
                                        "constant_value": "egress"
                                    }
                                },
                                "schema_version": 2,
                                "count_expression": {
                                    "references": [
                                        "local.create",
                                        "var.number_of_computed_egress_with_ipv6_cidr_blocks"
                                    ]
                                }
                            },
                            {
                                "address": "aws_security_group_rule.computed_egress_with_self",
                                "mode": "managed",
                                "type": "aws_security_group_rule",
                                "name": "computed_egress_with_self",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "description": {
                                        "references": [
                                            "var.computed_egress_with_self",
                                            "count.index"
                                        ]
                                    },
                                    "from_port": {
                                        "references": [
                                            "var.computed_egress_with_self",
                                            "count.index",
                                            "var.rules",
                                            "var.computed_egress_with_self",
                                            "count.index"
                                        ]
                                    },
                                    "prefix_list_ids": {
                                        "references": [
                                            "var.egress_prefix_list_ids"
                                        ]
                                    },
                                    "protocol": {
                                        "references": [
                                            "var.computed_egress_with_self",
                                            "count.index",
                                            "var.rules",
                                            "var.computed_egress_with_self",
                                            "count.index"
                                        ]
                                    },
                                    "security_group_id": {
                                        "references": [
                                            "local.this_sg_id"
                                        ]
                                    },
                                    "self": {
                                        "references": [
                                            "var.computed_egress_with_self",
                                            "count.index"
                                        ]
                                    },
                                    "to_port": {
                                        "references": [
                                            "var.computed_egress_with_self",
                                            "count.index",
                                            "var.rules",
                                            "var.computed_egress_with_self",
                                            "count.index"
                                        ]
                                    },
                                    "type": {
                                        "constant_value": "egress"
                                    }
                                },
                                "schema_version": 2,
                                "count_expression": {
                                    "references": [
                                        "local.create",
                                        "var.number_of_computed_egress_with_self"
                                    ]
                                }
                            },
                            {
                                "address": "aws_security_group_rule.computed_egress_with_source_security_group_id",
                                "mode": "managed",
                                "type": "aws_security_group_rule",
                                "name": "computed_egress_with_source_security_group_id",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "description": {
                                        "references": [
                                            "var.computed_egress_with_source_security_group_id",
                                            "count.index"
                                        ]
                                    },
                                    "from_port": {
                                        "references": [
                                            "var.computed_egress_with_source_security_group_id",
                                            "count.index",
                                            "var.rules",
                                            "var.computed_egress_with_source_security_group_id",
                                            "count.index"
                                        ]
                                    },
                                    "prefix_list_ids": {
                                        "references": [
                                            "var.egress_prefix_list_ids"
                                        ]
                                    },
                                    "protocol": {
                                        "references": [
                                            "var.computed_egress_with_source_security_group_id",
                                            "count.index",
                                            "var.rules",
                                            "var.computed_egress_with_source_security_group_id",
                                            "count.index"
                                        ]
                                    },
                                    "security_group_id": {
                                        "references": [
                                            "local.this_sg_id"
                                        ]
                                    },
                                    "source_security_group_id": {
                                        "references": [
                                            "var.computed_egress_with_source_security_group_id",
                                            "count.index"
                                        ]
                                    },
                                    "to_port": {
                                        "references": [
                                            "var.computed_egress_with_source_security_group_id",
                                            "count.index",
                                            "var.rules",
                                            "var.computed_egress_with_source_security_group_id",
                                            "count.index"
                                        ]
                                    },
                                    "type": {
                                        "constant_value": "egress"
                                    }
                                },
                                "schema_version": 2,
                                "count_expression": {
                                    "references": [
                                        "local.create",
                                        "var.number_of_computed_egress_with_source_security_group_id"
                                    ]
                                }
                            },
                            {
                                "address": "aws_security_group_rule.computed_ingress_rules",
                                "mode": "managed",
                                "type": "aws_security_group_rule",
                                "name": "computed_ingress_rules",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "cidr_blocks": {
                                        "references": [
                                            "var.ingress_cidr_blocks"
                                        ]
                                    },
                                    "description": {
                                        "references": [
                                            "var.rules",
                                            "var.computed_ingress_rules",
                                            "count.index"
                                        ]
                                    },
                                    "from_port": {
                                        "references": [
                                            "var.rules",
                                            "var.computed_ingress_rules",
                                            "count.index"
                                        ]
                                    },
                                    "ipv6_cidr_blocks": {
                                        "references": [
                                            "var.ingress_ipv6_cidr_blocks"
                                        ]
                                    },
                                    "prefix_list_ids": {
                                        "references": [
                                            "var.ingress_prefix_list_ids"
                                        ]
                                    },
                                    "protocol": {
                                        "references": [
                                            "var.rules",
                                            "var.computed_ingress_rules",
                                            "count.index"
                                        ]
                                    },
                                    "security_group_id": {
                                        "references": [
                                            "local.this_sg_id"
                                        ]
                                    },
                                    "to_port": {
                                        "references": [
                                            "var.rules",
                                            "var.computed_ingress_rules",
                                            "count.index"
                                        ]
                                    },
                                    "type": {
                                        "constant_value": "ingress"
                                    }
                                },
                                "schema_version": 2,
                                "count_expression": {
                                    "references": [
                                        "local.create",
                                        "var.number_of_computed_ingress_rules"
                                    ]
                                }
                            },
                            {
                                "address": "aws_security_group_rule.computed_ingress_with_cidr_blocks",
                                "mode": "managed",
                                "type": "aws_security_group_rule",
                                "name": "computed_ingress_with_cidr_blocks",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "cidr_blocks": {
                                        "references": [
                                            "var.computed_ingress_with_cidr_blocks",
                                            "count.index",
                                            "var.ingress_cidr_blocks"
                                        ]
                                    },
                                    "description": {
                                        "references": [
                                            "var.computed_ingress_with_cidr_blocks",
                                            "count.index"
                                        ]
                                    },
                                    "from_port": {
                                        "references": [
                                            "var.computed_ingress_with_cidr_blocks",
                                            "count.index",
                                            "var.rules",
                                            "var.computed_ingress_with_cidr_blocks",
                                            "count.index"
                                        ]
                                    },
                                    "prefix_list_ids": {
                                        "references": [
                                            "var.ingress_prefix_list_ids"
                                        ]
                                    },
                                    "protocol": {
                                        "references": [
                                            "var.computed_ingress_with_cidr_blocks",
                                            "count.index",
                                            "var.rules",
                                            "var.computed_ingress_with_cidr_blocks",
                                            "count.index"
                                        ]
                                    },
                                    "security_group_id": {
                                        "references": [
                                            "local.this_sg_id"
                                        ]
                                    },
                                    "to_port": {
                                        "references": [
                                            "var.computed_ingress_with_cidr_blocks",
                                            "count.index",
                                            "var.rules",
                                            "var.computed_ingress_with_cidr_blocks",
                                            "count.index"
                                        ]
                                    },
                                    "type": {
                                        "constant_value": "ingress"
                                    }
                                },
                                "schema_version": 2,
                                "count_expression": {
                                    "references": [
                                        "local.create",
                                        "var.number_of_computed_ingress_with_cidr_blocks"
                                    ]
                                }
                            },
                            {
                                "address": "aws_security_group_rule.computed_ingress_with_ipv6_cidr_blocks",
                                "mode": "managed",
                                "type": "aws_security_group_rule",
                                "name": "computed_ingress_with_ipv6_cidr_blocks",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "description": {
                                        "references": [
                                            "var.computed_ingress_with_ipv6_cidr_blocks",
                                            "count.index"
                                        ]
                                    },
                                    "from_port": {
                                        "references": [
                                            "var.computed_ingress_with_ipv6_cidr_blocks",
                                            "count.index",
                                            "var.rules",
                                            "var.computed_ingress_with_ipv6_cidr_blocks",
                                            "count.index"
                                        ]
                                    },
                                    "ipv6_cidr_blocks": {
                                        "references": [
                                            "var.computed_ingress_with_ipv6_cidr_blocks",
                                            "count.index",
                                            "var.ingress_ipv6_cidr_blocks"
                                        ]
                                    },
                                    "prefix_list_ids": {
                                        "references": [
                                            "var.ingress_prefix_list_ids"
                                        ]
                                    },
                                    "protocol": {
                                        "references": [
                                            "var.computed_ingress_with_ipv6_cidr_blocks",
                                            "count.index",
                                            "var.rules",
                                            "var.computed_ingress_with_ipv6_cidr_blocks",
                                            "count.index"
                                        ]
                                    },
                                    "security_group_id": {
                                        "references": [
                                            "local.this_sg_id"
                                        ]
                                    },
                                    "to_port": {
                                        "references": [
                                            "var.computed_ingress_with_ipv6_cidr_blocks",
                                            "count.index",
                                            "var.rules",
                                            "var.computed_ingress_with_ipv6_cidr_blocks",
                                            "count.index"
                                        ]
                                    },
                                    "type": {
                                        "constant_value": "ingress"
                                    }
                                },
                                "schema_version": 2,
                                "count_expression": {
                                    "references": [
                                        "local.create",
                                        "var.number_of_computed_ingress_with_ipv6_cidr_blocks"
                                    ]
                                }
                            },
                            {
                                "address": "aws_security_group_rule.computed_ingress_with_self",
                                "mode": "managed",
                                "type": "aws_security_group_rule",
                                "name": "computed_ingress_with_self",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "description": {
                                        "references": [
                                            "var.computed_ingress_with_self",
                                            "count.index"
                                        ]
                                    },
                                    "from_port": {
                                        "references": [
                                            "var.computed_ingress_with_self",
                                            "count.index",
                                            "var.rules",
                                            "var.computed_ingress_with_self",
                                            "count.index"
                                        ]
                                    },
                                    "prefix_list_ids": {
                                        "references": [
                                            "var.ingress_prefix_list_ids"
                                        ]
                                    },
                                    "protocol": {
                                        "references": [
                                            "var.computed_ingress_with_self",
                                            "count.index",
                                            "var.rules",
                                            "var.computed_ingress_with_self",
                                            "count.index"
                                        ]
                                    },
                                    "security_group_id": {
                                        "references": [
                                            "local.this_sg_id"
                                        ]
                                    },
                                    "self": {
                                        "references": [
                                            "var.computed_ingress_with_self",
                                            "count.index"
                                        ]
                                    },
                                    "to_port": {
                                        "references": [
                                            "var.computed_ingress_with_self",
                                            "count.index",
                                            "var.rules",
                                            "var.computed_ingress_with_self",
                                            "count.index"
                                        ]
                                    },
                                    "type": {
                                        "constant_value": "ingress"
                                    }
                                },
                                "schema_version": 2,
                                "count_expression": {
                                    "references": [
                                        "local.create",
                                        "var.number_of_computed_ingress_with_self"
                                    ]
                                }
                            },
                            {
                                "address": "aws_security_group_rule.computed_ingress_with_source_security_group_id",
                                "mode": "managed",
                                "type": "aws_security_group_rule",
                                "name": "computed_ingress_with_source_security_group_id",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "description": {
                                        "references": [
                                            "var.computed_ingress_with_source_security_group_id",
                                            "count.index"
                                        ]
                                    },
                                    "from_port": {
                                        "references": [
                                            "var.computed_ingress_with_source_security_group_id",
                                            "count.index",
                                            "var.rules",
                                            "var.computed_ingress_with_source_security_group_id",
                                            "count.index"
                                        ]
                                    },
                                    "prefix_list_ids": {
                                        "references": [
                                            "var.ingress_prefix_list_ids"
                                        ]
                                    },
                                    "protocol": {
                                        "references": [
                                            "var.computed_ingress_with_source_security_group_id",
                                            "count.index",
                                            "var.rules",
                                            "var.computed_ingress_with_source_security_group_id",
                                            "count.index"
                                        ]
                                    },
                                    "security_group_id": {
                                        "references": [
                                            "local.this_sg_id"
                                        ]
                                    },
                                    "source_security_group_id": {
                                        "references": [
                                            "var.computed_ingress_with_source_security_group_id",
                                            "count.index"
                                        ]
                                    },
                                    "to_port": {
                                        "references": [
                                            "var.computed_ingress_with_source_security_group_id",
                                            "count.index",
                                            "var.rules",
                                            "var.computed_ingress_with_source_security_group_id",
                                            "count.index"
                                        ]
                                    },
                                    "type": {
                                        "constant_value": "ingress"
                                    }
                                },
                                "schema_version": 2,
                                "count_expression": {
                                    "references": [
                                        "local.create",
                                        "var.number_of_computed_ingress_with_source_security_group_id"
                                    ]
                                }
                            },
                            {
                                "address": "aws_security_group_rule.egress_rules",
                                "mode": "managed",
                                "type": "aws_security_group_rule",
                                "name": "egress_rules",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "cidr_blocks": {
                                        "references": [
                                            "var.egress_cidr_blocks"
                                        ]
                                    },
                                    "description": {
                                        "references": [
                                            "var.rules",
                                            "var.egress_rules",
                                            "count.index"
                                        ]
                                    },
                                    "from_port": {
                                        "references": [
                                            "var.rules",
                                            "var.egress_rules",
                                            "count.index"
                                        ]
                                    },
                                    "ipv6_cidr_blocks": {
                                        "references": [
                                            "var.egress_ipv6_cidr_blocks"
                                        ]
                                    },
                                    "prefix_list_ids": {
                                        "references": [
                                            "var.egress_prefix_list_ids"
                                        ]
                                    },
                                    "protocol": {
                                        "references": [
                                            "var.rules",
                                            "var.egress_rules",
                                            "count.index"
                                        ]
                                    },
                                    "security_group_id": {
                                        "references": [
                                            "local.this_sg_id"
                                        ]
                                    },
                                    "to_port": {
                                        "references": [
                                            "var.rules",
                                            "var.egress_rules",
                                            "count.index"
                                        ]
                                    },
                                    "type": {
                                        "constant_value": "egress"
                                    }
                                },
                                "schema_version": 2,
                                "count_expression": {
                                    "references": [
                                        "local.create",
                                        "var.egress_rules"
                                    ]
                                }
                            },
                            {
                                "address": "aws_security_group_rule.egress_with_cidr_blocks",
                                "mode": "managed",
                                "type": "aws_security_group_rule",
                                "name": "egress_with_cidr_blocks",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "cidr_blocks": {
                                        "references": [
                                            "var.egress_with_cidr_blocks",
                                            "count.index",
                                            "var.egress_cidr_blocks"
                                        ]
                                    },
                                    "description": {
                                        "references": [
                                            "var.egress_with_cidr_blocks",
                                            "count.index"
                                        ]
                                    },
                                    "from_port": {
                                        "references": [
                                            "var.egress_with_cidr_blocks",
                                            "count.index",
                                            "var.rules",
                                            "var.egress_with_cidr_blocks",
                                            "count.index"
                                        ]
                                    },
                                    "prefix_list_ids": {
                                        "references": [
                                            "var.egress_prefix_list_ids"
                                        ]
                                    },
                                    "protocol": {
                                        "references": [
                                            "var.egress_with_cidr_blocks",
                                            "count.index",
                                            "var.rules",
                                            "var.egress_with_cidr_blocks",
                                            "count.index"
                                        ]
                                    },
                                    "security_group_id": {
                                        "references": [
                                            "local.this_sg_id"
                                        ]
                                    },
                                    "to_port": {
                                        "references": [
                                            "var.egress_with_cidr_blocks",
                                            "count.index",
                                            "var.rules",
                                            "var.egress_with_cidr_blocks",
                                            "count.index"
                                        ]
                                    },
                                    "type": {
                                        "constant_value": "egress"
                                    }
                                },
                                "schema_version": 2,
                                "count_expression": {
                                    "references": [
                                        "local.create",
                                        "var.egress_with_cidr_blocks"
                                    ]
                                }
                            },
                            {
                                "address": "aws_security_group_rule.egress_with_ipv6_cidr_blocks",
                                "mode": "managed",
                                "type": "aws_security_group_rule",
                                "name": "egress_with_ipv6_cidr_blocks",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "description": {
                                        "references": [
                                            "var.egress_with_ipv6_cidr_blocks",
                                            "count.index"
                                        ]
                                    },
                                    "from_port": {
                                        "references": [
                                            "var.egress_with_ipv6_cidr_blocks",
                                            "count.index",
                                            "var.rules",
                                            "var.egress_with_ipv6_cidr_blocks",
                                            "count.index"
                                        ]
                                    },
                                    "ipv6_cidr_blocks": {
                                        "references": [
                                            "var.egress_with_ipv6_cidr_blocks",
                                            "count.index",
                                            "var.egress_ipv6_cidr_blocks"
                                        ]
                                    },
                                    "prefix_list_ids": {
                                        "references": [
                                            "var.egress_prefix_list_ids"
                                        ]
                                    },
                                    "protocol": {
                                        "references": [
                                            "var.egress_with_ipv6_cidr_blocks",
                                            "count.index",
                                            "var.rules",
                                            "var.egress_with_ipv6_cidr_blocks",
                                            "count.index"
                                        ]
                                    },
                                    "security_group_id": {
                                        "references": [
                                            "local.this_sg_id"
                                        ]
                                    },
                                    "to_port": {
                                        "references": [
                                            "var.egress_with_ipv6_cidr_blocks",
                                            "count.index",
                                            "var.rules",
                                            "var.egress_with_ipv6_cidr_blocks",
                                            "count.index"
                                        ]
                                    },
                                    "type": {
                                        "constant_value": "egress"
                                    }
                                },
                                "schema_version": 2,
                                "count_expression": {
                                    "references": [
                                        "local.create",
                                        "var.egress_with_ipv6_cidr_blocks"
                                    ]
                                }
                            },
                            {
                                "address": "aws_security_group_rule.egress_with_self",
                                "mode": "managed",
                                "type": "aws_security_group_rule",
                                "name": "egress_with_self",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "description": {
                                        "references": [
                                            "var.egress_with_self",
                                            "count.index"
                                        ]
                                    },
                                    "from_port": {
                                        "references": [
                                            "var.egress_with_self",
                                            "count.index",
                                            "var.rules",
                                            "var.egress_with_self",
                                            "count.index"
                                        ]
                                    },
                                    "prefix_list_ids": {
                                        "references": [
                                            "var.egress_prefix_list_ids"
                                        ]
                                    },
                                    "protocol": {
                                        "references": [
                                            "var.egress_with_self",
                                            "count.index",
                                            "var.rules",
                                            "var.egress_with_self",
                                            "count.index"
                                        ]
                                    },
                                    "security_group_id": {
                                        "references": [
                                            "local.this_sg_id"
                                        ]
                                    },
                                    "self": {
                                        "references": [
                                            "var.egress_with_self",
                                            "count.index"
                                        ]
                                    },
                                    "to_port": {
                                        "references": [
                                            "var.egress_with_self",
                                            "count.index",
                                            "var.rules",
                                            "var.egress_with_self",
                                            "count.index"
                                        ]
                                    },
                                    "type": {
                                        "constant_value": "egress"
                                    }
                                },
                                "schema_version": 2,
                                "count_expression": {
                                    "references": [
                                        "local.create",
                                        "var.egress_with_self"
                                    ]
                                }
                            },
                            {
                                "address": "aws_security_group_rule.egress_with_source_security_group_id",
                                "mode": "managed",
                                "type": "aws_security_group_rule",
                                "name": "egress_with_source_security_group_id",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "description": {
                                        "references": [
                                            "var.egress_with_source_security_group_id",
                                            "count.index"
                                        ]
                                    },
                                    "from_port": {
                                        "references": [
                                            "var.egress_with_source_security_group_id",
                                            "count.index",
                                            "var.rules",
                                            "var.egress_with_source_security_group_id",
                                            "count.index"
                                        ]
                                    },
                                    "prefix_list_ids": {
                                        "references": [
                                            "var.egress_prefix_list_ids"
                                        ]
                                    },
                                    "protocol": {
                                        "references": [
                                            "var.egress_with_source_security_group_id",
                                            "count.index",
                                            "var.rules",
                                            "var.egress_with_source_security_group_id",
                                            "count.index"
                                        ]
                                    },
                                    "security_group_id": {
                                        "references": [
                                            "local.this_sg_id"
                                        ]
                                    },
                                    "source_security_group_id": {
                                        "references": [
                                            "var.egress_with_source_security_group_id",
                                            "count.index"
                                        ]
                                    },
                                    "to_port": {
                                        "references": [
                                            "var.egress_with_source_security_group_id",
                                            "count.index",
                                            "var.rules",
                                            "var.egress_with_source_security_group_id",
                                            "count.index"
                                        ]
                                    },
                                    "type": {
                                        "constant_value": "egress"
                                    }
                                },
                                "schema_version": 2,
                                "count_expression": {
                                    "references": [
                                        "local.create",
                                        "var.egress_with_source_security_group_id"
                                    ]
                                }
                            },
                            {
                                "address": "aws_security_group_rule.ingress_rules",
                                "mode": "managed",
                                "type": "aws_security_group_rule",
                                "name": "ingress_rules",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "cidr_blocks": {
                                        "references": [
                                            "var.ingress_cidr_blocks"
                                        ]
                                    },
                                    "description": {
                                        "references": [
                                            "var.rules",
                                            "var.ingress_rules",
                                            "count.index"
                                        ]
                                    },
                                    "from_port": {
                                        "references": [
                                            "var.rules",
                                            "var.ingress_rules",
                                            "count.index"
                                        ]
                                    },
                                    "ipv6_cidr_blocks": {
                                        "references": [
                                            "var.ingress_ipv6_cidr_blocks"
                                        ]
                                    },
                                    "prefix_list_ids": {
                                        "references": [
                                            "var.ingress_prefix_list_ids"
                                        ]
                                    },
                                    "protocol": {
                                        "references": [
                                            "var.rules",
                                            "var.ingress_rules",
                                            "count.index"
                                        ]
                                    },
                                    "security_group_id": {
                                        "references": [
                                            "local.this_sg_id"
                                        ]
                                    },
                                    "to_port": {
                                        "references": [
                                            "var.rules",
                                            "var.ingress_rules",
                                            "count.index"
                                        ]
                                    },
                                    "type": {
                                        "constant_value": "ingress"
                                    }
                                },
                                "schema_version": 2,
                                "count_expression": {
                                    "references": [
                                        "local.create",
                                        "var.ingress_rules"
                                    ]
                                }
                            },
                            {
                                "address": "aws_security_group_rule.ingress_with_cidr_blocks",
                                "mode": "managed",
                                "type": "aws_security_group_rule",
                                "name": "ingress_with_cidr_blocks",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "cidr_blocks": {
                                        "references": [
                                            "var.ingress_with_cidr_blocks",
                                            "count.index",
                                            "var.ingress_cidr_blocks"
                                        ]
                                    },
                                    "description": {
                                        "references": [
                                            "var.ingress_with_cidr_blocks",
                                            "count.index"
                                        ]
                                    },
                                    "from_port": {
                                        "references": [
                                            "var.ingress_with_cidr_blocks",
                                            "count.index",
                                            "var.rules",
                                            "var.ingress_with_cidr_blocks",
                                            "count.index"
                                        ]
                                    },
                                    "prefix_list_ids": {
                                        "references": [
                                            "var.ingress_prefix_list_ids"
                                        ]
                                    },
                                    "protocol": {
                                        "references": [
                                            "var.ingress_with_cidr_blocks",
                                            "count.index",
                                            "var.rules",
                                            "var.ingress_with_cidr_blocks",
                                            "count.index"
                                        ]
                                    },
                                    "security_group_id": {
                                        "references": [
                                            "local.this_sg_id"
                                        ]
                                    },
                                    "to_port": {
                                        "references": [
                                            "var.ingress_with_cidr_blocks",
                                            "count.index",
                                            "var.rules",
                                            "var.ingress_with_cidr_blocks",
                                            "count.index"
                                        ]
                                    },
                                    "type": {
                                        "constant_value": "ingress"
                                    }
                                },
                                "schema_version": 2,
                                "count_expression": {
                                    "references": [
                                        "local.create",
                                        "var.ingress_with_cidr_blocks"
                                    ]
                                }
                            },
                            {
                                "address": "aws_security_group_rule.ingress_with_ipv6_cidr_blocks",
                                "mode": "managed",
                                "type": "aws_security_group_rule",
                                "name": "ingress_with_ipv6_cidr_blocks",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "description": {
                                        "references": [
                                            "var.ingress_with_ipv6_cidr_blocks",
                                            "count.index"
                                        ]
                                    },
                                    "from_port": {
                                        "references": [
                                            "var.ingress_with_ipv6_cidr_blocks",
                                            "count.index",
                                            "var.rules",
                                            "var.ingress_with_ipv6_cidr_blocks",
                                            "count.index"
                                        ]
                                    },
                                    "ipv6_cidr_blocks": {
                                        "references": [
                                            "var.ingress_with_ipv6_cidr_blocks",
                                            "count.index",
                                            "var.ingress_ipv6_cidr_blocks"
                                        ]
                                    },
                                    "prefix_list_ids": {
                                        "references": [
                                            "var.ingress_prefix_list_ids"
                                        ]
                                    },
                                    "protocol": {
                                        "references": [
                                            "var.ingress_with_ipv6_cidr_blocks",
                                            "count.index",
                                            "var.rules",
                                            "var.ingress_with_ipv6_cidr_blocks",
                                            "count.index"
                                        ]
                                    },
                                    "security_group_id": {
                                        "references": [
                                            "local.this_sg_id"
                                        ]
                                    },
                                    "to_port": {
                                        "references": [
                                            "var.ingress_with_ipv6_cidr_blocks",
                                            "count.index",
                                            "var.rules",
                                            "var.ingress_with_ipv6_cidr_blocks",
                                            "count.index"
                                        ]
                                    },
                                    "type": {
                                        "constant_value": "ingress"
                                    }
                                },
                                "schema_version": 2,
                                "count_expression": {
                                    "references": [
                                        "local.create",
                                        "var.ingress_with_ipv6_cidr_blocks"
                                    ]
                                }
                            },
                            {
                                "address": "aws_security_group_rule.ingress_with_self",
                                "mode": "managed",
                                "type": "aws_security_group_rule",
                                "name": "ingress_with_self",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "description": {
                                        "references": [
                                            "var.ingress_with_self",
                                            "count.index"
                                        ]
                                    },
                                    "from_port": {
                                        "references": [
                                            "var.ingress_with_self",
                                            "count.index",
                                            "var.rules",
                                            "var.ingress_with_self",
                                            "count.index"
                                        ]
                                    },
                                    "prefix_list_ids": {
                                        "references": [
                                            "var.ingress_prefix_list_ids"
                                        ]
                                    },
                                    "protocol": {
                                        "references": [
                                            "var.ingress_with_self",
                                            "count.index",
                                            "var.rules",
                                            "var.ingress_with_self",
                                            "count.index"
                                        ]
                                    },
                                    "security_group_id": {
                                        "references": [
                                            "local.this_sg_id"
                                        ]
                                    },
                                    "self": {
                                        "references": [
                                            "var.ingress_with_self",
                                            "count.index"
                                        ]
                                    },
                                    "to_port": {
                                        "references": [
                                            "var.ingress_with_self",
                                            "count.index",
                                            "var.rules",
                                            "var.ingress_with_self",
                                            "count.index"
                                        ]
                                    },
                                    "type": {
                                        "constant_value": "ingress"
                                    }
                                },
                                "schema_version": 2,
                                "count_expression": {
                                    "references": [
                                        "local.create",
                                        "var.ingress_with_self"
                                    ]
                                }
                            },
                            {
                                "address": "aws_security_group_rule.ingress_with_source_security_group_id",
                                "mode": "managed",
                                "type": "aws_security_group_rule",
                                "name": "ingress_with_source_security_group_id",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "description": {
                                        "references": [
                                            "var.ingress_with_source_security_group_id",
                                            "count.index"
                                        ]
                                    },
                                    "from_port": {
                                        "references": [
                                            "var.ingress_with_source_security_group_id",
                                            "count.index",
                                            "var.rules",
                                            "var.ingress_with_source_security_group_id",
                                            "count.index"
                                        ]
                                    },
                                    "prefix_list_ids": {
                                        "references": [
                                            "var.ingress_prefix_list_ids"
                                        ]
                                    },
                                    "protocol": {
                                        "references": [
                                            "var.ingress_with_source_security_group_id",
                                            "count.index",
                                            "var.rules",
                                            "var.ingress_with_source_security_group_id",
                                            "count.index"
                                        ]
                                    },
                                    "security_group_id": {
                                        "references": [
                                            "local.this_sg_id"
                                        ]
                                    },
                                    "source_security_group_id": {
                                        "references": [
                                            "var.ingress_with_source_security_group_id",
                                            "count.index"
                                        ]
                                    },
                                    "to_port": {
                                        "references": [
                                            "var.ingress_with_source_security_group_id",
                                            "count.index",
                                            "var.rules",
                                            "var.ingress_with_source_security_group_id",
                                            "count.index"
                                        ]
                                    },
                                    "type": {
                                        "constant_value": "ingress"
                                    }
                                },
                                "schema_version": 2,
                                "count_expression": {
                                    "references": [
                                        "local.create",
                                        "var.ingress_with_source_security_group_id"
                                    ]
                                }
                            }
                        ],
                        "variables": {
                            "auto_groups": {
                                "default": {
                                    "activemq": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "activemq-5671-tcp",
                                            "activemq-8883-tcp",
                                            "activemq-61614-tcp",
                                            "activemq-61617-tcp",
                                            "activemq-61619-tcp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "alertmanager": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "alertmanager-9093-tcp",
                                            "alertmanager-9094-tcp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "carbon-relay-ng": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "carbon-line-in-tcp",
                                            "carbon-line-in-udp",
                                            "carbon-pickle-tcp",
                                            "carbon-pickle-udp",
                                            "carbon-gui-udp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "cassandra": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "cassandra-clients-tcp",
                                            "cassandra-thrift-clients-tcp",
                                            "cassandra-jmx-tcp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "consul": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "consul-tcp",
                                            "consul-grpc-tcp",
                                            "consul-webui-http-tcp",
                                            "consul-webui-https-tcp",
                                            "consul-dns-tcp",
                                            "consul-dns-udp",
                                            "consul-serf-lan-tcp",
                                            "consul-serf-lan-udp",
                                            "consul-serf-wan-tcp",
                                            "consul-serf-wan-udp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "docker-swarm": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "docker-swarm-mngmt-tcp",
                                            "docker-swarm-node-tcp",
                                            "docker-swarm-node-udp",
                                            "docker-swarm-overlay-udp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "elasticsearch": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "elasticsearch-rest-tcp",
                                            "elasticsearch-java-tcp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "etcd": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "etcd-client-tcp",
                                            "etcd-peer-tcp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "grafana": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "grafana-tcp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "graphite-statsd": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "graphite-webui",
                                            "graphite-2003-tcp",
                                            "graphite-2004-tcp",
                                            "graphite-2023-tcp",
                                            "graphite-2024-tcp",
                                            "graphite-8080-tcp",
                                            "graphite-8125-tcp",
                                            "graphite-8125-udp",
                                            "graphite-8126-tcp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "http-80": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "http-80-tcp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "http-8080": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "http-8080-tcp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "https-443": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "https-443-tcp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "https-8443": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "https-8443-tcp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "ipsec-4500": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "ipsec-4500-udp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "ipsec-500": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "ipsec-500-udp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "kafka": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "kafka-broker-tcp",
                                            "kafka-broker-tls-tcp",
                                            "kafka-jmx-exporter-tcp",
                                            "kafka-node-exporter-tcp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "kibana": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "kibana-tcp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "kubernetes-api": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "kubernetes-api-tcp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "ldap": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "ldap-tcp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "ldaps": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "ldaps-tcp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "logstash": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "logstash-tcp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "memcached": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "memcached-tcp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "minio": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "minio-tcp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "mongodb": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "mongodb-27017-tcp",
                                            "mongodb-27018-tcp",
                                            "mongodb-27019-tcp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "mssql": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "mssql-tcp",
                                            "mssql-udp",
                                            "mssql-analytics-tcp",
                                            "mssql-broker-tcp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "mysql": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "mysql-tcp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "nfs": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "nfs-tcp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "nomad": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "nomad-http-tcp",
                                            "nomad-rpc-tcp",
                                            "nomad-serf-tcp",
                                            "nomad-serf-udp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "ntp": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "ntp-udp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "openvpn": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "openvpn-udp",
                                            "openvpn-tcp",
                                            "openvpn-https-tcp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "oracle-db": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "oracle-db-tcp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "postgresql": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "postgresql-tcp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "prometheus": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "prometheus-http-tcp",
                                            "prometheus-pushgateway-http-tcp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "puppet": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "puppet-tcp",
                                            "puppetdb-tcp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "rabbitmq": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "rabbitmq-4369-tcp",
                                            "rabbitmq-5671-tcp",
                                            "rabbitmq-5672-tcp",
                                            "rabbitmq-15672-tcp",
                                            "rabbitmq-25672-tcp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "rdp": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "rdp-tcp",
                                            "rdp-udp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "redis": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "redis-tcp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "redshift": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "redshift-tcp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "smtp": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "smtp-tcp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "smtp-submission": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "smtp-submission-587-tcp",
                                            "smtp-submission-2587-tcp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "smtps": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "smtps-465-tcp",
                                            "smtps-2465-tcp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "solr": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "solr-tcp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "splunk": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "splunk-indexer-tcp",
                                            "splunk-clients-tcp",
                                            "splunk-splunkd-tcp",
                                            "splunk-hec-tcp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "squid": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "squid-proxy-tcp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "ssh": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "ssh-tcp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "storm": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "storm-nimbus-tcp",
                                            "storm-ui-tcp",
                                            "storm-supervisor-tcp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "web": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "http-80-tcp",
                                            "http-8080-tcp",
                                            "https-443-tcp",
                                            "web-jmx-tcp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "winrm": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "winrm-http-tcp",
                                            "winrm-https-tcp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "zipkin": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "zipkin-admin-tcp",
                                            "zipkin-admin-query-tcp",
                                            "zipkin-admin-web-tcp",
                                            "zipkin-query-tcp",
                                            "zipkin-web-tcp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "zookeeper": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "zookeeper-2181-tcp",
                                            "zookeeper-2888-tcp",
                                            "zookeeper-3888-tcp",
                                            "zookeeper-jmx-tcp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    }
                                },
                                "description": "Map of groups of security group rules to use to generate modules (see update_groups.sh)"
                            },
                            "computed_egress_rules": {
                                "default": [],
                                "description": "List of computed egress rules to create by name"
                            },
                            "computed_egress_with_cidr_blocks": {
                                "default": [],
                                "description": "List of computed egress rules to create where 'cidr_blocks' is used"
                            },
                            "computed_egress_with_ipv6_cidr_blocks": {
                                "default": [],
                                "description": "List of computed egress rules to create where 'ipv6_cidr_blocks' is used"
                            },
                            "computed_egress_with_self": {
                                "default": [],
                                "description": "List of computed egress rules to create where 'self' is defined"
                            },
                            "computed_egress_with_source_security_group_id": {
                                "default": [],
                                "description": "List of computed egress rules to create where 'source_security_group_id' is used"
                            },
                            "computed_ingress_rules": {
                                "default": [],
                                "description": "List of computed ingress rules to create by name"
                            },
                            "computed_ingress_with_cidr_blocks": {
                                "default": [],
                                "description": "List of computed ingress rules to create where 'cidr_blocks' is used"
                            },
                            "computed_ingress_with_ipv6_cidr_blocks": {
                                "default": [],
                                "description": "List of computed ingress rules to create where 'ipv6_cidr_blocks' is used"
                            },
                            "computed_ingress_with_self": {
                                "default": [],
                                "description": "List of computed ingress rules to create where 'self' is defined"
                            },
                            "computed_ingress_with_source_security_group_id": {
                                "default": [],
                                "description": "List of computed ingress rules to create where 'source_security_group_id' is used"
                            },
                            "create": {
                                "default": true,
                                "description": "Whether to create security group and all rules"
                            },
                            "create_sg": {
                                "default": true,
                                "description": "Whether to create security group"
                            },
                            "create_timeout": {
                                "default": "10m",
                                "description": "Time to wait for a security group to be created"
                            },
                            "delete_timeout": {
                                "default": "15m",
                                "description": "Time to wait for a security group to be deleted"
                            },
                            "description": {
                                "default": "Security Group managed by Terraform",
                                "description": "Description of security group"
                            },
                            "egress_cidr_blocks": {
                                "default": [
                                    "0.0.0.0/0"
                                ],
                                "description": "List of IPv4 CIDR ranges to use on all egress rules"
                            },
                            "egress_ipv6_cidr_blocks": {
                                "default": [
                                    "::/0"
                                ],
                                "description": "List of IPv6 CIDR ranges to use on all egress rules"
                            },
                            "egress_prefix_list_ids": {
                                "default": [],
                                "description": "List of prefix list IDs (for allowing access to VPC endpoints) to use on all egress rules"
                            },
                            "egress_rules": {
                                "default": [],
                                "description": "List of egress rules to create by name"
                            },
                            "egress_with_cidr_blocks": {
                                "default": [],
                                "description": "List of egress rules to create where 'cidr_blocks' is used"
                            },
                            "egress_with_ipv6_cidr_blocks": {
                                "default": [],
                                "description": "List of egress rules to create where 'ipv6_cidr_blocks' is used"
                            },
                            "egress_with_self": {
                                "default": [],
                                "description": "List of egress rules to create where 'self' is defined"
                            },
                            "egress_with_source_security_group_id": {
                                "default": [],
                                "description": "List of egress rules to create where 'source_security_group_id' is used"
                            },
                            "ingress_cidr_blocks": {
                                "default": [],
                                "description": "List of IPv4 CIDR ranges to use on all ingress rules"
                            },
                            "ingress_ipv6_cidr_blocks": {
                                "default": [],
                                "description": "List of IPv6 CIDR ranges to use on all ingress rules"
                            },
                            "ingress_prefix_list_ids": {
                                "default": [],
                                "description": "List of prefix list IDs (for allowing access to VPC endpoints) to use on all ingress rules"
                            },
                            "ingress_rules": {
                                "default": [],
                                "description": "List of ingress rules to create by name"
                            },
                            "ingress_with_cidr_blocks": {
                                "default": [],
                                "description": "List of ingress rules to create where 'cidr_blocks' is used"
                            },
                            "ingress_with_ipv6_cidr_blocks": {
                                "default": [],
                                "description": "List of ingress rules to create where 'ipv6_cidr_blocks' is used"
                            },
                            "ingress_with_self": {
                                "default": [],
                                "description": "List of ingress rules to create where 'self' is defined"
                            },
                            "ingress_with_source_security_group_id": {
                                "default": [],
                                "description": "List of ingress rules to create where 'source_security_group_id' is used"
                            },
                            "name": {
                                "default": null,
                                "description": "Name of security group - not required if create_sg is false"
                            },
                            "number_of_computed_egress_rules": {
                                "default": 0,
                                "description": "Number of computed egress rules to create by name"
                            },
                            "number_of_computed_egress_with_cidr_blocks": {
                                "default": 0,
                                "description": "Number of computed egress rules to create where 'cidr_blocks' is used"
                            },
                            "number_of_computed_egress_with_ipv6_cidr_blocks": {
                                "default": 0,
                                "description": "Number of computed egress rules to create where 'ipv6_cidr_blocks' is used"
                            },
                            "number_of_computed_egress_with_self": {
                                "default": 0,
                                "description": "Number of computed egress rules to create where 'self' is defined"
                            },
                            "number_of_computed_egress_with_source_security_group_id": {
                                "default": 0,
                                "description": "Number of computed egress rules to create where 'source_security_group_id' is used"
                            },
                            "number_of_computed_ingress_rules": {
                                "default": 0,
                                "description": "Number of computed ingress rules to create by name"
                            },
                            "number_of_computed_ingress_with_cidr_blocks": {
                                "default": 0,
                                "description": "Number of computed ingress rules to create where 'cidr_blocks' is used"
                            },
                            "number_of_computed_ingress_with_ipv6_cidr_blocks": {
                                "default": 0,
                                "description": "Number of computed ingress rules to create where 'ipv6_cidr_blocks' is used"
                            },
                            "number_of_computed_ingress_with_self": {
                                "default": 0,
                                "description": "Number of computed ingress rules to create where 'self' is defined"
                            },
                            "number_of_computed_ingress_with_source_security_group_id": {
                                "default": 0,
                                "description": "Number of computed ingress rules to create where 'source_security_group_id' is used"
                            },
                            "putin_khuylo": {
                                "default": true,
                                "description": "Do you agree that Putin doesn't respect Ukrainian sovereignty and territorial integrity? More info: https://en.wikipedia.org/wiki/Putin_khuylo!"
                            },
                            "revoke_rules_on_delete": {
                                "default": false,
                                "description": "Instruct Terraform to revoke all of the Security Groups attached ingress and egress rules before deleting the rule itself. Enable for EMR."
                            },
                            "rules": {
                                "default": {
                                    "_": [
                                        "",
                                        "",
                                        ""
                                    ],
                                    "activemq-5671-tcp": [
                                        "5671",
                                        "5671",
                                        "tcp",
                                        "ActiveMQ AMQP"
                                    ],
                                    "activemq-61614-tcp": [
                                        "61614",
                                        "61614",
                                        "tcp",
                                        "ActiveMQ STOMP"
                                    ],
                                    "activemq-61617-tcp": [
                                        "61617",
                                        "61617",
                                        "tcp",
                                        "ActiveMQ OpenWire"
                                    ],
                                    "activemq-61619-tcp": [
                                        "61619",
                                        "61619",
                                        "tcp",
                                        "ActiveMQ WebSocket"
                                    ],
                                    "activemq-8883-tcp": [
                                        "8883",
                                        "8883",
                                        "tcp",
                                        "ActiveMQ MQTT"
                                    ],
                                    "alertmanager-9093-tcp": [
                                        "9093",
                                        "9093",
                                        "tcp",
                                        "Alert Manager"
                                    ],
                                    "alertmanager-9094-tcp": [
                                        "9094",
                                        "9094",
                                        "tcp",
                                        "Alert Manager Cluster"
                                    ],
                                    "all-all": [
                                        "-1",
                                        "-1",
                                        "-1",
                                        "All protocols"
                                    ],
                                    "all-icmp": [
                                        "-1",
                                        "-1",
                                        "icmp",
                                        "All IPV4 ICMP"
                                    ],
                                    "all-ipv6-icmp": [
                                        "-1",
                                        "-1",
                                        "58",
                                        "All IPV6 ICMP"
                                    ],
                                    "all-tcp": [
                                        "0",
                                        "65535",
                                        "tcp",
                                        "All TCP ports"
                                    ],
                                    "all-udp": [
                                        "0",
                                        "65535",
                                        "udp",
                                        "All UDP ports"
                                    ],
                                    "carbon-admin-tcp": [
                                        "2004",
                                        "2004",
                                        "tcp",
                                        "Carbon admin"
                                    ],
                                    "carbon-gui-udp": [
                                        "8081",
                                        "8081",
                                        "tcp",
                                        "Carbon GUI"
                                    ],
                                    "carbon-line-in-tcp": [
                                        "2003",
                                        "2003",
                                        "tcp",
                                        "Carbon line-in"
                                    ],
                                    "carbon-line-in-udp": [
                                        "2003",
                                        "2003",
                                        "udp",
                                        "Carbon line-in"
                                    ],
                                    "carbon-pickle-tcp": [
                                        "2013",
                                        "2013",
                                        "tcp",
                                        "Carbon pickle"
                                    ],
                                    "carbon-pickle-udp": [
                                        "2013",
                                        "2013",
                                        "udp",
                                        "Carbon pickle"
                                    ],
                                    "cassandra-clients-tcp": [
                                        "9042",
                                        "9042",
                                        "tcp",
                                        "Cassandra clients"
                                    ],
                                    "cassandra-jmx-tcp": [
                                        "7199",
                                        "7199",
                                        "tcp",
                                        "JMX"
                                    ],
                                    "cassandra-thrift-clients-tcp": [
                                        "9160",
                                        "9160",
                                        "tcp",
                                        "Cassandra Thrift clients"
                                    ],
                                    "consul-dns-tcp": [
                                        "8600",
                                        "8600",
                                        "tcp",
                                        "Consul DNS"
                                    ],
                                    "consul-dns-udp": [
                                        "8600",
                                        "8600",
                                        "udp",
                                        "Consul DNS"
                                    ],
                                    "consul-grpc-tcp": [
                                        "8502",
                                        "8502",
                                        "tcp",
                                        "Consul gRPC"
                                    ],
                                    "consul-serf-lan-tcp": [
                                        "8301",
                                        "8301",
                                        "tcp",
                                        "Serf LAN"
                                    ],
                                    "consul-serf-lan-udp": [
                                        "8301",
                                        "8301",
                                        "udp",
                                        "Serf LAN"
                                    ],
                                    "consul-serf-wan-tcp": [
                                        "8302",
                                        "8302",
                                        "tcp",
                                        "Serf WAN"
                                    ],
                                    "consul-serf-wan-udp": [
                                        "8302",
                                        "8302",
                                        "udp",
                                        "Serf WAN"
                                    ],
                                    "consul-tcp": [
                                        "8300",
                                        "8300",
                                        "tcp",
                                        "Consul server"
                                    ],
                                    "consul-webui-http-tcp": [
                                        "8500",
                                        "8500",
                                        "tcp",
                                        "Consul web UI HTTP"
                                    ],
                                    "consul-webui-https-tcp": [
                                        "8501",
                                        "8501",
                                        "tcp",
                                        "Consul web UI HTTPS"
                                    ],
                                    "dns-tcp": [
                                        "53",
                                        "53",
                                        "tcp",
                                        "DNS"
                                    ],
                                    "dns-udp": [
                                        "53",
                                        "53",
                                        "udp",
                                        "DNS"
                                    ],
                                    "docker-swarm-mngmt-tcp": [
                                        "2377",
                                        "2377",
                                        "tcp",
                                        "Docker Swarm cluster management"
                                    ],
                                    "docker-swarm-node-tcp": [
                                        "7946",
                                        "7946",
                                        "tcp",
                                        "Docker Swarm node"
                                    ],
                                    "docker-swarm-node-udp": [
                                        "7946",
                                        "7946",
                                        "udp",
                                        "Docker Swarm node"
                                    ],
                                    "docker-swarm-overlay-udp": [
                                        "4789",
                                        "4789",
                                        "udp",
                                        "Docker Swarm Overlay Network Traffic"
                                    ],
                                    "elasticsearch-java-tcp": [
                                        "9300",
                                        "9300",
                                        "tcp",
                                        "Elasticsearch Java interface"
                                    ],
                                    "elasticsearch-rest-tcp": [
                                        "9200",
                                        "9200",
                                        "tcp",
                                        "Elasticsearch REST interface"
                                    ],
                                    "etcd-client-tcp": [
                                        "2379",
                                        "2379",
                                        "tcp",
                                        "Etcd Client"
                                    ],
                                    "etcd-peer-tcp": [
                                        "2380",
                                        "2380",
                                        "tcp",
                                        "Etcd Peer"
                                    ],
                                    "grafana-tcp": [
                                        "3000",
                                        "3000",
                                        "tcp",
                                        "Grafana Dashboard"
                                    ],
                                    "graphite-2003-tcp": [
                                        "2003",
                                        "2003",
                                        "tcp",
                                        "Carbon receiver plain text"
                                    ],
                                    "graphite-2004-tcp": [
                                        "2004",
                                        "2004",
                                        "tcp",
                                        "Carbon receiver pickle"
                                    ],
                                    "graphite-2023-tcp": [
                                        "2023",
                                        "2023",
                                        "tcp",
                                        "Carbon aggregator plaintext"
                                    ],
                                    "graphite-2024-tcp": [
                                        "2024",
                                        "2024",
                                        "tcp",
                                        "Carbon aggregator pickle"
                                    ],
                                    "graphite-8080-tcp": [
                                        "8080",
                                        "8080",
                                        "tcp",
                                        "Graphite gunicorn port"
                                    ],
                                    "graphite-8125-tcp": [
                                        "8125",
                                        "8125",
                                        "tcp",
                                        "Statsd TCP"
                                    ],
                                    "graphite-8125-udp": [
                                        "8125",
                                        "8125",
                                        "udp",
                                        "Statsd UDP default"
                                    ],
                                    "graphite-8126-tcp": [
                                        "8126",
                                        "8126",
                                        "tcp",
                                        "Statsd admin"
                                    ],
                                    "graphite-webui": [
                                        "80",
                                        "80",
                                        "tcp",
                                        "Graphite admin interface"
                                    ],
                                    "http-80-tcp": [
                                        "80",
                                        "80",
                                        "tcp",
                                        "HTTP"
                                    ],
                                    "http-8080-tcp": [
                                        "8080",
                                        "8080",
                                        "tcp",
                                        "HTTP"
                                    ],
                                    "https-443-tcp": [
                                        "443",
                                        "443",
                                        "tcp",
                                        "HTTPS"
                                    ],
                                    "https-8443-tcp": [
                                        "8443",
                                        "8443",
                                        "tcp",
                                        "HTTPS"
                                    ],
                                    "ipsec-4500-udp": [
                                        "4500",
                                        "4500",
                                        "udp",
                                        "IPSEC NAT-T"
                                    ],
                                    "ipsec-500-udp": [
                                        "500",
                                        "500",
                                        "udp",
                                        "IPSEC ISAKMP"
                                    ],
                                    "kafka-broker-tcp": [
                                        "9092",
                                        "9092",
                                        "tcp",
                                        "Kafka broker 0.8.2+"
                                    ],
                                    "kafka-broker-tls-tcp": [
                                        "9094",
                                        "9094",
                                        "tcp",
                                        "Kafka TLS enabled broker 0.8.2+"
                                    ],
                                    "kafka-jmx-exporter-tcp": [
                                        "11001",
                                        "11001",
                                        "tcp",
                                        "Kafka JMX Exporter"
                                    ],
                                    "kafka-node-exporter-tcp": [
                                        "11002",
                                        "11002",
                                        "tcp",
                                        "Kafka Node Exporter"
                                    ],
                                    "kibana-tcp": [
                                        "5601",
                                        "5601",
                                        "tcp",
                                        "Kibana Web Interface"
                                    ],
                                    "kubernetes-api-tcp": [
                                        "6443",
                                        "6443",
                                        "tcp",
                                        "Kubernetes API Server"
                                    ],
                                    "ldap-tcp": [
                                        "389",
                                        "389",
                                        "tcp",
                                        "LDAP"
                                    ],
                                    "ldaps-tcp": [
                                        "636",
                                        "636",
                                        "tcp",
                                        "LDAPS"
                                    ],
                                    "logstash-tcp": [
                                        "5044",
                                        "5044",
                                        "tcp",
                                        "Logstash"
                                    ],
                                    "memcached-tcp": [
                                        "11211",
                                        "11211",
                                        "tcp",
                                        "Memcached"
                                    ],
                                    "minio-tcp": [
                                        "9000",
                                        "9000",
                                        "tcp",
                                        "MinIO"
                                    ],
                                    "mongodb-27017-tcp": [
                                        "27017",
                                        "27017",
                                        "tcp",
                                        "MongoDB"
                                    ],
                                    "mongodb-27018-tcp": [
                                        "27018",
                                        "27018",
                                        "tcp",
                                        "MongoDB shard"
                                    ],
                                    "mongodb-27019-tcp": [
                                        "27019",
                                        "27019",
                                        "tcp",
                                        "MongoDB config server"
                                    ],
                                    "mssql-analytics-tcp": [
                                        "2383",
                                        "2383",
                                        "tcp",
                                        "MSSQL Analytics"
                                    ],
                                    "mssql-broker-tcp": [
                                        "4022",
                                        "4022",
                                        "tcp",
                                        "MSSQL Broker"
                                    ],
                                    "mssql-tcp": [
                                        "1433",
                                        "1433",
                                        "tcp",
                                        "MSSQL Server"
                                    ],
                                    "mssql-udp": [
                                        "1434",
                                        "1434",
                                        "udp",
                                        "MSSQL Browser"
                                    ],
                                    "mysql-tcp": [
                                        "3306",
                                        "3306",
                                        "tcp",
                                        "MySQL/Aurora"
                                    ],
                                    "nfs-tcp": [
                                        "2049",
                                        "2049",
                                        "tcp",
                                        "NFS/EFS"
                                    ],
                                    "nomad-http-tcp": [
                                        "4646",
                                        "4646",
                                        "tcp",
                                        "Nomad HTTP"
                                    ],
                                    "nomad-rpc-tcp": [
                                        "4647",
                                        "4647",
                                        "tcp",
                                        "Nomad RPC"
                                    ],
                                    "nomad-serf-tcp": [
                                        "4648",
                                        "4648",
                                        "tcp",
                                        "Serf"
                                    ],
                                    "nomad-serf-udp": [
                                        "4648",
                                        "4648",
                                        "udp",
                                        "Serf"
                                    ],
                                    "ntp-udp": [
                                        "123",
                                        "123",
                                        "udp",
                                        "NTP"
                                    ],
                                    "octopus-tentacle-tcp": [
                                        "10933",
                                        "10933",
                                        "tcp",
                                        "Octopus Tentacle"
                                    ],
                                    "openvpn-https-tcp": [
                                        "443",
                                        "443",
                                        "tcp",
                                        "OpenVPN"
                                    ],
                                    "openvpn-tcp": [
                                        "943",
                                        "943",
                                        "tcp",
                                        "OpenVPN"
                                    ],
                                    "openvpn-udp": [
                                        "1194",
                                        "1194",
                                        "udp",
                                        "OpenVPN"
                                    ],
                                    "oracle-db-tcp": [
                                        "1521",
                                        "1521",
                                        "tcp",
                                        "Oracle"
                                    ],
                                    "postgresql-tcp": [
                                        "5432",
                                        "5432",
                                        "tcp",
                                        "PostgreSQL"
                                    ],
                                    "prometheus-http-tcp": [
                                        "9090",
                                        "9090",
                                        "tcp",
                                        "Prometheus"
                                    ],
                                    "prometheus-pushgateway-http-tcp": [
                                        "9091",
                                        "9091",
                                        "tcp",
                                        "Prometheus Pushgateway"
                                    ],
                                    "puppet-tcp": [
                                        "8140",
                                        "8140",
                                        "tcp",
                                        "Puppet"
                                    ],
                                    "puppetdb-tcp": [
                                        "8081",
                                        "8081",
                                        "tcp",
                                        "PuppetDB"
                                    ],
                                    "rabbitmq-15672-tcp": [
                                        "15672",
                                        "15672",
                                        "tcp",
                                        "RabbitMQ"
                                    ],
                                    "rabbitmq-25672-tcp": [
                                        "25672",
                                        "25672",
                                        "tcp",
                                        "RabbitMQ"
                                    ],
                                    "rabbitmq-4369-tcp": [
                                        "4369",
                                        "4369",
                                        "tcp",
                                        "RabbitMQ epmd"
                                    ],
                                    "rabbitmq-5671-tcp": [
                                        "5671",
                                        "5671",
                                        "tcp",
                                        "RabbitMQ"
                                    ],
                                    "rabbitmq-5672-tcp": [
                                        "5672",
                                        "5672",
                                        "tcp",
                                        "RabbitMQ"
                                    ],
                                    "rdp-tcp": [
                                        "3389",
                                        "3389",
                                        "tcp",
                                        "Remote Desktop"
                                    ],
                                    "rdp-udp": [
                                        "3389",
                                        "3389",
                                        "udp",
                                        "Remote Desktop"
                                    ],
                                    "redis-tcp": [
                                        "6379",
                                        "6379",
                                        "tcp",
                                        "Redis"
                                    ],
                                    "redshift-tcp": [
                                        "5439",
                                        "5439",
                                        "tcp",
                                        "Redshift"
                                    ],
                                    "saltstack-tcp": [
                                        "4505",
                                        "4506",
                                        "tcp",
                                        "SaltStack"
                                    ],
                                    "smtp-submission-2587-tcp": [
                                        "2587",
                                        "2587",
                                        "tcp",
                                        "SMTP Submission"
                                    ],
                                    "smtp-submission-587-tcp": [
                                        "587",
                                        "587",
                                        "tcp",
                                        "SMTP Submission"
                                    ],
                                    "smtp-tcp": [
                                        "25",
                                        "25",
                                        "tcp",
                                        "SMTP"
                                    ],
                                    "smtps-2456-tcp": [
                                        "2465",
                                        "2465",
                                        "tcp",
                                        "SMTPS"
                                    ],
                                    "smtps-465-tcp": [
                                        "465",
                                        "465",
                                        "tcp",
                                        "SMTPS"
                                    ],
                                    "solr-tcp": [
                                        "8983",
                                        "8987",
                                        "tcp",
                                        "Solr"
                                    ],
                                    "splunk-hec-tcp": [
                                        "8088",
                                        "8088",
                                        "tcp",
                                        "Splunk HEC"
                                    ],
                                    "splunk-indexer-tcp": [
                                        "9997",
                                        "9997",
                                        "tcp",
                                        "Splunk indexer"
                                    ],
                                    "splunk-splunkd-tcp": [
                                        "8089",
                                        "8089",
                                        "tcp",
                                        "Splunkd"
                                    ],
                                    "splunk-web-tcp": [
                                        "8000",
                                        "8000",
                                        "tcp",
                                        "Splunk Web"
                                    ],
                                    "squid-proxy-tcp": [
                                        "3128",
                                        "3128",
                                        "tcp",
                                        "Squid default proxy"
                                    ],
                                    "ssh-tcp": [
                                        "22",
                                        "22",
                                        "tcp",
                                        "SSH"
                                    ],
                                    "storm-nimbus-tcp": [
                                        "6627",
                                        "6627",
                                        "tcp",
                                        "Nimbus"
                                    ],
                                    "storm-supervisor-tcp": [
                                        "6700",
                                        "6703",
                                        "tcp",
                                        "Supervisor"
                                    ],
                                    "storm-ui-tcp": [
                                        "8080",
                                        "8080",
                                        "tcp",
                                        "Storm UI"
                                    ],
                                    "web-jmx-tcp": [
                                        "1099",
                                        "1099",
                                        "tcp",
                                        "JMX"
                                    ],
                                    "winrm-http-tcp": [
                                        "5985",
                                        "5985",
                                        "tcp",
                                        "WinRM HTTP"
                                    ],
                                    "winrm-https-tcp": [
                                        "5986",
                                        "5986",
                                        "tcp",
                                        "WinRM HTTPS"
                                    ],
                                    "zipkin-admin-query-tcp": [
                                        "9901",
                                        "9901",
                                        "tcp",
                                        "Zipkin Admin port query"
                                    ],
                                    "zipkin-admin-tcp": [
                                        "9990",
                                        "9990",
                                        "tcp",
                                        "Zipkin Admin port collector"
                                    ],
                                    "zipkin-admin-web-tcp": [
                                        "9991",
                                        "9991",
                                        "tcp",
                                        "Zipkin Admin port web"
                                    ],
                                    "zipkin-query-tcp": [
                                        "9411",
                                        "9411",
                                        "tcp",
                                        "Zipkin query port"
                                    ],
                                    "zipkin-web-tcp": [
                                        "8080",
                                        "8080",
                                        "tcp",
                                        "Zipkin web port"
                                    ],
                                    "zookeeper-2181-tcp": [
                                        "2181",
                                        "2181",
                                        "tcp",
                                        "Zookeeper"
                                    ],
                                    "zookeeper-2888-tcp": [
                                        "2888",
                                        "2888",
                                        "tcp",
                                        "Zookeeper"
                                    ],
                                    "zookeeper-3888-tcp": [
                                        "3888",
                                        "3888",
                                        "tcp",
                                        "Zookeeper"
                                    ],
                                    "zookeeper-jmx-tcp": [
                                        "7199",
                                        "7199",
                                        "tcp",
                                        "JMX"
                                    ]
                                },
                                "description": "Map of known security group rules (define as 'name' = ['from port', 'to port', 'protocol', 'description'])"
                            },
                            "security_group_id": {
                                "default": null,
                                "description": "ID of existing security group whose rules we will manage"
                            },
                            "tags": {
                                "default": {},
                                "description": "A mapping of tags to assign to security group"
                            },
                            "use_name_prefix": {
                                "default": true,
                                "description": "Whether to use name_prefix or fixed name. Should be true to able to update security group name after initial creation"
                            },
                            "vpc_id": {
                                "default": null,
                                "description": "ID of the VPC where to create security group"
                            }
                        }
                    },
                    "version_constraint": "~> 4.0"
                },
                "vpc": {
                    "source": "terraform-aws-modules/vpc/aws",
                    "expressions": {
                        "azs": {
                            "references": [
                                "local.region",
                                "local.region",
                                "local.region"
                            ]
                        },
                        "cidr": {
                            "constant_value": "10.99.0.0/18"
                        },
                        "create_database_subnet_group": {
                            "constant_value": true
                        },
                        "create_database_subnet_route_table": {
                            "constant_value": true
                        },
                        "database_subnets": {
                            "constant_value": [
                                "10.99.7.0/24",
                                "10.99.8.0/24",
                                "10.99.9.0/24"
                            ]
                        },
                        "name": {
                            "references": [
                                "local.name"
                            ]
                        },
                        "private_subnets": {
                            "constant_value": [
                                "10.99.3.0/24",
                                "10.99.4.0/24",
                                "10.99.5.0/24"
                            ]
                        },
                        "public_subnets": {
                            "constant_value": [
                                "10.99.0.0/24",
                                "10.99.1.0/24",
                                "10.99.2.0/24"
                            ]
                        },
                        "tags": {
                            "references": [
                                "local.tags"
                            ]
                        }
                    },
                    "module": {
                        "outputs": {
                            "azs": {
                                "expression": {
                                    "references": [
                                        "var.azs"
                                    ]
                                },
                                "description": "A list of availability zones specified as argument to this module"
                            },
                            "cgw_arns": {
                                "expression": {
                                    "references": [
                                        "aws_customer_gateway.this"
                                    ]
                                },
                                "description": "List of ARNs of Customer Gateway"
                            },
                            "cgw_ids": {
                                "expression": {
                                    "references": [
                                        "aws_customer_gateway.this"
                                    ]
                                },
                                "description": "List of IDs of Customer Gateway"
                            },
                            "database_internet_gateway_route_id": {
                                "expression": {
                                    "references": [
                                        "aws_route.database_internet_gateway[0].id",
                                        "aws_route.database_internet_gateway[0]",
                                        "aws_route.database_internet_gateway"
                                    ]
                                },
                                "description": "ID of the database internet gateway route"
                            },
                            "database_ipv6_egress_route_id": {
                                "expression": {
                                    "references": [
                                        "aws_route.database_ipv6_egress[0].id",
                                        "aws_route.database_ipv6_egress[0]",
                                        "aws_route.database_ipv6_egress"
                                    ]
                                },
                                "description": "ID of the database IPv6 egress route"
                            },
                            "database_nat_gateway_route_ids": {
                                "expression": {
                                    "references": [
                                        "aws_route.database_nat_gateway"
                                    ]
                                },
                                "description": "List of IDs of the database nat gateway route"
                            },
                            "database_network_acl_arn": {
                                "expression": {
                                    "references": [
                                        "aws_network_acl.database[0].arn",
                                        "aws_network_acl.database[0]",
                                        "aws_network_acl.database"
                                    ]
                                },
                                "description": "ARN of the database network ACL"
                            },
                            "database_network_acl_id": {
                                "expression": {
                                    "references": [
                                        "aws_network_acl.database[0].id",
                                        "aws_network_acl.database[0]",
                                        "aws_network_acl.database"
                                    ]
                                },
                                "description": "ID of the database network ACL"
                            },
                            "database_route_table_association_ids": {
                                "expression": {
                                    "references": [
                                        "aws_route_table_association.database"
                                    ]
                                },
                                "description": "List of IDs of the database route table association"
                            },
                            "database_route_table_ids": {
                                "expression": {
                                    "references": [
                                        "aws_route_table.database",
                                        "aws_route_table.private"
                                    ]
                                },
                                "description": "List of IDs of database route tables"
                            },
                            "database_subnet_arns": {
                                "expression": {
                                    "references": [
                                        "aws_subnet.database"
                                    ]
                                },
                                "description": "List of ARNs of database subnets"
                            },
                            "database_subnet_group": {
                                "expression": {
                                    "references": [
                                        "aws_db_subnet_group.database[0].id",
                                        "aws_db_subnet_group.database[0]",
                                        "aws_db_subnet_group.database"
                                    ]
                                },
                                "description": "ID of database subnet group"
                            },
                            "database_subnet_group_name": {
                                "expression": {
                                    "references": [
                                        "aws_db_subnet_group.database[0].name",
                                        "aws_db_subnet_group.database[0]",
                                        "aws_db_subnet_group.database"
                                    ]
                                },
                                "description": "Name of database subnet group"
                            },
                            "database_subnets": {
                                "expression": {
                                    "references": [
                                        "aws_subnet.database"
                                    ]
                                },
                                "description": "List of IDs of database subnets"
                            },
                            "database_subnets_cidr_blocks": {
                                "expression": {
                                    "references": [
                                        "aws_subnet.database"
                                    ]
                                },
                                "description": "List of cidr_blocks of database subnets"
                            },
                            "database_subnets_ipv6_cidr_blocks": {
                                "expression": {
                                    "references": [
                                        "aws_subnet.database"
                                    ]
                                },
                                "description": "List of IPv6 cidr_blocks of database subnets in an IPv6 enabled VPC"
                            },
                            "default_network_acl_id": {
                                "expression": {
                                    "references": [
                                        "aws_vpc.this[0].default_network_acl_id",
                                        "aws_vpc.this[0]",
                                        "aws_vpc.this"
                                    ]
                                },
                                "description": "The ID of the default network ACL"
                            },
                            "default_route_table_id": {
                                "expression": {
                                    "references": [
                                        "aws_vpc.this[0].default_route_table_id",
                                        "aws_vpc.this[0]",
                                        "aws_vpc.this"
                                    ]
                                },
                                "description": "The ID of the default route table"
                            },
                            "default_security_group_id": {
                                "expression": {
                                    "references": [
                                        "aws_vpc.this[0].default_security_group_id",
                                        "aws_vpc.this[0]",
                                        "aws_vpc.this"
                                    ]
                                },
                                "description": "The ID of the security group created by default on VPC creation"
                            },
                            "default_vpc_arn": {
                                "expression": {
                                    "references": [
                                        "aws_default_vpc.this[0].arn",
                                        "aws_default_vpc.this[0]",
                                        "aws_default_vpc.this"
                                    ]
                                },
                                "description": "The ARN of the Default VPC"
                            },
                            "default_vpc_cidr_block": {
                                "expression": {
                                    "references": [
                                        "aws_default_vpc.this[0].cidr_block",
                                        "aws_default_vpc.this[0]",
                                        "aws_default_vpc.this"
                                    ]
                                },
                                "description": "The CIDR block of the Default VPC"
                            },
                            "default_vpc_default_network_acl_id": {
                                "expression": {
                                    "references": [
                                        "aws_default_vpc.this[0].default_network_acl_id",
                                        "aws_default_vpc.this[0]",
                                        "aws_default_vpc.this"
                                    ]
                                },
                                "description": "The ID of the default network ACL of the Default VPC"
                            },
                            "default_vpc_default_route_table_id": {
                                "expression": {
                                    "references": [
                                        "aws_default_vpc.this[0].default_route_table_id",
                                        "aws_default_vpc.this[0]",
                                        "aws_default_vpc.this"
                                    ]
                                },
                                "description": "The ID of the default route table of the Default VPC"
                            },
                            "default_vpc_default_security_group_id": {
                                "expression": {
                                    "references": [
                                        "aws_default_vpc.this[0].default_security_group_id",
                                        "aws_default_vpc.this[0]",
                                        "aws_default_vpc.this"
                                    ]
                                },
                                "description": "The ID of the security group created by default on Default VPC creation"
                            },
                            "default_vpc_enable_dns_hostnames": {
                                "expression": {
                                    "references": [
                                        "aws_default_vpc.this[0].enable_dns_hostnames",
                                        "aws_default_vpc.this[0]",
                                        "aws_default_vpc.this"
                                    ]
                                },
                                "description": "Whether or not the Default VPC has DNS hostname support"
                            },
                            "default_vpc_enable_dns_support": {
                                "expression": {
                                    "references": [
                                        "aws_default_vpc.this[0].enable_dns_support",
                                        "aws_default_vpc.this[0]",
                                        "aws_default_vpc.this"
                                    ]
                                },
                                "description": "Whether or not the Default VPC has DNS support"
                            },
                            "default_vpc_id": {
                                "expression": {
                                    "references": [
                                        "aws_default_vpc.this[0].id",
                                        "aws_default_vpc.this[0]",
                                        "aws_default_vpc.this"
                                    ]
                                },
                                "description": "The ID of the Default VPC"
                            },
                            "default_vpc_instance_tenancy": {
                                "expression": {
                                    "references": [
                                        "aws_default_vpc.this[0].instance_tenancy",
                                        "aws_default_vpc.this[0]",
                                        "aws_default_vpc.this"
                                    ]
                                },
                                "description": "Tenancy of instances spin up within Default VPC"
                            },
                            "default_vpc_main_route_table_id": {
                                "expression": {
                                    "references": [
                                        "aws_default_vpc.this[0].main_route_table_id",
                                        "aws_default_vpc.this[0]",
                                        "aws_default_vpc.this"
                                    ]
                                },
                                "description": "The ID of the main route table associated with the Default VPC"
                            },
                            "dhcp_options_id": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_dhcp_options.this[0].id",
                                        "aws_vpc_dhcp_options.this[0]",
                                        "aws_vpc_dhcp_options.this"
                                    ]
                                },
                                "description": "The ID of the DHCP options"
                            },
                            "egress_only_internet_gateway_id": {
                                "expression": {
                                    "references": [
                                        "aws_egress_only_internet_gateway.this[0].id",
                                        "aws_egress_only_internet_gateway.this[0]",
                                        "aws_egress_only_internet_gateway.this"
                                    ]
                                },
                                "description": "The ID of the egress only Internet Gateway"
                            },
                            "elasticache_network_acl_arn": {
                                "expression": {
                                    "references": [
                                        "aws_network_acl.elasticache[0].arn",
                                        "aws_network_acl.elasticache[0]",
                                        "aws_network_acl.elasticache"
                                    ]
                                },
                                "description": "ARN of the elasticache network ACL"
                            },
                            "elasticache_network_acl_id": {
                                "expression": {
                                    "references": [
                                        "aws_network_acl.elasticache[0].id",
                                        "aws_network_acl.elasticache[0]",
                                        "aws_network_acl.elasticache"
                                    ]
                                },
                                "description": "ID of the elasticache network ACL"
                            },
                            "elasticache_route_table_association_ids": {
                                "expression": {
                                    "references": [
                                        "aws_route_table_association.elasticache"
                                    ]
                                },
                                "description": "List of IDs of the elasticache route table association"
                            },
                            "elasticache_route_table_ids": {
                                "expression": {
                                    "references": [
                                        "aws_route_table.elasticache",
                                        "aws_route_table.private"
                                    ]
                                },
                                "description": "List of IDs of elasticache route tables"
                            },
                            "elasticache_subnet_arns": {
                                "expression": {
                                    "references": [
                                        "aws_subnet.elasticache"
                                    ]
                                },
                                "description": "List of ARNs of elasticache subnets"
                            },
                            "elasticache_subnet_group": {
                                "expression": {
                                    "references": [
                                        "aws_elasticache_subnet_group.elasticache[0].id",
                                        "aws_elasticache_subnet_group.elasticache[0]",
                                        "aws_elasticache_subnet_group.elasticache"
                                    ]
                                },
                                "description": "ID of elasticache subnet group"
                            },
                            "elasticache_subnet_group_name": {
                                "expression": {
                                    "references": [
                                        "aws_elasticache_subnet_group.elasticache[0].name",
                                        "aws_elasticache_subnet_group.elasticache[0]",
                                        "aws_elasticache_subnet_group.elasticache"
                                    ]
                                },
                                "description": "Name of elasticache subnet group"
                            },
                            "elasticache_subnets": {
                                "expression": {
                                    "references": [
                                        "aws_subnet.elasticache"
                                    ]
                                },
                                "description": "List of IDs of elasticache subnets"
                            },
                            "elasticache_subnets_cidr_blocks": {
                                "expression": {
                                    "references": [
                                        "aws_subnet.elasticache"
                                    ]
                                },
                                "description": "List of cidr_blocks of elasticache subnets"
                            },
                            "elasticache_subnets_ipv6_cidr_blocks": {
                                "expression": {
                                    "references": [
                                        "aws_subnet.elasticache"
                                    ]
                                },
                                "description": "List of IPv6 cidr_blocks of elasticache subnets in an IPv6 enabled VPC"
                            },
                            "igw_arn": {
                                "expression": {
                                    "references": [
                                        "aws_internet_gateway.this[0].arn",
                                        "aws_internet_gateway.this[0]",
                                        "aws_internet_gateway.this"
                                    ]
                                },
                                "description": "The ARN of the Internet Gateway"
                            },
                            "igw_id": {
                                "expression": {
                                    "references": [
                                        "aws_internet_gateway.this[0].id",
                                        "aws_internet_gateway.this[0]",
                                        "aws_internet_gateway.this"
                                    ]
                                },
                                "description": "The ID of the Internet Gateway"
                            },
                            "intra_network_acl_arn": {
                                "expression": {
                                    "references": [
                                        "aws_network_acl.intra[0].arn",
                                        "aws_network_acl.intra[0]",
                                        "aws_network_acl.intra"
                                    ]
                                },
                                "description": "ARN of the intra network ACL"
                            },
                            "intra_network_acl_id": {
                                "expression": {
                                    "references": [
                                        "aws_network_acl.intra[0].id",
                                        "aws_network_acl.intra[0]",
                                        "aws_network_acl.intra"
                                    ]
                                },
                                "description": "ID of the intra network ACL"
                            },
                            "intra_route_table_association_ids": {
                                "expression": {
                                    "references": [
                                        "aws_route_table_association.intra"
                                    ]
                                },
                                "description": "List of IDs of the intra route table association"
                            },
                            "intra_route_table_ids": {
                                "expression": {
                                    "references": [
                                        "aws_route_table.intra"
                                    ]
                                },
                                "description": "List of IDs of intra route tables"
                            },
                            "intra_subnet_arns": {
                                "expression": {
                                    "references": [
                                        "aws_subnet.intra"
                                    ]
                                },
                                "description": "List of ARNs of intra subnets"
                            },
                            "intra_subnets": {
                                "expression": {
                                    "references": [
                                        "aws_subnet.intra"
                                    ]
                                },
                                "description": "List of IDs of intra subnets"
                            },
                            "intra_subnets_cidr_blocks": {
                                "expression": {
                                    "references": [
                                        "aws_subnet.intra"
                                    ]
                                },
                                "description": "List of cidr_blocks of intra subnets"
                            },
                            "intra_subnets_ipv6_cidr_blocks": {
                                "expression": {
                                    "references": [
                                        "aws_subnet.intra"
                                    ]
                                },
                                "description": "List of IPv6 cidr_blocks of intra subnets in an IPv6 enabled VPC"
                            },
                            "name": {
                                "expression": {
                                    "references": [
                                        "var.name"
                                    ]
                                },
                                "description": "The name of the VPC specified as argument to this module"
                            },
                            "nat_ids": {
                                "expression": {
                                    "references": [
                                        "aws_eip.nat"
                                    ]
                                },
                                "description": "List of allocation ID of Elastic IPs created for AWS NAT Gateway"
                            },
                            "nat_public_ips": {
                                "expression": {
                                    "references": [
                                        "var.reuse_nat_ips",
                                        "var.external_nat_ips",
                                        "aws_eip.nat"
                                    ]
                                },
                                "description": "List of public Elastic IPs created for AWS NAT Gateway"
                            },
                            "natgw_ids": {
                                "expression": {
                                    "references": [
                                        "aws_nat_gateway.this"
                                    ]
                                },
                                "description": "List of NAT Gateway IDs"
                            },
                            "outpost_network_acl_arn": {
                                "expression": {
                                    "references": [
                                        "aws_network_acl.outpost[0].arn",
                                        "aws_network_acl.outpost[0]",
                                        "aws_network_acl.outpost"
                                    ]
                                },
                                "description": "ARN of the outpost network ACL"
                            },
                            "outpost_network_acl_id": {
                                "expression": {
                                    "references": [
                                        "aws_network_acl.outpost[0].id",
                                        "aws_network_acl.outpost[0]",
                                        "aws_network_acl.outpost"
                                    ]
                                },
                                "description": "ID of the outpost network ACL"
                            },
                            "outpost_subnet_arns": {
                                "expression": {
                                    "references": [
                                        "aws_subnet.outpost"
                                    ]
                                },
                                "description": "List of ARNs of outpost subnets"
                            },
                            "outpost_subnets": {
                                "expression": {
                                    "references": [
                                        "aws_subnet.outpost"
                                    ]
                                },
                                "description": "List of IDs of outpost subnets"
                            },
                            "outpost_subnets_cidr_blocks": {
                                "expression": {
                                    "references": [
                                        "aws_subnet.outpost"
                                    ]
                                },
                                "description": "List of cidr_blocks of outpost subnets"
                            },
                            "outpost_subnets_ipv6_cidr_blocks": {
                                "expression": {
                                    "references": [
                                        "aws_subnet.outpost"
                                    ]
                                },
                                "description": "List of IPv6 cidr_blocks of outpost subnets in an IPv6 enabled VPC"
                            },
                            "private_ipv6_egress_route_ids": {
                                "expression": {
                                    "references": [
                                        "aws_route.private_ipv6_egress"
                                    ]
                                },
                                "description": "List of IDs of the ipv6 egress route"
                            },
                            "private_nat_gateway_route_ids": {
                                "expression": {
                                    "references": [
                                        "aws_route.private_nat_gateway"
                                    ]
                                },
                                "description": "List of IDs of the private nat gateway route"
                            },
                            "private_network_acl_arn": {
                                "expression": {
                                    "references": [
                                        "aws_network_acl.private[0].arn",
                                        "aws_network_acl.private[0]",
                                        "aws_network_acl.private"
                                    ]
                                },
                                "description": "ARN of the private network ACL"
                            },
                            "private_network_acl_id": {
                                "expression": {
                                    "references": [
                                        "aws_network_acl.private[0].id",
                                        "aws_network_acl.private[0]",
                                        "aws_network_acl.private"
                                    ]
                                },
                                "description": "ID of the private network ACL"
                            },
                            "private_route_table_association_ids": {
                                "expression": {
                                    "references": [
                                        "aws_route_table_association.private"
                                    ]
                                },
                                "description": "List of IDs of the private route table association"
                            },
                            "private_route_table_ids": {
                                "expression": {
                                    "references": [
                                        "aws_route_table.private"
                                    ]
                                },
                                "description": "List of IDs of private route tables"
                            },
                            "private_subnet_arns": {
                                "expression": {
                                    "references": [
                                        "aws_subnet.private"
                                    ]
                                },
                                "description": "List of ARNs of private subnets"
                            },
                            "private_subnets": {
                                "expression": {
                                    "references": [
                                        "aws_subnet.private"
                                    ]
                                },
                                "description": "List of IDs of private subnets"
                            },
                            "private_subnets_cidr_blocks": {
                                "expression": {
                                    "references": [
                                        "aws_subnet.private"
                                    ]
                                },
                                "description": "List of cidr_blocks of private subnets"
                            },
                            "private_subnets_ipv6_cidr_blocks": {
                                "expression": {
                                    "references": [
                                        "aws_subnet.private"
                                    ]
                                },
                                "description": "List of IPv6 cidr_blocks of private subnets in an IPv6 enabled VPC"
                            },
                            "public_internet_gateway_ipv6_route_id": {
                                "expression": {
                                    "references": [
                                        "aws_route.public_internet_gateway_ipv6[0].id",
                                        "aws_route.public_internet_gateway_ipv6[0]",
                                        "aws_route.public_internet_gateway_ipv6"
                                    ]
                                },
                                "description": "ID of the IPv6 internet gateway route"
                            },
                            "public_internet_gateway_route_id": {
                                "expression": {
                                    "references": [
                                        "aws_route.public_internet_gateway[0].id",
                                        "aws_route.public_internet_gateway[0]",
                                        "aws_route.public_internet_gateway"
                                    ]
                                },
                                "description": "ID of the internet gateway route"
                            },
                            "public_network_acl_arn": {
                                "expression": {
                                    "references": [
                                        "aws_network_acl.public[0].arn",
                                        "aws_network_acl.public[0]",
                                        "aws_network_acl.public"
                                    ]
                                },
                                "description": "ARN of the public network ACL"
                            },
                            "public_network_acl_id": {
                                "expression": {
                                    "references": [
                                        "aws_network_acl.public[0].id",
                                        "aws_network_acl.public[0]",
                                        "aws_network_acl.public"
                                    ]
                                },
                                "description": "ID of the public network ACL"
                            },
                            "public_route_table_association_ids": {
                                "expression": {
                                    "references": [
                                        "aws_route_table_association.public"
                                    ]
                                },
                                "description": "List of IDs of the public route table association"
                            },
                            "public_route_table_ids": {
                                "expression": {
                                    "references": [
                                        "aws_route_table.public"
                                    ]
                                },
                                "description": "List of IDs of public route tables"
                            },
                            "public_subnet_arns": {
                                "expression": {
                                    "references": [
                                        "aws_subnet.public"
                                    ]
                                },
                                "description": "List of ARNs of public subnets"
                            },
                            "public_subnets": {
                                "expression": {
                                    "references": [
                                        "aws_subnet.public"
                                    ]
                                },
                                "description": "List of IDs of public subnets"
                            },
                            "public_subnets_cidr_blocks": {
                                "expression": {
                                    "references": [
                                        "aws_subnet.public"
                                    ]
                                },
                                "description": "List of cidr_blocks of public subnets"
                            },
                            "public_subnets_ipv6_cidr_blocks": {
                                "expression": {
                                    "references": [
                                        "aws_subnet.public"
                                    ]
                                },
                                "description": "List of IPv6 cidr_blocks of public subnets in an IPv6 enabled VPC"
                            },
                            "redshift_network_acl_arn": {
                                "expression": {
                                    "references": [
                                        "aws_network_acl.redshift[0].arn",
                                        "aws_network_acl.redshift[0]",
                                        "aws_network_acl.redshift"
                                    ]
                                },
                                "description": "ARN of the redshift network ACL"
                            },
                            "redshift_network_acl_id": {
                                "expression": {
                                    "references": [
                                        "aws_network_acl.redshift[0].id",
                                        "aws_network_acl.redshift[0]",
                                        "aws_network_acl.redshift"
                                    ]
                                },
                                "description": "ID of the redshift network ACL"
                            },
                            "redshift_public_route_table_association_ids": {
                                "expression": {
                                    "references": [
                                        "aws_route_table_association.redshift_public"
                                    ]
                                },
                                "description": "List of IDs of the public redshidt route table association"
                            },
                            "redshift_route_table_association_ids": {
                                "expression": {
                                    "references": [
                                        "aws_route_table_association.redshift"
                                    ]
                                },
                                "description": "List of IDs of the redshift route table association"
                            },
                            "redshift_route_table_ids": {
                                "expression": {
                                    "references": [
                                        "aws_route_table.redshift",
                                        "aws_route_table.redshift",
                                        "var.enable_public_redshift",
                                        "aws_route_table.public",
                                        "aws_route_table.private"
                                    ]
                                },
                                "description": "List of IDs of redshift route tables"
                            },
                            "redshift_subnet_arns": {
                                "expression": {
                                    "references": [
                                        "aws_subnet.redshift"
                                    ]
                                },
                                "description": "List of ARNs of redshift subnets"
                            },
                            "redshift_subnet_group": {
                                "expression": {
                                    "references": [
                                        "aws_redshift_subnet_group.redshift[0].id",
                                        "aws_redshift_subnet_group.redshift[0]",
                                        "aws_redshift_subnet_group.redshift"
                                    ]
                                },
                                "description": "ID of redshift subnet group"
                            },
                            "redshift_subnets": {
                                "expression": {
                                    "references": [
                                        "aws_subnet.redshift"
                                    ]
                                },
                                "description": "List of IDs of redshift subnets"
                            },
                            "redshift_subnets_cidr_blocks": {
                                "expression": {
                                    "references": [
                                        "aws_subnet.redshift"
                                    ]
                                },
                                "description": "List of cidr_blocks of redshift subnets"
                            },
                            "redshift_subnets_ipv6_cidr_blocks": {
                                "expression": {
                                    "references": [
                                        "aws_subnet.redshift"
                                    ]
                                },
                                "description": "List of IPv6 cidr_blocks of redshift subnets in an IPv6 enabled VPC"
                            },
                            "this_customer_gateway": {
                                "expression": {
                                    "references": [
                                        "aws_customer_gateway.this"
                                    ]
                                },
                                "description": "Map of Customer Gateway attributes"
                            },
                            "vgw_arn": {
                                "expression": {
                                    "references": [
                                        "aws_vpn_gateway.this[0].arn",
                                        "aws_vpn_gateway.this[0]",
                                        "aws_vpn_gateway.this"
                                    ]
                                },
                                "description": "The ARN of the VPN Gateway"
                            },
                            "vgw_id": {
                                "expression": {
                                    "references": [
                                        "aws_vpn_gateway.this[0].id",
                                        "aws_vpn_gateway.this[0]",
                                        "aws_vpn_gateway.this",
                                        "aws_vpn_gateway_attachment.this[0].vpn_gateway_id",
                                        "aws_vpn_gateway_attachment.this[0]",
                                        "aws_vpn_gateway_attachment.this"
                                    ]
                                },
                                "description": "The ID of the VPN Gateway"
                            },
                            "vpc_arn": {
                                "expression": {
                                    "references": [
                                        "aws_vpc.this[0].arn",
                                        "aws_vpc.this[0]",
                                        "aws_vpc.this"
                                    ]
                                },
                                "description": "The ARN of the VPC"
                            },
                            "vpc_cidr_block": {
                                "expression": {
                                    "references": [
                                        "aws_vpc.this[0].cidr_block",
                                        "aws_vpc.this[0]",
                                        "aws_vpc.this"
                                    ]
                                },
                                "description": "The CIDR block of the VPC"
                            },
                            "vpc_enable_dns_hostnames": {
                                "expression": {
                                    "references": [
                                        "aws_vpc.this[0].enable_dns_hostnames",
                                        "aws_vpc.this[0]",
                                        "aws_vpc.this"
                                    ]
                                },
                                "description": "Whether or not the VPC has DNS hostname support"
                            },
                            "vpc_enable_dns_support": {
                                "expression": {
                                    "references": [
                                        "aws_vpc.this[0].enable_dns_support",
                                        "aws_vpc.this[0]",
                                        "aws_vpc.this"
                                    ]
                                },
                                "description": "Whether or not the VPC has DNS support"
                            },
                            "vpc_flow_log_cloudwatch_iam_role_arn": {
                                "expression": {
                                    "references": [
                                        "local.flow_log_iam_role_arn"
                                    ]
                                },
                                "description": "The ARN of the IAM role used when pushing logs to Cloudwatch log group"
                            },
                            "vpc_flow_log_destination_arn": {
                                "expression": {
                                    "references": [
                                        "local.flow_log_destination_arn"
                                    ]
                                },
                                "description": "The ARN of the destination for VPC Flow Logs"
                            },
                            "vpc_flow_log_destination_type": {
                                "expression": {
                                    "references": [
                                        "var.flow_log_destination_type"
                                    ]
                                },
                                "description": "The type of the destination for VPC Flow Logs"
                            },
                            "vpc_flow_log_id": {
                                "expression": {
                                    "references": [
                                        "aws_flow_log.this[0].id",
                                        "aws_flow_log.this[0]",
                                        "aws_flow_log.this"
                                    ]
                                },
                                "description": "The ID of the Flow Log resource"
                            },
                            "vpc_id": {
                                "expression": {
                                    "references": [
                                        "aws_vpc.this[0].id",
                                        "aws_vpc.this[0]",
                                        "aws_vpc.this"
                                    ]
                                },
                                "description": "The ID of the VPC"
                            },
                            "vpc_instance_tenancy": {
                                "expression": {
                                    "references": [
                                        "aws_vpc.this[0].instance_tenancy",
                                        "aws_vpc.this[0]",
                                        "aws_vpc.this"
                                    ]
                                },
                                "description": "Tenancy of instances spin up within VPC"
                            },
                            "vpc_ipv6_association_id": {
                                "expression": {
                                    "references": [
                                        "aws_vpc.this[0].ipv6_association_id",
                                        "aws_vpc.this[0]",
                                        "aws_vpc.this"
                                    ]
                                },
                                "description": "The association ID for the IPv6 CIDR block"
                            },
                            "vpc_ipv6_cidr_block": {
                                "expression": {
                                    "references": [
                                        "aws_vpc.this[0].ipv6_cidr_block",
                                        "aws_vpc.this[0]",
                                        "aws_vpc.this"
                                    ]
                                },
                                "description": "The IPv6 CIDR block"
                            },
                            "vpc_main_route_table_id": {
                                "expression": {
                                    "references": [
                                        "aws_vpc.this[0].main_route_table_id",
                                        "aws_vpc.this[0]",
                                        "aws_vpc.this"
                                    ]
                                },
                                "description": "The ID of the main route table associated with this VPC"
                            },
                            "vpc_owner_id": {
                                "expression": {
                                    "references": [
                                        "aws_vpc.this[0].owner_id",
                                        "aws_vpc.this[0]",
                                        "aws_vpc.this"
                                    ]
                                },
                                "description": "The ID of the AWS account that owns the VPC"
                            },
                            "vpc_secondary_cidr_blocks": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_ipv4_cidr_block_association.this"
                                    ]
                                },
                                "description": "List of secondary CIDR blocks of the VPC"
                            }
                        },
                        "resources": [
                            {
                                "address": "aws_cloudwatch_log_group.flow_log",
                                "mode": "managed",
                                "type": "aws_cloudwatch_log_group",
                                "name": "flow_log",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "kms_key_id": {
                                        "references": [
                                            "var.flow_log_cloudwatch_log_group_kms_key_id"
                                        ]
                                    },
                                    "name": {
                                        "references": [
                                            "var.flow_log_cloudwatch_log_group_name_prefix",
                                            "local.vpc_id"
                                        ]
                                    },
                                    "retention_in_days": {
                                        "references": [
                                            "var.flow_log_cloudwatch_log_group_retention_in_days"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.tags",
                                            "var.vpc_flow_log_tags"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_flow_log_cloudwatch_log_group"
                                    ]
                                }
                            },
                            {
                                "address": "aws_customer_gateway.this",
                                "mode": "managed",
                                "type": "aws_customer_gateway",
                                "name": "this",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "bgp_asn": {
                                        "references": [
                                            "each.value[\"bgp_asn\"]",
                                            "each.value"
                                        ]
                                    },
                                    "device_name": {
                                        "references": [
                                            "each.value"
                                        ]
                                    },
                                    "ip_address": {
                                        "references": [
                                            "each.value[\"ip_address\"]",
                                            "each.value"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.name",
                                            "each.key",
                                            "var.tags",
                                            "var.customer_gateway_tags"
                                        ]
                                    },
                                    "type": {
                                        "constant_value": "ipsec.1"
                                    }
                                },
                                "schema_version": 0,
                                "for_each_expression": {
                                    "references": [
                                        "var.customer_gateways"
                                    ]
                                }
                            },
                            {
                                "address": "aws_db_subnet_group.database",
                                "mode": "managed",
                                "type": "aws_db_subnet_group",
                                "name": "database",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "description": {
                                        "references": [
                                            "var.name"
                                        ]
                                    },
                                    "name": {
                                        "references": [
                                            "var.database_subnet_group_name",
                                            "var.name"
                                        ]
                                    },
                                    "subnet_ids": {
                                        "references": [
                                            "aws_subnet.database"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.database_subnet_group_name",
                                            "var.name",
                                            "var.tags",
                                            "var.database_subnet_group_tags"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_vpc",
                                        "var.database_subnets",
                                        "var.create_database_subnet_group"
                                    ]
                                }
                            },
                            {
                                "address": "aws_default_network_acl.this",
                                "mode": "managed",
                                "type": "aws_default_network_acl",
                                "name": "this",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "default_network_acl_id": {
                                        "references": [
                                            "aws_vpc.this[0].default_network_acl_id",
                                            "aws_vpc.this[0]",
                                            "aws_vpc.this"
                                        ]
                                    },
                                    "subnet_ids": {
                                        "constant_value": null
                                    },
                                    "tags": {
                                        "references": [
                                            "var.default_network_acl_name",
                                            "var.name",
                                            "var.tags",
                                            "var.default_network_acl_tags"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_vpc",
                                        "var.manage_default_network_acl"
                                    ]
                                }
                            },
                            {
                                "address": "aws_default_route_table.default",
                                "mode": "managed",
                                "type": "aws_default_route_table",
                                "name": "default",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "default_route_table_id": {
                                        "references": [
                                            "aws_vpc.this[0].default_route_table_id",
                                            "aws_vpc.this[0]",
                                            "aws_vpc.this"
                                        ]
                                    },
                                    "propagating_vgws": {
                                        "references": [
                                            "var.default_route_table_propagating_vgws"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.default_route_table_name",
                                            "var.name",
                                            "var.tags",
                                            "var.default_route_table_tags"
                                        ]
                                    },
                                    "timeouts": {
                                        "create": {
                                            "constant_value": "5m"
                                        },
                                        "update": {
                                            "constant_value": "5m"
                                        }
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_vpc",
                                        "var.manage_default_route_table"
                                    ]
                                }
                            },
                            {
                                "address": "aws_default_security_group.this",
                                "mode": "managed",
                                "type": "aws_default_security_group",
                                "name": "this",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "tags": {
                                        "references": [
                                            "var.default_security_group_name",
                                            "var.name",
                                            "var.tags",
                                            "var.default_security_group_tags"
                                        ]
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "aws_vpc.this[0].id",
                                            "aws_vpc.this[0]",
                                            "aws_vpc.this"
                                        ]
                                    }
                                },
                                "schema_version": 1,
                                "count_expression": {
                                    "references": [
                                        "local.create_vpc",
                                        "var.manage_default_security_group"
                                    ]
                                }
                            },
                            {
                                "address": "aws_default_vpc.this",
                                "mode": "managed",
                                "type": "aws_default_vpc",
                                "name": "this",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "enable_classiclink": {
                                        "references": [
                                            "var.default_vpc_enable_classiclink"
                                        ]
                                    },
                                    "enable_dns_hostnames": {
                                        "references": [
                                            "var.default_vpc_enable_dns_hostnames"
                                        ]
                                    },
                                    "enable_dns_support": {
                                        "references": [
                                            "var.default_vpc_enable_dns_support"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.default_vpc_name",
                                            "var.tags",
                                            "var.default_vpc_tags"
                                        ]
                                    }
                                },
                                "schema_version": 1,
                                "count_expression": {
                                    "references": [
                                        "var.manage_default_vpc"
                                    ]
                                }
                            },
                            {
                                "address": "aws_egress_only_internet_gateway.this",
                                "mode": "managed",
                                "type": "aws_egress_only_internet_gateway",
                                "name": "this",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "tags": {
                                        "references": [
                                            "var.name",
                                            "var.tags",
                                            "var.igw_tags"
                                        ]
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_vpc",
                                        "var.create_egress_only_igw",
                                        "var.enable_ipv6",
                                        "local.max_subnet_length"
                                    ]
                                }
                            },
                            {
                                "address": "aws_eip.nat",
                                "mode": "managed",
                                "type": "aws_eip",
                                "name": "nat",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "tags": {
                                        "references": [
                                            "var.name",
                                            "var.azs",
                                            "var.single_nat_gateway",
                                            "count.index",
                                            "var.tags",
                                            "var.nat_eip_tags"
                                        ]
                                    },
                                    "vpc": {
                                        "constant_value": true
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_vpc",
                                        "var.enable_nat_gateway",
                                        "var.reuse_nat_ips",
                                        "local.nat_gateway_count"
                                    ]
                                }
                            },
                            {
                                "address": "aws_elasticache_subnet_group.elasticache",
                                "mode": "managed",
                                "type": "aws_elasticache_subnet_group",
                                "name": "elasticache",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "description": {
                                        "references": [
                                            "var.name"
                                        ]
                                    },
                                    "name": {
                                        "references": [
                                            "var.elasticache_subnet_group_name",
                                            "var.name"
                                        ]
                                    },
                                    "subnet_ids": {
                                        "references": [
                                            "aws_subnet.elasticache"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.elasticache_subnet_group_name",
                                            "var.name",
                                            "var.tags",
                                            "var.elasticache_subnet_group_tags"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_vpc",
                                        "var.elasticache_subnets",
                                        "var.create_elasticache_subnet_group"
                                    ]
                                }
                            },
                            {
                                "address": "aws_flow_log.this",
                                "mode": "managed",
                                "type": "aws_flow_log",
                                "name": "this",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "iam_role_arn": {
                                        "references": [
                                            "local.flow_log_iam_role_arn"
                                        ]
                                    },
                                    "log_destination": {
                                        "references": [
                                            "local.flow_log_destination_arn"
                                        ]
                                    },
                                    "log_destination_type": {
                                        "references": [
                                            "var.flow_log_destination_type"
                                        ]
                                    },
                                    "log_format": {
                                        "references": [
                                            "var.flow_log_log_format"
                                        ]
                                    },
                                    "max_aggregation_interval": {
                                        "references": [
                                            "var.flow_log_max_aggregation_interval"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.tags",
                                            "var.vpc_flow_log_tags"
                                        ]
                                    },
                                    "traffic_type": {
                                        "references": [
                                            "var.flow_log_traffic_type"
                                        ]
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.enable_flow_log"
                                    ]
                                }
                            },
                            {
                                "address": "aws_iam_policy.vpc_flow_log_cloudwatch",
                                "mode": "managed",
                                "type": "aws_iam_policy",
                                "name": "vpc_flow_log_cloudwatch",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "name_prefix": {
                                        "constant_value": "vpc-flow-log-to-cloudwatch-"
                                    },
                                    "policy": {
                                        "references": [
                                            "data.aws_iam_policy_document.vpc_flow_log_cloudwatch[0].json",
                                            "data.aws_iam_policy_document.vpc_flow_log_cloudwatch[0]",
                                            "data.aws_iam_policy_document.vpc_flow_log_cloudwatch"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.tags",
                                            "var.vpc_flow_log_tags"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_flow_log_cloudwatch_iam_role"
                                    ]
                                }
                            },
                            {
                                "address": "aws_iam_role.vpc_flow_log_cloudwatch",
                                "mode": "managed",
                                "type": "aws_iam_role",
                                "name": "vpc_flow_log_cloudwatch",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "assume_role_policy": {
                                        "references": [
                                            "data.aws_iam_policy_document.flow_log_cloudwatch_assume_role[0].json",
                                            "data.aws_iam_policy_document.flow_log_cloudwatch_assume_role[0]",
                                            "data.aws_iam_policy_document.flow_log_cloudwatch_assume_role"
                                        ]
                                    },
                                    "name_prefix": {
                                        "constant_value": "vpc-flow-log-role-"
                                    },
                                    "permissions_boundary": {
                                        "references": [
                                            "var.vpc_flow_log_permissions_boundary"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.tags",
                                            "var.vpc_flow_log_tags"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_flow_log_cloudwatch_iam_role"
                                    ]
                                }
                            },
                            {
                                "address": "aws_iam_role_policy_attachment.vpc_flow_log_cloudwatch",
                                "mode": "managed",
                                "type": "aws_iam_role_policy_attachment",
                                "name": "vpc_flow_log_cloudwatch",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "policy_arn": {
                                        "references": [
                                            "aws_iam_policy.vpc_flow_log_cloudwatch[0].arn",
                                            "aws_iam_policy.vpc_flow_log_cloudwatch[0]",
                                            "aws_iam_policy.vpc_flow_log_cloudwatch"
                                        ]
                                    },
                                    "role": {
                                        "references": [
                                            "aws_iam_role.vpc_flow_log_cloudwatch[0].name",
                                            "aws_iam_role.vpc_flow_log_cloudwatch[0]",
                                            "aws_iam_role.vpc_flow_log_cloudwatch"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_flow_log_cloudwatch_iam_role"
                                    ]
                                }
                            },
                            {
                                "address": "aws_internet_gateway.this",
                                "mode": "managed",
                                "type": "aws_internet_gateway",
                                "name": "this",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "tags": {
                                        "references": [
                                            "var.name",
                                            "var.tags",
                                            "var.igw_tags"
                                        ]
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_vpc",
                                        "var.create_igw",
                                        "var.public_subnets"
                                    ]
                                }
                            },
                            {
                                "address": "aws_nat_gateway.this",
                                "mode": "managed",
                                "type": "aws_nat_gateway",
                                "name": "this",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "allocation_id": {
                                        "references": [
                                            "local.nat_gateway_ips",
                                            "var.single_nat_gateway",
                                            "count.index"
                                        ]
                                    },
                                    "subnet_id": {
                                        "references": [
                                            "aws_subnet.public",
                                            "var.single_nat_gateway",
                                            "count.index"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.name",
                                            "var.azs",
                                            "var.single_nat_gateway",
                                            "count.index",
                                            "var.tags",
                                            "var.nat_gateway_tags"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_vpc",
                                        "var.enable_nat_gateway",
                                        "local.nat_gateway_count"
                                    ]
                                },
                                "depends_on": [
                                    "aws_internet_gateway.this"
                                ]
                            },
                            {
                                "address": "aws_network_acl.database",
                                "mode": "managed",
                                "type": "aws_network_acl",
                                "name": "database",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "subnet_ids": {
                                        "references": [
                                            "aws_subnet.database"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.name",
                                            "var.database_subnet_suffix",
                                            "var.tags",
                                            "var.database_acl_tags"
                                        ]
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_vpc",
                                        "var.database_dedicated_network_acl",
                                        "var.database_subnets"
                                    ]
                                }
                            },
                            {
                                "address": "aws_network_acl.elasticache",
                                "mode": "managed",
                                "type": "aws_network_acl",
                                "name": "elasticache",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "subnet_ids": {
                                        "references": [
                                            "aws_subnet.elasticache"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.name",
                                            "var.elasticache_subnet_suffix",
                                            "var.tags",
                                            "var.elasticache_acl_tags"
                                        ]
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_vpc",
                                        "var.elasticache_dedicated_network_acl",
                                        "var.elasticache_subnets"
                                    ]
                                }
                            },
                            {
                                "address": "aws_network_acl.intra",
                                "mode": "managed",
                                "type": "aws_network_acl",
                                "name": "intra",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "subnet_ids": {
                                        "references": [
                                            "aws_subnet.intra"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.name",
                                            "var.intra_subnet_suffix",
                                            "var.tags",
                                            "var.intra_acl_tags"
                                        ]
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_vpc",
                                        "var.intra_dedicated_network_acl",
                                        "var.intra_subnets"
                                    ]
                                }
                            },
                            {
                                "address": "aws_network_acl.outpost",
                                "mode": "managed",
                                "type": "aws_network_acl",
                                "name": "outpost",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "subnet_ids": {
                                        "references": [
                                            "aws_subnet.outpost"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.name",
                                            "var.outpost_subnet_suffix",
                                            "var.tags",
                                            "var.outpost_acl_tags"
                                        ]
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_vpc",
                                        "var.outpost_dedicated_network_acl",
                                        "var.outpost_subnets"
                                    ]
                                }
                            },
                            {
                                "address": "aws_network_acl.private",
                                "mode": "managed",
                                "type": "aws_network_acl",
                                "name": "private",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "subnet_ids": {
                                        "references": [
                                            "aws_subnet.private"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.name",
                                            "var.private_subnet_suffix",
                                            "var.tags",
                                            "var.private_acl_tags"
                                        ]
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_vpc",
                                        "var.private_dedicated_network_acl",
                                        "var.private_subnets"
                                    ]
                                }
                            },
                            {
                                "address": "aws_network_acl.public",
                                "mode": "managed",
                                "type": "aws_network_acl",
                                "name": "public",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "subnet_ids": {
                                        "references": [
                                            "aws_subnet.public"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.name",
                                            "var.public_subnet_suffix",
                                            "var.tags",
                                            "var.public_acl_tags"
                                        ]
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_vpc",
                                        "var.public_dedicated_network_acl",
                                        "var.public_subnets"
                                    ]
                                }
                            },
                            {
                                "address": "aws_network_acl.redshift",
                                "mode": "managed",
                                "type": "aws_network_acl",
                                "name": "redshift",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "subnet_ids": {
                                        "references": [
                                            "aws_subnet.redshift"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.name",
                                            "var.redshift_subnet_suffix",
                                            "var.tags",
                                            "var.redshift_acl_tags"
                                        ]
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_vpc",
                                        "var.redshift_dedicated_network_acl",
                                        "var.redshift_subnets"
                                    ]
                                }
                            },
                            {
                                "address": "aws_network_acl_rule.database_inbound",
                                "mode": "managed",
                                "type": "aws_network_acl_rule",
                                "name": "database_inbound",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "cidr_block": {
                                        "references": [
                                            "var.database_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "egress": {
                                        "constant_value": false
                                    },
                                    "from_port": {
                                        "references": [
                                            "var.database_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "icmp_code": {
                                        "references": [
                                            "var.database_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "icmp_type": {
                                        "references": [
                                            "var.database_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "ipv6_cidr_block": {
                                        "references": [
                                            "var.database_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "network_acl_id": {
                                        "references": [
                                            "aws_network_acl.database[0].id",
                                            "aws_network_acl.database[0]",
                                            "aws_network_acl.database"
                                        ]
                                    },
                                    "protocol": {
                                        "references": [
                                            "var.database_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "rule_action": {
                                        "references": [
                                            "var.database_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "rule_number": {
                                        "references": [
                                            "var.database_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "to_port": {
                                        "references": [
                                            "var.database_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_vpc",
                                        "var.database_dedicated_network_acl",
                                        "var.database_subnets",
                                        "var.database_inbound_acl_rules"
                                    ]
                                }
                            },
                            {
                                "address": "aws_network_acl_rule.database_outbound",
                                "mode": "managed",
                                "type": "aws_network_acl_rule",
                                "name": "database_outbound",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "cidr_block": {
                                        "references": [
                                            "var.database_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "egress": {
                                        "constant_value": true
                                    },
                                    "from_port": {
                                        "references": [
                                            "var.database_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "icmp_code": {
                                        "references": [
                                            "var.database_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "icmp_type": {
                                        "references": [
                                            "var.database_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "ipv6_cidr_block": {
                                        "references": [
                                            "var.database_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "network_acl_id": {
                                        "references": [
                                            "aws_network_acl.database[0].id",
                                            "aws_network_acl.database[0]",
                                            "aws_network_acl.database"
                                        ]
                                    },
                                    "protocol": {
                                        "references": [
                                            "var.database_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "rule_action": {
                                        "references": [
                                            "var.database_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "rule_number": {
                                        "references": [
                                            "var.database_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "to_port": {
                                        "references": [
                                            "var.database_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_vpc",
                                        "var.database_dedicated_network_acl",
                                        "var.database_subnets",
                                        "var.database_outbound_acl_rules"
                                    ]
                                }
                            },
                            {
                                "address": "aws_network_acl_rule.elasticache_inbound",
                                "mode": "managed",
                                "type": "aws_network_acl_rule",
                                "name": "elasticache_inbound",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "cidr_block": {
                                        "references": [
                                            "var.elasticache_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "egress": {
                                        "constant_value": false
                                    },
                                    "from_port": {
                                        "references": [
                                            "var.elasticache_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "icmp_code": {
                                        "references": [
                                            "var.elasticache_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "icmp_type": {
                                        "references": [
                                            "var.elasticache_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "ipv6_cidr_block": {
                                        "references": [
                                            "var.elasticache_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "network_acl_id": {
                                        "references": [
                                            "aws_network_acl.elasticache[0].id",
                                            "aws_network_acl.elasticache[0]",
                                            "aws_network_acl.elasticache"
                                        ]
                                    },
                                    "protocol": {
                                        "references": [
                                            "var.elasticache_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "rule_action": {
                                        "references": [
                                            "var.elasticache_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "rule_number": {
                                        "references": [
                                            "var.elasticache_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "to_port": {
                                        "references": [
                                            "var.elasticache_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_vpc",
                                        "var.elasticache_dedicated_network_acl",
                                        "var.elasticache_subnets",
                                        "var.elasticache_inbound_acl_rules"
                                    ]
                                }
                            },
                            {
                                "address": "aws_network_acl_rule.elasticache_outbound",
                                "mode": "managed",
                                "type": "aws_network_acl_rule",
                                "name": "elasticache_outbound",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "cidr_block": {
                                        "references": [
                                            "var.elasticache_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "egress": {
                                        "constant_value": true
                                    },
                                    "from_port": {
                                        "references": [
                                            "var.elasticache_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "icmp_code": {
                                        "references": [
                                            "var.elasticache_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "icmp_type": {
                                        "references": [
                                            "var.elasticache_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "ipv6_cidr_block": {
                                        "references": [
                                            "var.elasticache_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "network_acl_id": {
                                        "references": [
                                            "aws_network_acl.elasticache[0].id",
                                            "aws_network_acl.elasticache[0]",
                                            "aws_network_acl.elasticache"
                                        ]
                                    },
                                    "protocol": {
                                        "references": [
                                            "var.elasticache_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "rule_action": {
                                        "references": [
                                            "var.elasticache_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "rule_number": {
                                        "references": [
                                            "var.elasticache_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "to_port": {
                                        "references": [
                                            "var.elasticache_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_vpc",
                                        "var.elasticache_dedicated_network_acl",
                                        "var.elasticache_subnets",
                                        "var.elasticache_outbound_acl_rules"
                                    ]
                                }
                            },
                            {
                                "address": "aws_network_acl_rule.intra_inbound",
                                "mode": "managed",
                                "type": "aws_network_acl_rule",
                                "name": "intra_inbound",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "cidr_block": {
                                        "references": [
                                            "var.intra_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "egress": {
                                        "constant_value": false
                                    },
                                    "from_port": {
                                        "references": [
                                            "var.intra_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "icmp_code": {
                                        "references": [
                                            "var.intra_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "icmp_type": {
                                        "references": [
                                            "var.intra_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "ipv6_cidr_block": {
                                        "references": [
                                            "var.intra_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "network_acl_id": {
                                        "references": [
                                            "aws_network_acl.intra[0].id",
                                            "aws_network_acl.intra[0]",
                                            "aws_network_acl.intra"
                                        ]
                                    },
                                    "protocol": {
                                        "references": [
                                            "var.intra_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "rule_action": {
                                        "references": [
                                            "var.intra_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "rule_number": {
                                        "references": [
                                            "var.intra_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "to_port": {
                                        "references": [
                                            "var.intra_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_vpc",
                                        "var.intra_dedicated_network_acl",
                                        "var.intra_subnets",
                                        "var.intra_inbound_acl_rules"
                                    ]
                                }
                            },
                            {
                                "address": "aws_network_acl_rule.intra_outbound",
                                "mode": "managed",
                                "type": "aws_network_acl_rule",
                                "name": "intra_outbound",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "cidr_block": {
                                        "references": [
                                            "var.intra_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "egress": {
                                        "constant_value": true
                                    },
                                    "from_port": {
                                        "references": [
                                            "var.intra_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "icmp_code": {
                                        "references": [
                                            "var.intra_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "icmp_type": {
                                        "references": [
                                            "var.intra_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "ipv6_cidr_block": {
                                        "references": [
                                            "var.intra_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "network_acl_id": {
                                        "references": [
                                            "aws_network_acl.intra[0].id",
                                            "aws_network_acl.intra[0]",
                                            "aws_network_acl.intra"
                                        ]
                                    },
                                    "protocol": {
                                        "references": [
                                            "var.intra_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "rule_action": {
                                        "references": [
                                            "var.intra_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "rule_number": {
                                        "references": [
                                            "var.intra_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "to_port": {
                                        "references": [
                                            "var.intra_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_vpc",
                                        "var.intra_dedicated_network_acl",
                                        "var.intra_subnets",
                                        "var.intra_outbound_acl_rules"
                                    ]
                                }
                            },
                            {
                                "address": "aws_network_acl_rule.outpost_inbound",
                                "mode": "managed",
                                "type": "aws_network_acl_rule",
                                "name": "outpost_inbound",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "cidr_block": {
                                        "references": [
                                            "var.outpost_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "egress": {
                                        "constant_value": false
                                    },
                                    "from_port": {
                                        "references": [
                                            "var.outpost_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "icmp_code": {
                                        "references": [
                                            "var.outpost_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "icmp_type": {
                                        "references": [
                                            "var.outpost_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "ipv6_cidr_block": {
                                        "references": [
                                            "var.outpost_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "network_acl_id": {
                                        "references": [
                                            "aws_network_acl.outpost[0].id",
                                            "aws_network_acl.outpost[0]",
                                            "aws_network_acl.outpost"
                                        ]
                                    },
                                    "protocol": {
                                        "references": [
                                            "var.outpost_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "rule_action": {
                                        "references": [
                                            "var.outpost_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "rule_number": {
                                        "references": [
                                            "var.outpost_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "to_port": {
                                        "references": [
                                            "var.outpost_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_vpc",
                                        "var.outpost_dedicated_network_acl",
                                        "var.outpost_subnets",
                                        "var.outpost_inbound_acl_rules"
                                    ]
                                }
                            },
                            {
                                "address": "aws_network_acl_rule.outpost_outbound",
                                "mode": "managed",
                                "type": "aws_network_acl_rule",
                                "name": "outpost_outbound",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "cidr_block": {
                                        "references": [
                                            "var.outpost_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "egress": {
                                        "constant_value": true
                                    },
                                    "from_port": {
                                        "references": [
                                            "var.outpost_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "icmp_code": {
                                        "references": [
                                            "var.outpost_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "icmp_type": {
                                        "references": [
                                            "var.outpost_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "ipv6_cidr_block": {
                                        "references": [
                                            "var.outpost_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "network_acl_id": {
                                        "references": [
                                            "aws_network_acl.outpost[0].id",
                                            "aws_network_acl.outpost[0]",
                                            "aws_network_acl.outpost"
                                        ]
                                    },
                                    "protocol": {
                                        "references": [
                                            "var.outpost_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "rule_action": {
                                        "references": [
                                            "var.outpost_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "rule_number": {
                                        "references": [
                                            "var.outpost_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "to_port": {
                                        "references": [
                                            "var.outpost_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_vpc",
                                        "var.outpost_dedicated_network_acl",
                                        "var.outpost_subnets",
                                        "var.outpost_outbound_acl_rules"
                                    ]
                                }
                            },
                            {
                                "address": "aws_network_acl_rule.private_inbound",
                                "mode": "managed",
                                "type": "aws_network_acl_rule",
                                "name": "private_inbound",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "cidr_block": {
                                        "references": [
                                            "var.private_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "egress": {
                                        "constant_value": false
                                    },
                                    "from_port": {
                                        "references": [
                                            "var.private_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "icmp_code": {
                                        "references": [
                                            "var.private_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "icmp_type": {
                                        "references": [
                                            "var.private_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "ipv6_cidr_block": {
                                        "references": [
                                            "var.private_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "network_acl_id": {
                                        "references": [
                                            "aws_network_acl.private[0].id",
                                            "aws_network_acl.private[0]",
                                            "aws_network_acl.private"
                                        ]
                                    },
                                    "protocol": {
                                        "references": [
                                            "var.private_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "rule_action": {
                                        "references": [
                                            "var.private_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "rule_number": {
                                        "references": [
                                            "var.private_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "to_port": {
                                        "references": [
                                            "var.private_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_vpc",
                                        "var.private_dedicated_network_acl",
                                        "var.private_subnets",
                                        "var.private_inbound_acl_rules"
                                    ]
                                }
                            },
                            {
                                "address": "aws_network_acl_rule.private_outbound",
                                "mode": "managed",
                                "type": "aws_network_acl_rule",
                                "name": "private_outbound",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "cidr_block": {
                                        "references": [
                                            "var.private_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "egress": {
                                        "constant_value": true
                                    },
                                    "from_port": {
                                        "references": [
                                            "var.private_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "icmp_code": {
                                        "references": [
                                            "var.private_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "icmp_type": {
                                        "references": [
                                            "var.private_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "ipv6_cidr_block": {
                                        "references": [
                                            "var.private_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "network_acl_id": {
                                        "references": [
                                            "aws_network_acl.private[0].id",
                                            "aws_network_acl.private[0]",
                                            "aws_network_acl.private"
                                        ]
                                    },
                                    "protocol": {
                                        "references": [
                                            "var.private_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "rule_action": {
                                        "references": [
                                            "var.private_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "rule_number": {
                                        "references": [
                                            "var.private_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "to_port": {
                                        "references": [
                                            "var.private_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_vpc",
                                        "var.private_dedicated_network_acl",
                                        "var.private_subnets",
                                        "var.private_outbound_acl_rules"
                                    ]
                                }
                            },
                            {
                                "address": "aws_network_acl_rule.public_inbound",
                                "mode": "managed",
                                "type": "aws_network_acl_rule",
                                "name": "public_inbound",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "cidr_block": {
                                        "references": [
                                            "var.public_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "egress": {
                                        "constant_value": false
                                    },
                                    "from_port": {
                                        "references": [
                                            "var.public_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "icmp_code": {
                                        "references": [
                                            "var.public_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "icmp_type": {
                                        "references": [
                                            "var.public_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "ipv6_cidr_block": {
                                        "references": [
                                            "var.public_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "network_acl_id": {
                                        "references": [
                                            "aws_network_acl.public[0].id",
                                            "aws_network_acl.public[0]",
                                            "aws_network_acl.public"
                                        ]
                                    },
                                    "protocol": {
                                        "references": [
                                            "var.public_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "rule_action": {
                                        "references": [
                                            "var.public_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "rule_number": {
                                        "references": [
                                            "var.public_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "to_port": {
                                        "references": [
                                            "var.public_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_vpc",
                                        "var.public_dedicated_network_acl",
                                        "var.public_subnets",
                                        "var.public_inbound_acl_rules"
                                    ]
                                }
                            },
                            {
                                "address": "aws_network_acl_rule.public_outbound",
                                "mode": "managed",
                                "type": "aws_network_acl_rule",
                                "name": "public_outbound",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "cidr_block": {
                                        "references": [
                                            "var.public_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "egress": {
                                        "constant_value": true
                                    },
                                    "from_port": {
                                        "references": [
                                            "var.public_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "icmp_code": {
                                        "references": [
                                            "var.public_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "icmp_type": {
                                        "references": [
                                            "var.public_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "ipv6_cidr_block": {
                                        "references": [
                                            "var.public_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "network_acl_id": {
                                        "references": [
                                            "aws_network_acl.public[0].id",
                                            "aws_network_acl.public[0]",
                                            "aws_network_acl.public"
                                        ]
                                    },
                                    "protocol": {
                                        "references": [
                                            "var.public_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "rule_action": {
                                        "references": [
                                            "var.public_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "rule_number": {
                                        "references": [
                                            "var.public_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "to_port": {
                                        "references": [
                                            "var.public_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_vpc",
                                        "var.public_dedicated_network_acl",
                                        "var.public_subnets",
                                        "var.public_outbound_acl_rules"
                                    ]
                                }
                            },
                            {
                                "address": "aws_network_acl_rule.redshift_inbound",
                                "mode": "managed",
                                "type": "aws_network_acl_rule",
                                "name": "redshift_inbound",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "cidr_block": {
                                        "references": [
                                            "var.redshift_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "egress": {
                                        "constant_value": false
                                    },
                                    "from_port": {
                                        "references": [
                                            "var.redshift_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "icmp_code": {
                                        "references": [
                                            "var.redshift_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "icmp_type": {
                                        "references": [
                                            "var.redshift_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "ipv6_cidr_block": {
                                        "references": [
                                            "var.redshift_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "network_acl_id": {
                                        "references": [
                                            "aws_network_acl.redshift[0].id",
                                            "aws_network_acl.redshift[0]",
                                            "aws_network_acl.redshift"
                                        ]
                                    },
                                    "protocol": {
                                        "references": [
                                            "var.redshift_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "rule_action": {
                                        "references": [
                                            "var.redshift_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "rule_number": {
                                        "references": [
                                            "var.redshift_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "to_port": {
                                        "references": [
                                            "var.redshift_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_vpc",
                                        "var.redshift_dedicated_network_acl",
                                        "var.redshift_subnets",
                                        "var.redshift_inbound_acl_rules"
                                    ]
                                }
                            },
                            {
                                "address": "aws_network_acl_rule.redshift_outbound",
                                "mode": "managed",
                                "type": "aws_network_acl_rule",
                                "name": "redshift_outbound",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "cidr_block": {
                                        "references": [
                                            "var.redshift_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "egress": {
                                        "constant_value": true
                                    },
                                    "from_port": {
                                        "references": [
                                            "var.redshift_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "icmp_code": {
                                        "references": [
                                            "var.redshift_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "icmp_type": {
                                        "references": [
                                            "var.redshift_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "ipv6_cidr_block": {
                                        "references": [
                                            "var.redshift_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "network_acl_id": {
                                        "references": [
                                            "aws_network_acl.redshift[0].id",
                                            "aws_network_acl.redshift[0]",
                                            "aws_network_acl.redshift"
                                        ]
                                    },
                                    "protocol": {
                                        "references": [
                                            "var.redshift_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "rule_action": {
                                        "references": [
                                            "var.redshift_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "rule_number": {
                                        "references": [
                                            "var.redshift_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "to_port": {
                                        "references": [
                                            "var.redshift_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_vpc",
                                        "var.redshift_dedicated_network_acl",
                                        "var.redshift_subnets",
                                        "var.redshift_outbound_acl_rules"
                                    ]
                                }
                            },
                            {
                                "address": "aws_redshift_subnet_group.redshift",
                                "mode": "managed",
                                "type": "aws_redshift_subnet_group",
                                "name": "redshift",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "description": {
                                        "references": [
                                            "var.name"
                                        ]
                                    },
                                    "name": {
                                        "references": [
                                            "var.redshift_subnet_group_name",
                                            "var.name"
                                        ]
                                    },
                                    "subnet_ids": {
                                        "references": [
                                            "aws_subnet.redshift"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.redshift_subnet_group_name",
                                            "var.name",
                                            "var.tags",
                                            "var.redshift_subnet_group_tags"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_vpc",
                                        "var.redshift_subnets",
                                        "var.create_redshift_subnet_group"
                                    ]
                                }
                            },
                            {
                                "address": "aws_route.database_internet_gateway",
                                "mode": "managed",
                                "type": "aws_route",
                                "name": "database_internet_gateway",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "destination_cidr_block": {
                                        "constant_value": "0.0.0.0/0"
                                    },
                                    "gateway_id": {
                                        "references": [
                                            "aws_internet_gateway.this[0].id",
                                            "aws_internet_gateway.this[0]",
                                            "aws_internet_gateway.this"
                                        ]
                                    },
                                    "route_table_id": {
                                        "references": [
                                            "aws_route_table.database[0].id",
                                            "aws_route_table.database[0]",
                                            "aws_route_table.database"
                                        ]
                                    },
                                    "timeouts": {
                                        "create": {
                                            "constant_value": "5m"
                                        }
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_vpc",
                                        "var.create_igw",
                                        "var.create_database_subnet_route_table",
                                        "var.database_subnets",
                                        "var.create_database_internet_gateway_route",
                                        "var.create_database_nat_gateway_route"
                                    ]
                                }
                            },
                            {
                                "address": "aws_route.database_ipv6_egress",
                                "mode": "managed",
                                "type": "aws_route",
                                "name": "database_ipv6_egress",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "destination_ipv6_cidr_block": {
                                        "constant_value": "::/0"
                                    },
                                    "egress_only_gateway_id": {
                                        "references": [
                                            "aws_egress_only_internet_gateway.this[0].id",
                                            "aws_egress_only_internet_gateway.this[0]",
                                            "aws_egress_only_internet_gateway.this"
                                        ]
                                    },
                                    "route_table_id": {
                                        "references": [
                                            "aws_route_table.database[0].id",
                                            "aws_route_table.database[0]",
                                            "aws_route_table.database"
                                        ]
                                    },
                                    "timeouts": {
                                        "create": {
                                            "constant_value": "5m"
                                        }
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_vpc",
                                        "var.create_egress_only_igw",
                                        "var.enable_ipv6",
                                        "var.create_database_subnet_route_table",
                                        "var.database_subnets",
                                        "var.create_database_internet_gateway_route"
                                    ]
                                }
                            },
                            {
                                "address": "aws_route.database_nat_gateway",
                                "mode": "managed",
                                "type": "aws_route",
                                "name": "database_nat_gateway",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "destination_cidr_block": {
                                        "constant_value": "0.0.0.0/0"
                                    },
                                    "nat_gateway_id": {
                                        "references": [
                                            "aws_nat_gateway.this",
                                            "count.index"
                                        ]
                                    },
                                    "route_table_id": {
                                        "references": [
                                            "aws_route_table.database",
                                            "count.index"
                                        ]
                                    },
                                    "timeouts": {
                                        "create": {
                                            "constant_value": "5m"
                                        }
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_vpc",
                                        "var.create_database_subnet_route_table",
                                        "var.database_subnets",
                                        "var.create_database_internet_gateway_route",
                                        "var.create_database_nat_gateway_route",
                                        "var.enable_nat_gateway",
                                        "var.single_nat_gateway",
                                        "var.database_subnets"
                                    ]
                                }
                            },
                            {
                                "address": "aws_route.private_ipv6_egress",
                                "mode": "managed",
                                "type": "aws_route",
                                "name": "private_ipv6_egress",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "destination_ipv6_cidr_block": {
                                        "constant_value": "::/0"
                                    },
                                    "egress_only_gateway_id": {
                                        "references": [
                                            "aws_egress_only_internet_gateway.this"
                                        ]
                                    },
                                    "route_table_id": {
                                        "references": [
                                            "aws_route_table.private",
                                            "count.index"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_vpc",
                                        "var.create_egress_only_igw",
                                        "var.enable_ipv6",
                                        "var.private_subnets"
                                    ]
                                }
                            },
                            {
                                "address": "aws_route.private_nat_gateway",
                                "mode": "managed",
                                "type": "aws_route",
                                "name": "private_nat_gateway",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "destination_cidr_block": {
                                        "references": [
                                            "var.nat_gateway_destination_cidr_block"
                                        ]
                                    },
                                    "nat_gateway_id": {
                                        "references": [
                                            "aws_nat_gateway.this",
                                            "count.index"
                                        ]
                                    },
                                    "route_table_id": {
                                        "references": [
                                            "aws_route_table.private",
                                            "count.index"
                                        ]
                                    },
                                    "timeouts": {
                                        "create": {
                                            "constant_value": "5m"
                                        }
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_vpc",
                                        "var.enable_nat_gateway",
                                        "local.nat_gateway_count"
                                    ]
                                }
                            },
                            {
                                "address": "aws_route.public_internet_gateway",
                                "mode": "managed",
                                "type": "aws_route",
                                "name": "public_internet_gateway",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "destination_cidr_block": {
                                        "constant_value": "0.0.0.0/0"
                                    },
                                    "gateway_id": {
                                        "references": [
                                            "aws_internet_gateway.this[0].id",
                                            "aws_internet_gateway.this[0]",
                                            "aws_internet_gateway.this"
                                        ]
                                    },
                                    "route_table_id": {
                                        "references": [
                                            "aws_route_table.public[0].id",
                                            "aws_route_table.public[0]",
                                            "aws_route_table.public"
                                        ]
                                    },
                                    "timeouts": {
                                        "create": {
                                            "constant_value": "5m"
                                        }
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_vpc",
                                        "var.create_igw",
                                        "var.public_subnets"
                                    ]
                                }
                            },
                            {
                                "address": "aws_route.public_internet_gateway_ipv6",
                                "mode": "managed",
                                "type": "aws_route",
                                "name": "public_internet_gateway_ipv6",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "destination_ipv6_cidr_block": {
                                        "constant_value": "::/0"
                                    },
                                    "gateway_id": {
                                        "references": [
                                            "aws_internet_gateway.this[0].id",
                                            "aws_internet_gateway.this[0]",
                                            "aws_internet_gateway.this"
                                        ]
                                    },
                                    "route_table_id": {
                                        "references": [
                                            "aws_route_table.public[0].id",
                                            "aws_route_table.public[0]",
                                            "aws_route_table.public"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_vpc",
                                        "var.create_igw",
                                        "var.enable_ipv6",
                                        "var.public_subnets"
                                    ]
                                }
                            },
                            {
                                "address": "aws_route_table.database",
                                "mode": "managed",
                                "type": "aws_route_table",
                                "name": "database",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "tags": {
                                        "references": [
                                            "var.single_nat_gateway",
                                            "var.create_database_internet_gateway_route",
                                            "var.name",
                                            "var.database_subnet_suffix",
                                            "var.name",
                                            "var.database_subnet_suffix",
                                            "var.azs",
                                            "count.index",
                                            "var.tags",
                                            "var.database_route_table_tags"
                                        ]
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_vpc",
                                        "var.create_database_subnet_route_table",
                                        "var.database_subnets",
                                        "var.single_nat_gateway",
                                        "var.create_database_internet_gateway_route",
                                        "var.database_subnets"
                                    ]
                                }
                            },
                            {
                                "address": "aws_route_table.elasticache",
                                "mode": "managed",
                                "type": "aws_route_table",
                                "name": "elasticache",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "tags": {
                                        "references": [
                                            "var.name",
                                            "var.elasticache_subnet_suffix",
                                            "var.tags",
                                            "var.elasticache_route_table_tags"
                                        ]
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_vpc",
                                        "var.create_elasticache_subnet_route_table",
                                        "var.elasticache_subnets"
                                    ]
                                }
                            },
                            {
                                "address": "aws_route_table.intra",
                                "mode": "managed",
                                "type": "aws_route_table",
                                "name": "intra",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "tags": {
                                        "references": [
                                            "var.name",
                                            "var.intra_subnet_suffix",
                                            "var.tags",
                                            "var.intra_route_table_tags"
                                        ]
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_vpc",
                                        "var.intra_subnets"
                                    ]
                                }
                            },
                            {
                                "address": "aws_route_table.private",
                                "mode": "managed",
                                "type": "aws_route_table",
                                "name": "private",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "tags": {
                                        "references": [
                                            "var.single_nat_gateway",
                                            "var.name",
                                            "var.private_subnet_suffix",
                                            "var.name",
                                            "var.private_subnet_suffix",
                                            "var.azs",
                                            "count.index",
                                            "var.tags",
                                            "var.private_route_table_tags"
                                        ]
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_vpc",
                                        "local.max_subnet_length",
                                        "local.nat_gateway_count"
                                    ]
                                }
                            },
                            {
                                "address": "aws_route_table.public",
                                "mode": "managed",
                                "type": "aws_route_table",
                                "name": "public",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "tags": {
                                        "references": [
                                            "var.name",
                                            "var.public_subnet_suffix",
                                            "var.tags",
                                            "var.public_route_table_tags"
                                        ]
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_vpc",
                                        "var.public_subnets"
                                    ]
                                }
                            },
                            {
                                "address": "aws_route_table.redshift",
                                "mode": "managed",
                                "type": "aws_route_table",
                                "name": "redshift",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "tags": {
                                        "references": [
                                            "var.name",
                                            "var.redshift_subnet_suffix",
                                            "var.tags",
                                            "var.redshift_route_table_tags"
                                        ]
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_vpc",
                                        "var.create_redshift_subnet_route_table",
                                        "var.redshift_subnets"
                                    ]
                                }
                            },
                            {
                                "address": "aws_route_table_association.database",
                                "mode": "managed",
                                "type": "aws_route_table_association",
                                "name": "database",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "route_table_id": {
                                        "references": [
                                            "aws_route_table.database",
                                            "aws_route_table.private",
                                            "var.create_database_subnet_route_table",
                                            "var.single_nat_gateway",
                                            "var.create_database_internet_gateway_route",
                                            "count.index",
                                            "count.index"
                                        ]
                                    },
                                    "subnet_id": {
                                        "references": [
                                            "aws_subnet.database",
                                            "count.index"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_vpc",
                                        "var.database_subnets",
                                        "var.database_subnets"
                                    ]
                                }
                            },
                            {
                                "address": "aws_route_table_association.elasticache",
                                "mode": "managed",
                                "type": "aws_route_table_association",
                                "name": "elasticache",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "route_table_id": {
                                        "references": [
                                            "aws_route_table.elasticache",
                                            "aws_route_table.private",
                                            "var.single_nat_gateway",
                                            "var.create_elasticache_subnet_route_table",
                                            "count.index"
                                        ]
                                    },
                                    "subnet_id": {
                                        "references": [
                                            "aws_subnet.elasticache",
                                            "count.index"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_vpc",
                                        "var.elasticache_subnets",
                                        "var.elasticache_subnets"
                                    ]
                                }
                            },
                            {
                                "address": "aws_route_table_association.intra",
                                "mode": "managed",
                                "type": "aws_route_table_association",
                                "name": "intra",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "route_table_id": {
                                        "references": [
                                            "aws_route_table.intra"
                                        ]
                                    },
                                    "subnet_id": {
                                        "references": [
                                            "aws_subnet.intra",
                                            "count.index"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_vpc",
                                        "var.intra_subnets",
                                        "var.intra_subnets"
                                    ]
                                }
                            },
                            {
                                "address": "aws_route_table_association.outpost",
                                "mode": "managed",
                                "type": "aws_route_table_association",
                                "name": "outpost",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "route_table_id": {
                                        "references": [
                                            "aws_route_table.private",
                                            "var.single_nat_gateway",
                                            "count.index"
                                        ]
                                    },
                                    "subnet_id": {
                                        "references": [
                                            "aws_subnet.outpost",
                                            "count.index"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_vpc",
                                        "var.outpost_subnets",
                                        "var.outpost_subnets"
                                    ]
                                }
                            },
                            {
                                "address": "aws_route_table_association.private",
                                "mode": "managed",
                                "type": "aws_route_table_association",
                                "name": "private",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "route_table_id": {
                                        "references": [
                                            "aws_route_table.private",
                                            "var.single_nat_gateway",
                                            "count.index"
                                        ]
                                    },
                                    "subnet_id": {
                                        "references": [
                                            "aws_subnet.private",
                                            "count.index"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_vpc",
                                        "var.private_subnets",
                                        "var.private_subnets"
                                    ]
                                }
                            },
                            {
                                "address": "aws_route_table_association.public",
                                "mode": "managed",
                                "type": "aws_route_table_association",
                                "name": "public",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "route_table_id": {
                                        "references": [
                                            "aws_route_table.public[0].id",
                                            "aws_route_table.public[0]",
                                            "aws_route_table.public"
                                        ]
                                    },
                                    "subnet_id": {
                                        "references": [
                                            "aws_subnet.public",
                                            "count.index"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_vpc",
                                        "var.public_subnets",
                                        "var.public_subnets"
                                    ]
                                }
                            },
                            {
                                "address": "aws_route_table_association.redshift",
                                "mode": "managed",
                                "type": "aws_route_table_association",
                                "name": "redshift",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "route_table_id": {
                                        "references": [
                                            "aws_route_table.redshift",
                                            "aws_route_table.private",
                                            "var.single_nat_gateway",
                                            "var.create_redshift_subnet_route_table",
                                            "count.index"
                                        ]
                                    },
                                    "subnet_id": {
                                        "references": [
                                            "aws_subnet.redshift",
                                            "count.index"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_vpc",
                                        "var.redshift_subnets",
                                        "var.enable_public_redshift",
                                        "var.redshift_subnets"
                                    ]
                                }
                            },
                            {
                                "address": "aws_route_table_association.redshift_public",
                                "mode": "managed",
                                "type": "aws_route_table_association",
                                "name": "redshift_public",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "route_table_id": {
                                        "references": [
                                            "aws_route_table.redshift",
                                            "aws_route_table.public",
                                            "var.single_nat_gateway",
                                            "var.create_redshift_subnet_route_table",
                                            "count.index"
                                        ]
                                    },
                                    "subnet_id": {
                                        "references": [
                                            "aws_subnet.redshift",
                                            "count.index"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_vpc",
                                        "var.redshift_subnets",
                                        "var.enable_public_redshift",
                                        "var.redshift_subnets"
                                    ]
                                }
                            },
                            {
                                "address": "aws_subnet.database",
                                "mode": "managed",
                                "type": "aws_subnet",
                                "name": "database",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "assign_ipv6_address_on_creation": {
                                        "references": [
                                            "var.database_subnet_assign_ipv6_address_on_creation",
                                            "var.assign_ipv6_address_on_creation",
                                            "var.database_subnet_assign_ipv6_address_on_creation"
                                        ]
                                    },
                                    "availability_zone": {
                                        "references": [
                                            "var.azs",
                                            "count.index",
                                            "var.azs",
                                            "count.index"
                                        ]
                                    },
                                    "availability_zone_id": {
                                        "references": [
                                            "var.azs",
                                            "count.index",
                                            "var.azs",
                                            "count.index"
                                        ]
                                    },
                                    "cidr_block": {
                                        "references": [
                                            "var.database_subnets",
                                            "count.index"
                                        ]
                                    },
                                    "ipv6_cidr_block": {
                                        "references": [
                                            "var.enable_ipv6",
                                            "var.database_subnet_ipv6_prefixes",
                                            "aws_vpc.this[0].ipv6_cidr_block",
                                            "aws_vpc.this[0]",
                                            "aws_vpc.this",
                                            "var.database_subnet_ipv6_prefixes",
                                            "count.index"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.name",
                                            "var.database_subnet_suffix",
                                            "var.azs",
                                            "count.index",
                                            "var.tags",
                                            "var.database_subnet_tags"
                                        ]
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 1,
                                "count_expression": {
                                    "references": [
                                        "local.create_vpc",
                                        "var.database_subnets",
                                        "var.database_subnets"
                                    ]
                                }
                            },
                            {
                                "address": "aws_subnet.elasticache",
                                "mode": "managed",
                                "type": "aws_subnet",
                                "name": "elasticache",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "assign_ipv6_address_on_creation": {
                                        "references": [
                                            "var.elasticache_subnet_assign_ipv6_address_on_creation",
                                            "var.assign_ipv6_address_on_creation",
                                            "var.elasticache_subnet_assign_ipv6_address_on_creation"
                                        ]
                                    },
                                    "availability_zone": {
                                        "references": [
                                            "var.azs",
                                            "count.index",
                                            "var.azs",
                                            "count.index"
                                        ]
                                    },
                                    "availability_zone_id": {
                                        "references": [
                                            "var.azs",
                                            "count.index",
                                            "var.azs",
                                            "count.index"
                                        ]
                                    },
                                    "cidr_block": {
                                        "references": [
                                            "var.elasticache_subnets",
                                            "count.index"
                                        ]
                                    },
                                    "ipv6_cidr_block": {
                                        "references": [
                                            "var.enable_ipv6",
                                            "var.elasticache_subnet_ipv6_prefixes",
                                            "aws_vpc.this[0].ipv6_cidr_block",
                                            "aws_vpc.this[0]",
                                            "aws_vpc.this",
                                            "var.elasticache_subnet_ipv6_prefixes",
                                            "count.index"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.name",
                                            "var.elasticache_subnet_suffix",
                                            "var.azs",
                                            "count.index",
                                            "var.tags",
                                            "var.elasticache_subnet_tags"
                                        ]
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 1,
                                "count_expression": {
                                    "references": [
                                        "local.create_vpc",
                                        "var.elasticache_subnets",
                                        "var.elasticache_subnets"
                                    ]
                                }
                            },
                            {
                                "address": "aws_subnet.intra",
                                "mode": "managed",
                                "type": "aws_subnet",
                                "name": "intra",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "assign_ipv6_address_on_creation": {
                                        "references": [
                                            "var.intra_subnet_assign_ipv6_address_on_creation",
                                            "var.assign_ipv6_address_on_creation",
                                            "var.intra_subnet_assign_ipv6_address_on_creation"
                                        ]
                                    },
                                    "availability_zone": {
                                        "references": [
                                            "var.azs",
                                            "count.index",
                                            "var.azs",
                                            "count.index"
                                        ]
                                    },
                                    "availability_zone_id": {
                                        "references": [
                                            "var.azs",
                                            "count.index",
                                            "var.azs",
                                            "count.index"
                                        ]
                                    },
                                    "cidr_block": {
                                        "references": [
                                            "var.intra_subnets",
                                            "count.index"
                                        ]
                                    },
                                    "ipv6_cidr_block": {
                                        "references": [
                                            "var.enable_ipv6",
                                            "var.intra_subnet_ipv6_prefixes",
                                            "aws_vpc.this[0].ipv6_cidr_block",
                                            "aws_vpc.this[0]",
                                            "aws_vpc.this",
                                            "var.intra_subnet_ipv6_prefixes",
                                            "count.index"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.name",
                                            "var.intra_subnet_suffix",
                                            "var.azs",
                                            "count.index",
                                            "var.tags",
                                            "var.intra_subnet_tags"
                                        ]
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 1,
                                "count_expression": {
                                    "references": [
                                        "local.create_vpc",
                                        "var.intra_subnets",
                                        "var.intra_subnets"
                                    ]
                                }
                            },
                            {
                                "address": "aws_subnet.outpost",
                                "mode": "managed",
                                "type": "aws_subnet",
                                "name": "outpost",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "assign_ipv6_address_on_creation": {
                                        "references": [
                                            "var.outpost_subnet_assign_ipv6_address_on_creation",
                                            "var.assign_ipv6_address_on_creation",
                                            "var.outpost_subnet_assign_ipv6_address_on_creation"
                                        ]
                                    },
                                    "availability_zone": {
                                        "references": [
                                            "var.outpost_az"
                                        ]
                                    },
                                    "cidr_block": {
                                        "references": [
                                            "var.outpost_subnets",
                                            "count.index"
                                        ]
                                    },
                                    "ipv6_cidr_block": {
                                        "references": [
                                            "var.enable_ipv6",
                                            "var.outpost_subnet_ipv6_prefixes",
                                            "aws_vpc.this[0].ipv6_cidr_block",
                                            "aws_vpc.this[0]",
                                            "aws_vpc.this",
                                            "var.outpost_subnet_ipv6_prefixes",
                                            "count.index"
                                        ]
                                    },
                                    "outpost_arn": {
                                        "references": [
                                            "var.outpost_arn"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.name",
                                            "var.outpost_subnet_suffix",
                                            "var.outpost_az",
                                            "var.tags",
                                            "var.outpost_subnet_tags"
                                        ]
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 1,
                                "count_expression": {
                                    "references": [
                                        "local.create_vpc",
                                        "var.outpost_subnets",
                                        "var.outpost_subnets"
                                    ]
                                }
                            },
                            {
                                "address": "aws_subnet.private",
                                "mode": "managed",
                                "type": "aws_subnet",
                                "name": "private",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "assign_ipv6_address_on_creation": {
                                        "references": [
                                            "var.private_subnet_assign_ipv6_address_on_creation",
                                            "var.assign_ipv6_address_on_creation",
                                            "var.private_subnet_assign_ipv6_address_on_creation"
                                        ]
                                    },
                                    "availability_zone": {
                                        "references": [
                                            "var.azs",
                                            "count.index",
                                            "var.azs",
                                            "count.index"
                                        ]
                                    },
                                    "availability_zone_id": {
                                        "references": [
                                            "var.azs",
                                            "count.index",
                                            "var.azs",
                                            "count.index"
                                        ]
                                    },
                                    "cidr_block": {
                                        "references": [
                                            "var.private_subnets",
                                            "count.index"
                                        ]
                                    },
                                    "ipv6_cidr_block": {
                                        "references": [
                                            "var.enable_ipv6",
                                            "var.private_subnet_ipv6_prefixes",
                                            "aws_vpc.this[0].ipv6_cidr_block",
                                            "aws_vpc.this[0]",
                                            "aws_vpc.this",
                                            "var.private_subnet_ipv6_prefixes",
                                            "count.index"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.name",
                                            "var.private_subnet_suffix",
                                            "var.azs",
                                            "count.index",
                                            "var.tags",
                                            "var.private_subnet_tags"
                                        ]
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 1,
                                "count_expression": {
                                    "references": [
                                        "local.create_vpc",
                                        "var.private_subnets",
                                        "var.private_subnets"
                                    ]
                                }
                            },
                            {
                                "address": "aws_subnet.public",
                                "mode": "managed",
                                "type": "aws_subnet",
                                "name": "public",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "assign_ipv6_address_on_creation": {
                                        "references": [
                                            "var.public_subnet_assign_ipv6_address_on_creation",
                                            "var.assign_ipv6_address_on_creation",
                                            "var.public_subnet_assign_ipv6_address_on_creation"
                                        ]
                                    },
                                    "availability_zone": {
                                        "references": [
                                            "var.azs",
                                            "count.index",
                                            "var.azs",
                                            "count.index"
                                        ]
                                    },
                                    "availability_zone_id": {
                                        "references": [
                                            "var.azs",
                                            "count.index",
                                            "var.azs",
                                            "count.index"
                                        ]
                                    },
                                    "cidr_block": {
                                        "references": [
                                            "var.public_subnets",
                                            "count.index"
                                        ]
                                    },
                                    "ipv6_cidr_block": {
                                        "references": [
                                            "var.enable_ipv6",
                                            "var.public_subnet_ipv6_prefixes",
                                            "aws_vpc.this[0].ipv6_cidr_block",
                                            "aws_vpc.this[0]",
                                            "aws_vpc.this",
                                            "var.public_subnet_ipv6_prefixes",
                                            "count.index"
                                        ]
                                    },
                                    "map_public_ip_on_launch": {
                                        "references": [
                                            "var.map_public_ip_on_launch"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.name",
                                            "var.public_subnet_suffix",
                                            "var.azs",
                                            "count.index",
                                            "var.tags",
                                            "var.public_subnet_tags"
                                        ]
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 1,
                                "count_expression": {
                                    "references": [
                                        "local.create_vpc",
                                        "var.public_subnets",
                                        "var.one_nat_gateway_per_az",
                                        "var.public_subnets",
                                        "var.azs",
                                        "var.public_subnets"
                                    ]
                                }
                            },
                            {
                                "address": "aws_subnet.redshift",
                                "mode": "managed",
                                "type": "aws_subnet",
                                "name": "redshift",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "assign_ipv6_address_on_creation": {
                                        "references": [
                                            "var.redshift_subnet_assign_ipv6_address_on_creation",
                                            "var.assign_ipv6_address_on_creation",
                                            "var.redshift_subnet_assign_ipv6_address_on_creation"
                                        ]
                                    },
                                    "availability_zone": {
                                        "references": [
                                            "var.azs",
                                            "count.index",
                                            "var.azs",
                                            "count.index"
                                        ]
                                    },
                                    "availability_zone_id": {
                                        "references": [
                                            "var.azs",
                                            "count.index",
                                            "var.azs",
                                            "count.index"
                                        ]
                                    },
                                    "cidr_block": {
                                        "references": [
                                            "var.redshift_subnets",
                                            "count.index"
                                        ]
                                    },
                                    "ipv6_cidr_block": {
                                        "references": [
                                            "var.enable_ipv6",
                                            "var.redshift_subnet_ipv6_prefixes",
                                            "aws_vpc.this[0].ipv6_cidr_block",
                                            "aws_vpc.this[0]",
                                            "aws_vpc.this",
                                            "var.redshift_subnet_ipv6_prefixes",
                                            "count.index"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.name",
                                            "var.redshift_subnet_suffix",
                                            "var.azs",
                                            "count.index",
                                            "var.tags",
                                            "var.redshift_subnet_tags"
                                        ]
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 1,
                                "count_expression": {
                                    "references": [
                                        "local.create_vpc",
                                        "var.redshift_subnets",
                                        "var.redshift_subnets"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpc.this",
                                "mode": "managed",
                                "type": "aws_vpc",
                                "name": "this",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "assign_generated_ipv6_cidr_block": {
                                        "references": [
                                            "var.enable_ipv6"
                                        ]
                                    },
                                    "cidr_block": {
                                        "references": [
                                            "var.cidr"
                                        ]
                                    },
                                    "enable_classiclink": {
                                        "references": [
                                            "var.enable_classiclink"
                                        ]
                                    },
                                    "enable_classiclink_dns_support": {
                                        "references": [
                                            "var.enable_classiclink_dns_support"
                                        ]
                                    },
                                    "enable_dns_hostnames": {
                                        "references": [
                                            "var.enable_dns_hostnames"
                                        ]
                                    },
                                    "enable_dns_support": {
                                        "references": [
                                            "var.enable_dns_support"
                                        ]
                                    },
                                    "instance_tenancy": {
                                        "references": [
                                            "var.instance_tenancy"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.name",
                                            "var.tags",
                                            "var.vpc_tags"
                                        ]
                                    }
                                },
                                "schema_version": 1,
                                "count_expression": {
                                    "references": [
                                        "local.create_vpc"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpc_dhcp_options.this",
                                "mode": "managed",
                                "type": "aws_vpc_dhcp_options",
                                "name": "this",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "domain_name": {
                                        "references": [
                                            "var.dhcp_options_domain_name"
                                        ]
                                    },
                                    "domain_name_servers": {
                                        "references": [
                                            "var.dhcp_options_domain_name_servers"
                                        ]
                                    },
                                    "netbios_name_servers": {
                                        "references": [
                                            "var.dhcp_options_netbios_name_servers"
                                        ]
                                    },
                                    "netbios_node_type": {
                                        "references": [
                                            "var.dhcp_options_netbios_node_type"
                                        ]
                                    },
                                    "ntp_servers": {
                                        "references": [
                                            "var.dhcp_options_ntp_servers"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.name",
                                            "var.tags",
                                            "var.dhcp_options_tags"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_vpc",
                                        "var.enable_dhcp_options"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpc_dhcp_options_association.this",
                                "mode": "managed",
                                "type": "aws_vpc_dhcp_options_association",
                                "name": "this",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "dhcp_options_id": {
                                        "references": [
                                            "aws_vpc_dhcp_options.this[0].id",
                                            "aws_vpc_dhcp_options.this[0]",
                                            "aws_vpc_dhcp_options.this"
                                        ]
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_vpc",
                                        "var.enable_dhcp_options"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpc_ipv4_cidr_block_association.this",
                                "mode": "managed",
                                "type": "aws_vpc_ipv4_cidr_block_association",
                                "name": "this",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "cidr_block": {
                                        "references": [
                                            "var.secondary_cidr_blocks",
                                            "count.index"
                                        ]
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "aws_vpc.this[0].id",
                                            "aws_vpc.this[0]",
                                            "aws_vpc.this"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_vpc",
                                        "var.secondary_cidr_blocks",
                                        "var.secondary_cidr_blocks"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpn_gateway.this",
                                "mode": "managed",
                                "type": "aws_vpn_gateway",
                                "name": "this",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "amazon_side_asn": {
                                        "references": [
                                            "var.amazon_side_asn"
                                        ]
                                    },
                                    "availability_zone": {
                                        "references": [
                                            "var.vpn_gateway_az"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.name",
                                            "var.tags",
                                            "var.vpn_gateway_tags"
                                        ]
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_vpc",
                                        "var.enable_vpn_gateway"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpn_gateway_attachment.this",
                                "mode": "managed",
                                "type": "aws_vpn_gateway_attachment",
                                "name": "this",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    },
                                    "vpn_gateway_id": {
                                        "references": [
                                            "var.vpn_gateway_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.vpn_gateway_id"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpn_gateway_route_propagation.intra",
                                "mode": "managed",
                                "type": "aws_vpn_gateway_route_propagation",
                                "name": "intra",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "route_table_id": {
                                        "references": [
                                            "aws_route_table.intra",
                                            "count.index"
                                        ]
                                    },
                                    "vpn_gateway_id": {
                                        "references": [
                                            "aws_vpn_gateway.this",
                                            "aws_vpn_gateway_attachment.this",
                                            "count.index"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_vpc",
                                        "var.propagate_intra_route_tables_vgw",
                                        "var.enable_vpn_gateway",
                                        "var.vpn_gateway_id",
                                        "var.intra_subnets"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpn_gateway_route_propagation.private",
                                "mode": "managed",
                                "type": "aws_vpn_gateway_route_propagation",
                                "name": "private",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "route_table_id": {
                                        "references": [
                                            "aws_route_table.private",
                                            "count.index"
                                        ]
                                    },
                                    "vpn_gateway_id": {
                                        "references": [
                                            "aws_vpn_gateway.this",
                                            "aws_vpn_gateway_attachment.this",
                                            "count.index"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_vpc",
                                        "var.propagate_private_route_tables_vgw",
                                        "var.enable_vpn_gateway",
                                        "var.vpn_gateway_id",
                                        "var.private_subnets"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpn_gateway_route_propagation.public",
                                "mode": "managed",
                                "type": "aws_vpn_gateway_route_propagation",
                                "name": "public",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "route_table_id": {
                                        "references": [
                                            "aws_route_table.public",
                                            "count.index"
                                        ]
                                    },
                                    "vpn_gateway_id": {
                                        "references": [
                                            "aws_vpn_gateway.this",
                                            "aws_vpn_gateway_attachment.this",
                                            "count.index"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_vpc",
                                        "var.propagate_public_route_tables_vgw",
                                        "var.enable_vpn_gateway",
                                        "var.vpn_gateway_id"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_iam_policy_document.flow_log_cloudwatch_assume_role",
                                "mode": "data",
                                "type": "aws_iam_policy_document",
                                "name": "flow_log_cloudwatch_assume_role",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "statement": [
                                        {
                                            "actions": {
                                                "constant_value": [
                                                    "sts:AssumeRole"
                                                ]
                                            },
                                            "effect": {
                                                "constant_value": "Allow"
                                            },
                                            "principals": [
                                                {
                                                    "identifiers": {
                                                        "constant_value": [
                                                            "vpc-flow-logs.amazonaws.com"
                                                        ]
                                                    },
                                                    "type": {
                                                        "constant_value": "Service"
                                                    }
                                                }
                                            ],
                                            "sid": {
                                                "constant_value": "AWSVPCFlowLogsAssumeRole"
                                            }
                                        }
                                    ]
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_flow_log_cloudwatch_iam_role"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_iam_policy_document.vpc_flow_log_cloudwatch",
                                "mode": "data",
                                "type": "aws_iam_policy_document",
                                "name": "vpc_flow_log_cloudwatch",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "statement": [
                                        {
                                            "actions": {
                                                "constant_value": [
                                                    "logs:CreateLogStream",
                                                    "logs:PutLogEvents",
                                                    "logs:DescribeLogGroups",
                                                    "logs:DescribeLogStreams"
                                                ]
                                            },
                                            "effect": {
                                                "constant_value": "Allow"
                                            },
                                            "resources": {
                                                "constant_value": [
                                                    "*"
                                                ]
                                            },
                                            "sid": {
                                                "constant_value": "AWSVPCFlowLogsPushToCloudWatch"
                                            }
                                        }
                                    ]
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_flow_log_cloudwatch_iam_role"
                                    ]
                                }
                            }
                        ],
                        "variables": {
                            "amazon_side_asn": {
                                "default": "64512",
                                "description": "The Autonomous System Number (ASN) for the Amazon side of the gateway. By default the virtual private gateway is created with the current default Amazon ASN."
                            },
                            "assign_ipv6_address_on_creation": {
                                "default": false,
                                "description": "Assign IPv6 address on subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch"
                            },
                            "azs": {
                                "default": [],
                                "description": "A list of availability zones names or ids in the region"
                            },
                            "cidr": {
                                "default": "0.0.0.0/0",
                                "description": "The CIDR block for the VPC. Default value is a valid CIDR, but not acceptable by AWS and should be overridden"
                            },
                            "create_database_internet_gateway_route": {
                                "default": false,
                                "description": "Controls if an internet gateway route for public database access should be created"
                            },
                            "create_database_nat_gateway_route": {
                                "default": false,
                                "description": "Controls if a nat gateway route should be created to give internet access to the database subnets"
                            },
                            "create_database_subnet_group": {
                                "default": true,
                                "description": "Controls if database subnet group should be created (n.b. database_subnets must also be set)"
                            },
                            "create_database_subnet_route_table": {
                                "default": false,
                                "description": "Controls if separate route table for database should be created"
                            },
                            "create_egress_only_igw": {
                                "default": true,
                                "description": "Controls if an Egress Only Internet Gateway is created and its related routes."
                            },
                            "create_elasticache_subnet_group": {
                                "default": true,
                                "description": "Controls if elasticache subnet group should be created"
                            },
                            "create_elasticache_subnet_route_table": {
                                "default": false,
                                "description": "Controls if separate route table for elasticache should be created"
                            },
                            "create_flow_log_cloudwatch_iam_role": {
                                "default": false,
                                "description": "Whether to create IAM role for VPC Flow Logs"
                            },
                            "create_flow_log_cloudwatch_log_group": {
                                "default": false,
                                "description": "Whether to create CloudWatch log group for VPC Flow Logs"
                            },
                            "create_igw": {
                                "default": true,
                                "description": "Controls if an Internet Gateway is created for public subnets and the related routes that connect them."
                            },
                            "create_redshift_subnet_group": {
                                "default": true,
                                "description": "Controls if redshift subnet group should be created"
                            },
                            "create_redshift_subnet_route_table": {
                                "default": false,
                                "description": "Controls if separate route table for redshift should be created"
                            },
                            "create_vpc": {
                                "default": true,
                                "description": "Controls if VPC should be created (it affects almost all resources)"
                            },
                            "customer_gateway_tags": {
                                "default": {},
                                "description": "Additional tags for the Customer Gateway"
                            },
                            "customer_gateways": {
                                "default": {},
                                "description": "Maps of Customer Gateway's attributes (BGP ASN and Gateway's Internet-routable external IP address)"
                            },
                            "database_acl_tags": {
                                "default": {},
                                "description": "Additional tags for the database subnets network ACL"
                            },
                            "database_dedicated_network_acl": {
                                "default": false,
                                "description": "Whether to use dedicated network ACL (not default) and custom rules for database subnets"
                            },
                            "database_inbound_acl_rules": {
                                "default": [
                                    {
                                        "cidr_block": "0.0.0.0/0",
                                        "from_port": "0",
                                        "protocol": "-1",
                                        "rule_action": "allow",
                                        "rule_number": "100",
                                        "to_port": "0"
                                    }
                                ],
                                "description": "Database subnets inbound network ACL rules"
                            },
                            "database_outbound_acl_rules": {
                                "default": [
                                    {
                                        "cidr_block": "0.0.0.0/0",
                                        "from_port": "0",
                                        "protocol": "-1",
                                        "rule_action": "allow",
                                        "rule_number": "100",
                                        "to_port": "0"
                                    }
                                ],
                                "description": "Database subnets outbound network ACL rules"
                            },
                            "database_route_table_tags": {
                                "default": {},
                                "description": "Additional tags for the database route tables"
                            },
                            "database_subnet_assign_ipv6_address_on_creation": {
                                "default": null,
                                "description": "Assign IPv6 address on database subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch"
                            },
                            "database_subnet_group_name": {
                                "default": null,
                                "description": "Name of database subnet group"
                            },
                            "database_subnet_group_tags": {
                                "default": {},
                                "description": "Additional tags for the database subnet group"
                            },
                            "database_subnet_ipv6_prefixes": {
                                "default": [],
                                "description": "Assigns IPv6 database subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
                            },
                            "database_subnet_suffix": {
                                "default": "db",
                                "description": "Suffix to append to database subnets name"
                            },
                            "database_subnet_tags": {
                                "default": {},
                                "description": "Additional tags for the database subnets"
                            },
                            "database_subnets": {
                                "default": [],
                                "description": "A list of database subnets"
                            },
                            "default_network_acl_egress": {
                                "default": [
                                    {
                                        "action": "allow",
                                        "cidr_block": "0.0.0.0/0",
                                        "from_port": "0",
                                        "protocol": "-1",
                                        "rule_no": "100",
                                        "to_port": "0"
                                    },
                                    {
                                        "action": "allow",
                                        "from_port": "0",
                                        "ipv6_cidr_block": "::/0",
                                        "protocol": "-1",
                                        "rule_no": "101",
                                        "to_port": "0"
                                    }
                                ],
                                "description": "List of maps of egress rules to set on the Default Network ACL"
                            },
                            "default_network_acl_ingress": {
                                "default": [
                                    {
                                        "action": "allow",
                                        "cidr_block": "0.0.0.0/0",
                                        "from_port": "0",
                                        "protocol": "-1",
                                        "rule_no": "100",
                                        "to_port": "0"
                                    },
                                    {
                                        "action": "allow",
                                        "from_port": "0",
                                        "ipv6_cidr_block": "::/0",
                                        "protocol": "-1",
                                        "rule_no": "101",
                                        "to_port": "0"
                                    }
                                ],
                                "description": "List of maps of ingress rules to set on the Default Network ACL"
                            },
                            "default_network_acl_name": {
                                "default": null,
                                "description": "Name to be used on the Default Network ACL"
                            },
                            "default_network_acl_tags": {
                                "default": {},
                                "description": "Additional tags for the Default Network ACL"
                            },
                            "default_route_table_name": {
                                "default": null,
                                "description": "Name to be used on the default route table"
                            },
                            "default_route_table_propagating_vgws": {
                                "default": [],
                                "description": "List of virtual gateways for propagation"
                            },
                            "default_route_table_routes": {
                                "default": [],
                                "description": "Configuration block of routes. See https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/default_route_table#route"
                            },
                            "default_route_table_tags": {
                                "default": {},
                                "description": "Additional tags for the default route table"
                            },
                            "default_security_group_egress": {
                                "default": [],
                                "description": "List of maps of egress rules to set on the default security group"
                            },
                            "default_security_group_ingress": {
                                "default": [],
                                "description": "List of maps of ingress rules to set on the default security group"
                            },
                            "default_security_group_name": {
                                "default": null,
                                "description": "Name to be used on the default security group"
                            },
                            "default_security_group_tags": {
                                "default": {},
                                "description": "Additional tags for the default security group"
                            },
                            "default_vpc_enable_classiclink": {
                                "default": false,
                                "description": "Should be true to enable ClassicLink in the Default VPC"
                            },
                            "default_vpc_enable_dns_hostnames": {
                                "default": false,
                                "description": "Should be true to enable DNS hostnames in the Default VPC"
                            },
                            "default_vpc_enable_dns_support": {
                                "default": true,
                                "description": "Should be true to enable DNS support in the Default VPC"
                            },
                            "default_vpc_name": {
                                "default": null,
                                "description": "Name to be used on the Default VPC"
                            },
                            "default_vpc_tags": {
                                "default": {},
                                "description": "Additional tags for the Default VPC"
                            },
                            "dhcp_options_domain_name": {
                                "default": "",
                                "description": "Specifies DNS name for DHCP options set (requires enable_dhcp_options set to true)"
                            },
                            "dhcp_options_domain_name_servers": {
                                "default": [
                                    "AmazonProvidedDNS"
                                ],
                                "description": "Specify a list of DNS server addresses for DHCP options set, default to AWS provided (requires enable_dhcp_options set to true)"
                            },
                            "dhcp_options_netbios_name_servers": {
                                "default": [],
                                "description": "Specify a list of netbios servers for DHCP options set (requires enable_dhcp_options set to true)"
                            },
                            "dhcp_options_netbios_node_type": {
                                "default": "",
                                "description": "Specify netbios node_type for DHCP options set (requires enable_dhcp_options set to true)"
                            },
                            "dhcp_options_ntp_servers": {
                                "default": [],
                                "description": "Specify a list of NTP servers for DHCP options set (requires enable_dhcp_options set to true)"
                            },
                            "dhcp_options_tags": {
                                "default": {},
                                "description": "Additional tags for the DHCP option set (requires enable_dhcp_options set to true)"
                            },
                            "elasticache_acl_tags": {
                                "default": {},
                                "description": "Additional tags for the elasticache subnets network ACL"
                            },
                            "elasticache_dedicated_network_acl": {
                                "default": false,
                                "description": "Whether to use dedicated network ACL (not default) and custom rules for elasticache subnets"
                            },
                            "elasticache_inbound_acl_rules": {
                                "default": [
                                    {
                                        "cidr_block": "0.0.0.0/0",
                                        "from_port": "0",
                                        "protocol": "-1",
                                        "rule_action": "allow",
                                        "rule_number": "100",
                                        "to_port": "0"
                                    }
                                ],
                                "description": "Elasticache subnets inbound network ACL rules"
                            },
                            "elasticache_outbound_acl_rules": {
                                "default": [
                                    {
                                        "cidr_block": "0.0.0.0/0",
                                        "from_port": "0",
                                        "protocol": "-1",
                                        "rule_action": "allow",
                                        "rule_number": "100",
                                        "to_port": "0"
                                    }
                                ],
                                "description": "Elasticache subnets outbound network ACL rules"
                            },
                            "elasticache_route_table_tags": {
                                "default": {},
                                "description": "Additional tags for the elasticache route tables"
                            },
                            "elasticache_subnet_assign_ipv6_address_on_creation": {
                                "default": null,
                                "description": "Assign IPv6 address on elasticache subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch"
                            },
                            "elasticache_subnet_group_name": {
                                "default": null,
                                "description": "Name of elasticache subnet group"
                            },
                            "elasticache_subnet_group_tags": {
                                "default": {},
                                "description": "Additional tags for the elasticache subnet group"
                            },
                            "elasticache_subnet_ipv6_prefixes": {
                                "default": [],
                                "description": "Assigns IPv6 elasticache subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
                            },
                            "elasticache_subnet_suffix": {
                                "default": "elasticache",
                                "description": "Suffix to append to elasticache subnets name"
                            },
                            "elasticache_subnet_tags": {
                                "default": {},
                                "description": "Additional tags for the elasticache subnets"
                            },
                            "elasticache_subnets": {
                                "default": [],
                                "description": "A list of elasticache subnets"
                            },
                            "enable_classiclink": {
                                "default": null,
                                "description": "Should be true to enable ClassicLink for the VPC. Only valid in regions and accounts that support EC2 Classic."
                            },
                            "enable_classiclink_dns_support": {
                                "default": null,
                                "description": "Should be true to enable ClassicLink DNS Support for the VPC. Only valid in regions and accounts that support EC2 Classic."
                            },
                            "enable_dhcp_options": {
                                "default": false,
                                "description": "Should be true if you want to specify a DHCP options set with a custom domain name, DNS servers, NTP servers, netbios servers, and/or netbios server type"
                            },
                            "enable_dns_hostnames": {
                                "default": false,
                                "description": "Should be true to enable DNS hostnames in the VPC"
                            },
                            "enable_dns_support": {
                                "default": true,
                                "description": "Should be true to enable DNS support in the VPC"
                            },
                            "enable_flow_log": {
                                "default": false,
                                "description": "Whether or not to enable VPC Flow Logs"
                            },
                            "enable_ipv6": {
                                "default": false,
                                "description": "Requests an Amazon-provided IPv6 CIDR block with a /56 prefix length for the VPC. You cannot specify the range of IP addresses, or the size of the CIDR block."
                            },
                            "enable_nat_gateway": {
                                "default": false,
                                "description": "Should be true if you want to provision NAT Gateways for each of your private networks"
                            },
                            "enable_public_redshift": {
                                "default": false,
                                "description": "Controls if redshift should have public routing table"
                            },
                            "enable_vpn_gateway": {
                                "default": false,
                                "description": "Should be true if you want to create a new VPN Gateway resource and attach it to the VPC"
                            },
                            "external_nat_ip_ids": {
                                "default": [],
                                "description": "List of EIP IDs to be assigned to the NAT Gateways (used in combination with reuse_nat_ips)"
                            },
                            "external_nat_ips": {
                                "default": [],
                                "description": "List of EIPs to be used for `nat_public_ips` output (used in combination with reuse_nat_ips and external_nat_ip_ids)"
                            },
                            "flow_log_cloudwatch_iam_role_arn": {
                                "default": "",
                                "description": "The ARN for the IAM role that's used to post flow logs to a CloudWatch Logs log group. When flow_log_destination_arn is set to ARN of Cloudwatch Logs, this argument needs to be provided."
                            },
                            "flow_log_cloudwatch_log_group_kms_key_id": {
                                "default": null,
                                "description": "The ARN of the KMS Key to use when encrypting log data for VPC flow logs."
                            },
                            "flow_log_cloudwatch_log_group_name_prefix": {
                                "default": "/aws/vpc-flow-log/",
                                "description": "Specifies the name prefix of CloudWatch Log Group for VPC flow logs."
                            },
                            "flow_log_cloudwatch_log_group_retention_in_days": {
                                "default": null,
                                "description": "Specifies the number of days you want to retain log events in the specified log group for VPC flow logs."
                            },
                            "flow_log_destination_arn": {
                                "default": "",
                                "description": "The ARN of the CloudWatch log group or S3 bucket where VPC Flow Logs will be pushed. If this ARN is a S3 bucket the appropriate permissions need to be set on that bucket's policy. When create_flow_log_cloudwatch_log_group is set to false this argument must be provided."
                            },
                            "flow_log_destination_type": {
                                "default": "cloud-watch-logs",
                                "description": "Type of flow log destination. Can be s3 or cloud-watch-logs."
                            },
                            "flow_log_file_format": {
                                "default": "plain-text",
                                "description": "(Optional) The format for the flow log. Valid values: `plain-text`, `parquet`."
                            },
                            "flow_log_hive_compatible_partitions": {
                                "default": false,
                                "description": "(Optional) Indicates whether to use Hive-compatible prefixes for flow logs stored in Amazon S3."
                            },
                            "flow_log_log_format": {
                                "default": null,
                                "description": "The fields to include in the flow log record, in the order in which they should appear."
                            },
                            "flow_log_max_aggregation_interval": {
                                "default": 600,
                                "description": "The maximum interval of time during which a flow of packets is captured and aggregated into a flow log record. Valid Values: `60` seconds or `600` seconds."
                            },
                            "flow_log_per_hour_partition": {
                                "default": false,
                                "description": "(Optional) Indicates whether to partition the flow log per hour. This reduces the cost and response time for queries."
                            },
                            "flow_log_traffic_type": {
                                "default": "ALL",
                                "description": "The type of traffic to capture. Valid values: ACCEPT, REJECT, ALL."
                            },
                            "igw_tags": {
                                "default": {},
                                "description": "Additional tags for the internet gateway"
                            },
                            "instance_tenancy": {
                                "default": "default",
                                "description": "A tenancy option for instances launched into the VPC"
                            },
                            "intra_acl_tags": {
                                "default": {},
                                "description": "Additional tags for the intra subnets network ACL"
                            },
                            "intra_dedicated_network_acl": {
                                "default": false,
                                "description": "Whether to use dedicated network ACL (not default) and custom rules for intra subnets"
                            },
                            "intra_inbound_acl_rules": {
                                "default": [
                                    {
                                        "cidr_block": "0.0.0.0/0",
                                        "from_port": "0",
                                        "protocol": "-1",
                                        "rule_action": "allow",
                                        "rule_number": "100",
                                        "to_port": "0"
                                    }
                                ],
                                "description": "Intra subnets inbound network ACLs"
                            },
                            "intra_outbound_acl_rules": {
                                "default": [
                                    {
                                        "cidr_block": "0.0.0.0/0",
                                        "from_port": "0",
                                        "protocol": "-1",
                                        "rule_action": "allow",
                                        "rule_number": "100",
                                        "to_port": "0"
                                    }
                                ],
                                "description": "Intra subnets outbound network ACLs"
                            },
                            "intra_route_table_tags": {
                                "default": {},
                                "description": "Additional tags for the intra route tables"
                            },
                            "intra_subnet_assign_ipv6_address_on_creation": {
                                "default": null,
                                "description": "Assign IPv6 address on intra subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch"
                            },
                            "intra_subnet_ipv6_prefixes": {
                                "default": [],
                                "description": "Assigns IPv6 intra subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
                            },
                            "intra_subnet_suffix": {
                                "default": "intra",
                                "description": "Suffix to append to intra subnets name"
                            },
                            "intra_subnet_tags": {
                                "default": {},
                                "description": "Additional tags for the intra subnets"
                            },
                            "intra_subnets": {
                                "default": [],
                                "description": "A list of intra subnets"
                            },
                            "manage_default_network_acl": {
                                "default": false,
                                "description": "Should be true to adopt and manage Default Network ACL"
                            },
                            "manage_default_route_table": {
                                "default": false,
                                "description": "Should be true to manage default route table"
                            },
                            "manage_default_security_group": {
                                "default": false,
                                "description": "Should be true to adopt and manage default security group"
                            },
                            "manage_default_vpc": {
                                "default": false,
                                "description": "Should be true to adopt and manage Default VPC"
                            },
                            "map_public_ip_on_launch": {
                                "default": true,
                                "description": "Should be false if you do not want to auto-assign public IP on launch"
                            },
                            "name": {
                                "default": "",
                                "description": "Name to be used on all the resources as identifier"
                            },
                            "nat_eip_tags": {
                                "default": {},
                                "description": "Additional tags for the NAT EIP"
                            },
                            "nat_gateway_destination_cidr_block": {
                                "default": "0.0.0.0/0",
                                "description": "Used to pass a custom destination route for private NAT Gateway. If not specified, the default 0.0.0.0/0 is used as a destination route."
                            },
                            "nat_gateway_tags": {
                                "default": {},
                                "description": "Additional tags for the NAT gateways"
                            },
                            "one_nat_gateway_per_az": {
                                "default": false,
                                "description": "Should be true if you want only one NAT Gateway per availability zone. Requires `var.azs` to be set, and the number of `public_subnets` created to be greater than or equal to the number of availability zones specified in `var.azs`."
                            },
                            "outpost_acl_tags": {
                                "default": {},
                                "description": "Additional tags for the outpost subnets network ACL"
                            },
                            "outpost_arn": {
                                "default": null,
                                "description": "ARN of Outpost you want to create a subnet in."
                            },
                            "outpost_az": {
                                "default": null,
                                "description": "AZ where Outpost is anchored."
                            },
                            "outpost_dedicated_network_acl": {
                                "default": false,
                                "description": "Whether to use dedicated network ACL (not default) and custom rules for outpost subnets"
                            },
                            "outpost_inbound_acl_rules": {
                                "default": [
                                    {
                                        "cidr_block": "0.0.0.0/0",
                                        "from_port": "0",
                                        "protocol": "-1",
                                        "rule_action": "allow",
                                        "rule_number": "100",
                                        "to_port": "0"
                                    }
                                ],
                                "description": "Outpost subnets inbound network ACLs"
                            },
                            "outpost_outbound_acl_rules": {
                                "default": [
                                    {
                                        "cidr_block": "0.0.0.0/0",
                                        "from_port": "0",
                                        "protocol": "-1",
                                        "rule_action": "allow",
                                        "rule_number": "100",
                                        "to_port": "0"
                                    }
                                ],
                                "description": "Outpost subnets outbound network ACLs"
                            },
                            "outpost_subnet_assign_ipv6_address_on_creation": {
                                "default": null,
                                "description": "Assign IPv6 address on outpost subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch"
                            },
                            "outpost_subnet_ipv6_prefixes": {
                                "default": [],
                                "description": "Assigns IPv6 outpost subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
                            },
                            "outpost_subnet_suffix": {
                                "default": "outpost",
                                "description": "Suffix to append to outpost subnets name"
                            },
                            "outpost_subnet_tags": {
                                "default": {},
                                "description": "Additional tags for the outpost subnets"
                            },
                            "outpost_subnets": {
                                "default": [],
                                "description": "A list of outpost subnets inside the VPC"
                            },
                            "private_acl_tags": {
                                "default": {},
                                "description": "Additional tags for the private subnets network ACL"
                            },
                            "private_dedicated_network_acl": {
                                "default": false,
                                "description": "Whether to use dedicated network ACL (not default) and custom rules for private subnets"
                            },
                            "private_inbound_acl_rules": {
                                "default": [
                                    {
                                        "cidr_block": "0.0.0.0/0",
                                        "from_port": "0",
                                        "protocol": "-1",
                                        "rule_action": "allow",
                                        "rule_number": "100",
                                        "to_port": "0"
                                    }
                                ],
                                "description": "Private subnets inbound network ACLs"
                            },
                            "private_outbound_acl_rules": {
                                "default": [
                                    {
                                        "cidr_block": "0.0.0.0/0",
                                        "from_port": "0",
                                        "protocol": "-1",
                                        "rule_action": "allow",
                                        "rule_number": "100",
                                        "to_port": "0"
                                    }
                                ],
                                "description": "Private subnets outbound network ACLs"
                            },
                            "private_route_table_tags": {
                                "default": {},
                                "description": "Additional tags for the private route tables"
                            },
                            "private_subnet_assign_ipv6_address_on_creation": {
                                "default": null,
                                "description": "Assign IPv6 address on private subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch"
                            },
                            "private_subnet_ipv6_prefixes": {
                                "default": [],
                                "description": "Assigns IPv6 private subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
                            },
                            "private_subnet_suffix": {
                                "default": "private",
                                "description": "Suffix to append to private subnets name"
                            },
                            "private_subnet_tags": {
                                "default": {},
                                "description": "Additional tags for the private subnets"
                            },
                            "private_subnets": {
                                "default": [],
                                "description": "A list of private subnets inside the VPC"
                            },
                            "propagate_intra_route_tables_vgw": {
                                "default": false,
                                "description": "Should be true if you want route table propagation"
                            },
                            "propagate_private_route_tables_vgw": {
                                "default": false,
                                "description": "Should be true if you want route table propagation"
                            },
                            "propagate_public_route_tables_vgw": {
                                "default": false,
                                "description": "Should be true if you want route table propagation"
                            },
                            "public_acl_tags": {
                                "default": {},
                                "description": "Additional tags for the public subnets network ACL"
                            },
                            "public_dedicated_network_acl": {
                                "default": false,
                                "description": "Whether to use dedicated network ACL (not default) and custom rules for public subnets"
                            },
                            "public_inbound_acl_rules": {
                                "default": [
                                    {
                                        "cidr_block": "0.0.0.0/0",
                                        "from_port": "0",
                                        "protocol": "-1",
                                        "rule_action": "allow",
                                        "rule_number": "100",
                                        "to_port": "0"
                                    }
                                ],
                                "description": "Public subnets inbound network ACLs"
                            },
                            "public_outbound_acl_rules": {
                                "default": [
                                    {
                                        "cidr_block": "0.0.0.0/0",
                                        "from_port": "0",
                                        "protocol": "-1",
                                        "rule_action": "allow",
                                        "rule_number": "100",
                                        "to_port": "0"
                                    }
                                ],
                                "description": "Public subnets outbound network ACLs"
                            },
                            "public_route_table_tags": {
                                "default": {},
                                "description": "Additional tags for the public route tables"
                            },
                            "public_subnet_assign_ipv6_address_on_creation": {
                                "default": null,
                                "description": "Assign IPv6 address on public subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch"
                            },
                            "public_subnet_ipv6_prefixes": {
                                "default": [],
                                "description": "Assigns IPv6 public subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
                            },
                            "public_subnet_suffix": {
                                "default": "public",
                                "description": "Suffix to append to public subnets name"
                            },
                            "public_subnet_tags": {
                                "default": {},
                                "description": "Additional tags for the public subnets"
                            },
                            "public_subnets": {
                                "default": [],
                                "description": "A list of public subnets inside the VPC"
                            },
                            "putin_khuylo": {
                                "default": true,
                                "description": "Do you agree that Putin doesn't respect Ukrainian sovereignty and territorial integrity? More info: https://en.wikipedia.org/wiki/Putin_khuylo!"
                            },
                            "redshift_acl_tags": {
                                "default": {},
                                "description": "Additional tags for the redshift subnets network ACL"
                            },
                            "redshift_dedicated_network_acl": {
                                "default": false,
                                "description": "Whether to use dedicated network ACL (not default) and custom rules for redshift subnets"
                            },
                            "redshift_inbound_acl_rules": {
                                "default": [
                                    {
                                        "cidr_block": "0.0.0.0/0",
                                        "from_port": "0",
                                        "protocol": "-1",
                                        "rule_action": "allow",
                                        "rule_number": "100",
                                        "to_port": "0"
                                    }
                                ],
                                "description": "Redshift subnets inbound network ACL rules"
                            },
                            "redshift_outbound_acl_rules": {
                                "default": [
                                    {
                                        "cidr_block": "0.0.0.0/0",
                                        "from_port": "0",
                                        "protocol": "-1",
                                        "rule_action": "allow",
                                        "rule_number": "100",
                                        "to_port": "0"
                                    }
                                ],
                                "description": "Redshift subnets outbound network ACL rules"
                            },
                            "redshift_route_table_tags": {
                                "default": {},
                                "description": "Additional tags for the redshift route tables"
                            },
                            "redshift_subnet_assign_ipv6_address_on_creation": {
                                "default": null,
                                "description": "Assign IPv6 address on redshift subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch"
                            },
                            "redshift_subnet_group_name": {
                                "default": null,
                                "description": "Name of redshift subnet group"
                            },
                            "redshift_subnet_group_tags": {
                                "default": {},
                                "description": "Additional tags for the redshift subnet group"
                            },
                            "redshift_subnet_ipv6_prefixes": {
                                "default": [],
                                "description": "Assigns IPv6 redshift subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
                            },
                            "redshift_subnet_suffix": {
                                "default": "redshift",
                                "description": "Suffix to append to redshift subnets name"
                            },
                            "redshift_subnet_tags": {
                                "default": {},
                                "description": "Additional tags for the redshift subnets"
                            },
                            "redshift_subnets": {
                                "default": [],
                                "description": "A list of redshift subnets"
                            },
                            "reuse_nat_ips": {
                                "default": false,
                                "description": "Should be true if you don't want EIPs to be created for your NAT Gateways and will instead pass them in via the 'external_nat_ip_ids' variable"
                            },
                            "secondary_cidr_blocks": {
                                "default": [],
                                "description": "List of secondary CIDR blocks to associate with the VPC to extend the IP Address pool"
                            },
                            "single_nat_gateway": {
                                "default": false,
                                "description": "Should be true if you want to provision a single shared NAT Gateway across all of your private networks"
                            },
                            "tags": {
                                "default": {},
                                "description": "A map of tags to add to all resources"
                            },
                            "vpc_flow_log_permissions_boundary": {
                                "default": null,
                                "description": "The ARN of the Permissions Boundary for the VPC Flow Log IAM Role"
                            },
                            "vpc_flow_log_tags": {
                                "default": {},
                                "description": "Additional tags for the VPC Flow Logs"
                            },
                            "vpc_tags": {
                                "default": {},
                                "description": "Additional tags for the VPC"
                            },
                            "vpn_gateway_az": {
                                "default": null,
                                "description": "The Availability Zone for the VPN Gateway"
                            },
                            "vpn_gateway_id": {
                                "default": "",
                                "description": "ID of VPN Gateway to attach to the VPC"
                            },
                            "vpn_gateway_tags": {
                                "default": {},
                                "description": "Additional tags for the VPN gateway"
                            }
                        }
                    },
                    "version_constraint": "~> 3.0"
                }
            }
        }
    },
    "relevant_attributes": [
        {
            "resource": "module.db.module.db_subnet_group.aws_db_subnet_group.this[0]",
            "attribute": [
                "arn"
            ]
        },
        {
            "resource": "module.vpc.aws_subnet.public",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_route_table.private",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_default_vpc.this[0]",
            "attribute": [
                "enable_dns_hostnames"
            ]
        },
        {
            "resource": "module.db_disabled.module.db_instance.aws_cloudwatch_log_group.this",
            "attribute": []
        },
        {
            "resource": "module.db.module.db_parameter_group.aws_db_parameter_group.this[0]",
            "attribute": [
                "arn"
            ]
        },
        {
            "resource": "module.db.module.db_instance.aws_db_instance.this[0]",
            "attribute": [
                "ca_cert_identifier"
            ]
        },
        {
            "resource": "module.vpc.aws_vpc.this[0]",
            "attribute": [
                "instance_tenancy"
            ]
        },
        {
            "resource": "module.vpc.aws_vpn_gateway_attachment.this[0]",
            "attribute": [
                "vpn_gateway_id"
            ]
        },
        {
            "resource": "module.db_disabled.module.db_instance.aws_db_instance.this[0]",
            "attribute": [
                "ca_cert_identifier"
            ]
        },
        {
            "resource": "module.vpc.aws_route_table_association.database",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_route.database_nat_gateway",
            "attribute": []
        },
        {
            "resource": "module.db_default.module.db_instance.aws_db_instance.this[0]",
            "attribute": [
                "engine_version_actual"
            ]
        },
        {
            "resource": "module.db.module.db_instance.aws_db_instance.this[0]",
            "attribute": [
                "engine_version_actual"
            ]
        },
        {
            "resource": "module.db.module.db_instance.data.aws_partition.current",
            "attribute": [
                "partition"
            ]
        },
        {
            "resource": "module.vpc.aws_default_vpc.this[0]",
            "attribute": [
                "main_route_table_id"
            ]
        },
        {
            "resource": "module.db.module.db_instance.aws_cloudwatch_log_group.this",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_egress_only_internet_gateway.this[0]",
            "attribute": [
                "id"
            ]
        },
        {
            "resource": "module.vpc.aws_route_table_association.intra",
            "attribute": []
        },
        {
            "resource": "module.db.module.db_instance.aws_db_instance.this[0]",
            "attribute": [
                "engine"
            ]
        },
        {
            "resource": "module.db.module.db_instance.aws_iam_role.enhanced_monitoring[0]",
            "attribute": [
                "name"
            ]
        },
        {
            "resource": "module.vpc.aws_vpc.this[0]",
            "attribute": [
                "default_route_table_id"
            ]
        },
        {
            "resource": "module.db_disabled.module.db_instance.aws_iam_role.enhanced_monitoring[0]",
            "attribute": [
                "arn"
            ]
        },
        {
            "resource": "module.db_disabled.module.db_instance.aws_db_instance.this[0]",
            "attribute": [
                "resource_id"
            ]
        },
        {
            "resource": "module.vpc.aws_route_table_association.redshift",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_route_table_association.public",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_route.private_nat_gateway",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_vpc.this[0]",
            "attribute": [
                "ipv6_cidr_block"
            ]
        },
        {
            "resource": "module.vpc.aws_customer_gateway.this",
            "attribute": []
        },
        {
            "resource": "module.db_default.module.db_instance.aws_iam_role.enhanced_monitoring[0]",
            "attribute": [
                "name"
            ]
        },
        {
            "resource": "module.security_group.aws_security_group.this[0]",
            "attribute": [
                "id"
            ]
        },
        {
            "resource": "module.vpc.aws_network_acl.database[0]",
            "attribute": [
                "arn"
            ]
        },
        {
            "resource": "module.db_default.module.db_instance.aws_db_instance.this[0]",
            "attribute": [
                "resource_id"
            ]
        },
        {
            "resource": "module.db_disabled.module.db_option_group.aws_db_option_group.this[0]",
            "attribute": [
                "arn"
            ]
        },
        {
            "resource": "module.db_disabled.module.db_subnet_group.aws_db_subnet_group.this[0]",
            "attribute": [
                "arn"
            ]
        },
        {
            "resource": "module.vpc.aws_vpc.this[0]",
            "attribute": [
                "arn"
            ]
        },
        {
            "resource": "module.vpc.aws_internet_gateway.this[0]",
            "attribute": [
                "arn"
            ]
        },
        {
            "resource": "module.vpc.aws_route.public_internet_gateway[0]",
            "attribute": [
                "id"
            ]
        },
        {
            "resource": "module.db_default.module.db_parameter_group.aws_db_parameter_group.this[0]",
            "attribute": [
                "arn"
            ]
        },
        {
            "resource": "module.security_group.aws_security_group.this_name_prefix[0]",
            "attribute": [
                "owner_id"
            ]
        },
        {
            "resource": "module.vpc.aws_route_table.redshift",
            "attribute": []
        },
        {
            "resource": "module.db.module.db_instance.aws_db_instance.this[0]",
            "attribute": [
                "hosted_zone_id"
            ]
        },
        {
            "resource": "module.db_default.module.db_instance.random_id.snapshot_identifier[0]",
            "attribute": [
                "hex"
            ]
        },
        {
            "resource": "module.vpc.aws_network_acl.private[0]",
            "attribute": [
                "id"
            ]
        },
        {
            "resource": "module.db_default.module.db_subnet_group.aws_db_subnet_group.this[0]",
            "attribute": [
                "id"
            ]
        },
        {
            "resource": "module.db_default.module.db_instance.aws_db_instance.this[0]",
            "attribute": [
                "port"
            ]
        },
        {
            "resource": "module.db_default.module.db_option_group.aws_db_option_group.this[0]",
            "attribute": [
                "id"
            ]
        },
        {
            "resource": "module.db_disabled.module.db_parameter_group.aws_db_parameter_group.this[0]",
            "attribute": [
                "arn"
            ]
        },
        {
            "resource": "module.vpc.aws_vpc.this[0]",
            "attribute": [
                "ipv6_association_id"
            ]
        },
        {
            "resource": "module.db_disabled.module.db_instance.aws_iam_role.enhanced_monitoring[0]",
            "attribute": [
                "name"
            ]
        },
        {
            "resource": "module.security_group.aws_security_group.this[0]",
            "attribute": [
                "description"
            ]
        },
        {
            "resource": "module.db_default.module.db_instance.aws_db_instance.this[0]",
            "attribute": [
                "arn"
            ]
        },
        {
            "resource": "module.vpc.aws_vpc.this[0]",
            "attribute": [
                "default_security_group_id"
            ]
        },
        {
            "resource": "module.vpc.aws_vpn_gateway.this[0]",
            "attribute": [
                "arn"
            ]
        },
        {
            "resource": "module.db_disabled.module.db_instance.aws_db_instance.this[0]",
            "attribute": [
                "engine"
            ]
        },
        {
            "resource": "module.db_default.module.db_instance.aws_db_instance.this[0]",
            "attribute": [
                "engine"
            ]
        },
        {
            "resource": "module.db.random_password.master_password[0]",
            "attribute": [
                "result"
            ]
        },
        {
            "resource": "module.db.module.db_instance.data.aws_iam_policy_document.enhanced_monitoring",
            "attribute": [
                "json"
            ]
        },
        {
            "resource": "module.vpc.aws_default_vpc.this[0]",
            "attribute": [
                "default_route_table_id"
            ]
        },
        {
            "resource": "module.db_disabled.module.db_instance.aws_db_instance.this[0]",
            "attribute": [
                "domain_iam_role_name"
            ]
        },
        {
            "resource": "module.security_group.aws_security_group.this_name_prefix[0]",
            "attribute": [
                "id"
            ]
        },
        {
            "resource": "module.vpc.aws_network_acl.public[0]",
            "attribute": [
                "id"
            ]
        },
        {
            "resource": "module.vpc.aws_egress_only_internet_gateway.this",
            "attribute": []
        },
        {
            "resource": "module.db_default.module.db_instance.aws_cloudwatch_log_group.this",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_network_acl.redshift[0]",
            "attribute": [
                "id"
            ]
        },
        {
            "resource": "module.vpc.aws_route_table_association.private",
            "attribute": []
        },
        {
            "resource": "module.db.module.db_instance.aws_db_instance.this[0]",
            "attribute": [
                "id"
            ]
        },
        {
            "resource": "module.db_default.random_password.master_password[0]",
            "attribute": [
                "result"
            ]
        },
        {
            "resource": "module.vpc.aws_route.private_ipv6_egress",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_internet_gateway.this[0]",
            "attribute": [
                "id"
            ]
        },
        {
            "resource": "module.vpc.aws_vpc_dhcp_options.this[0]",
            "attribute": [
                "id"
            ]
        },
        {
            "resource": "module.db_disabled.module.db_subnet_group.aws_db_subnet_group.this[0]",
            "attribute": [
                "id"
            ]
        },
        {
            "resource": "module.vpc.aws_default_vpc.this[0]",
            "attribute": [
                "arn"
            ]
        },
        {
            "resource": "module.vpc.aws_subnet.redshift",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_subnet.private",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_vpc.this[0]",
            "attribute": [
                "enable_dns_support"
            ]
        },
        {
            "resource": "module.db_disabled.module.db_instance.aws_db_instance.this[0]",
            "attribute": [
                "endpoint"
            ]
        },
        {
            "resource": "module.db_disabled.module.db_instance.aws_db_instance.this[0]",
            "attribute": [
                "address"
            ]
        },
        {
            "resource": "module.vpc.aws_route_table.public",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_subnet.elasticache",
            "attribute": []
        },
        {
            "resource": "module.db_disabled.module.db_instance.aws_db_instance.this[0]",
            "attribute": [
                "hosted_zone_id"
            ]
        },
        {
            "resource": "module.db.module.db_instance.aws_db_instance.this[0]",
            "attribute": [
                "resource_id"
            ]
        },
        {
            "resource": "module.db.module.db_instance.aws_db_instance.this[0]",
            "attribute": [
                "name"
            ]
        },
        {
            "resource": "module.db_disabled.module.db_instance.aws_db_instance.this[0]",
            "attribute": [
                "arn"
            ]
        },
        {
            "resource": "module.vpc.aws_network_acl.elasticache[0]",
            "attribute": [
                "id"
            ]
        },
        {
            "resource": "module.security_group.aws_security_group.this",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_network_acl.redshift[0]",
            "attribute": [
                "arn"
            ]
        },
        {
            "resource": "module.vpc.aws_route_table_association.elasticache",
            "attribute": []
        },
        {
            "resource": "module.db_default.module.db_instance.aws_db_instance.this[0]",
            "attribute": [
                "status"
            ]
        },
        {
            "resource": "module.db_default.module.db_instance.aws_iam_role.enhanced_monitoring[0]",
            "attribute": [
                "arn"
            ]
        },
        {
            "resource": "module.db.module.db_instance.aws_iam_role.enhanced_monitoring[0]",
            "attribute": [
                "arn"
            ]
        },
        {
            "resource": "module.security_group.aws_security_group.this[0]",
            "attribute": [
                "vpc_id"
            ]
        },
        {
            "resource": "module.security_group.aws_security_group.this_name_prefix[0]",
            "attribute": [
                "vpc_id"
            ]
        },
        {
            "resource": "module.db_disabled.module.db_instance.aws_db_instance.this[0]",
            "attribute": [
                "id"
            ]
        },
        {
            "resource": "module.db.module.db_instance.aws_db_instance.this[0]",
            "attribute": [
                "username"
            ]
        },
        {
            "resource": "module.vpc.aws_default_vpc.this[0]",
            "attribute": [
                "default_security_group_id"
            ]
        },
        {
            "resource": "module.vpc.aws_network_acl.database[0]",
            "attribute": [
                "id"
            ]
        },
        {
            "resource": "module.db.module.db_instance.aws_db_instance.this[0]",
            "attribute": [
                "password"
            ]
        },
        {
            "resource": "module.db.module.db_instance.aws_db_instance.this[0]",
            "attribute": [
                "availability_zone"
            ]
        },
        {
            "resource": "module.db_disabled.module.db_instance.aws_db_instance.this[0]",
            "attribute": [
                "availability_zone"
            ]
        },
        {
            "resource": "module.db_disabled.module.db_instance.aws_db_instance.this[0]",
            "attribute": [
                "password"
            ]
        },
        {
            "resource": "module.db_default.module.db_instance.aws_db_instance.this[0]",
            "attribute": [
                "endpoint"
            ]
        },
        {
            "resource": "module.db.module.db_instance.aws_db_instance.this[0]",
            "attribute": [
                "arn"
            ]
        },
        {
            "resource": "module.vpc.aws_iam_role.vpc_flow_log_cloudwatch[0]",
            "attribute": [
                "arn"
            ]
        },
        {
            "resource": "module.vpc.aws_elasticache_subnet_group.elasticache[0]",
            "attribute": [
                "name"
            ]
        },
        {
            "resource": "module.vpc.aws_route_table.elasticache",
            "attribute": []
        },
        {
            "resource": "module.db.module.db_instance.aws_db_instance.this[0]",
            "attribute": [
                "port"
            ]
        },
        {
            "resource": "module.db_default.module.db_option_group.aws_db_option_group.this[0]",
            "attribute": [
                "arn"
            ]
        },
        {
            "resource": "module.db.module.db_parameter_group.aws_db_parameter_group.this[0]",
            "attribute": [
                "id"
            ]
        },
        {
            "resource": "module.vpc.aws_vpc.this[0]",
            "attribute": [
                "enable_dns_hostnames"
            ]
        },
        {
            "resource": "module.vpc.aws_vpc.this[0]",
            "attribute": [
                "id"
            ]
        },
        {
            "resource": "module.vpc.aws_route_table.intra",
            "attribute": []
        },
        {
            "resource": "module.db_disabled.random_password.master_password[0]",
            "attribute": [
                "result"
            ]
        },
        {
            "resource": "module.vpc.aws_flow_log.this[0]",
            "attribute": [
                "id"
            ]
        },
        {
            "resource": "module.db.module.db_option_group.aws_db_option_group.this[0]",
            "attribute": [
                "id"
            ]
        },
        {
            "resource": "module.db_disabled.module.db_instance.aws_db_instance.this[0]",
            "attribute": [
                "username"
            ]
        },
        {
            "resource": "module.vpc.aws_network_acl.public[0]",
            "attribute": [
                "arn"
            ]
        },
        {
            "resource": "module.vpc.aws_route.database_internet_gateway[0]",
            "attribute": [
                "id"
            ]
        },
        {
            "resource": "module.vpc.aws_network_acl.private[0]",
            "attribute": [
                "arn"
            ]
        },
        {
            "resource": "module.vpc.aws_default_vpc.this[0]",
            "attribute": [
                "id"
            ]
        },
        {
            "resource": "module.vpc.aws_default_vpc.this[0]",
            "attribute": [
                "cidr_block"
            ]
        },
        {
            "resource": "module.vpc.aws_vpc.this[0]",
            "attribute": [
                "cidr_block"
            ]
        },
        {
            "resource": "module.db_disabled.module.db_instance.aws_db_instance.this[0]",
            "attribute": [
                "domain"
            ]
        },
        {
            "resource": "module.security_group.aws_security_group.this[0]",
            "attribute": [
                "name"
            ]
        },
        {
            "resource": "module.db_default.module.db_instance.aws_db_instance.this[0]",
            "attribute": [
                "ca_cert_identifier"
            ]
        },
        {
            "resource": "module.db.module.db_option_group.aws_db_option_group.this[0]",
            "attribute": [
                "arn"
            ]
        },
        {
            "resource": "module.db_disabled.module.db_option_group.aws_db_option_group.this[0]",
            "attribute": [
                "id"
            ]
        },
        {
            "resource": "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_vpc.this[0]",
            "attribute": [
                "default_network_acl_id"
            ]
        },
        {
            "resource": "module.security_group.aws_security_group.this_name_prefix[0]",
            "attribute": [
                "description"
            ]
        },
        {
            "resource": "module.vpc.aws_elasticache_subnet_group.elasticache[0]",
            "attribute": [
                "id"
            ]
        },
        {
            "resource": "module.db_disabled.module.db_instance.aws_db_instance.this[0]",
            "attribute": [
                "port"
            ]
        },
        {
            "resource": "module.db_disabled.module.db_instance.aws_db_instance.this[0]",
            "attribute": [
                "name"
            ]
        },
        {
            "resource": "module.vpc.aws_network_acl.intra[0]",
            "attribute": [
                "arn"
            ]
        },
        {
            "resource": "module.vpc.aws_subnet.database",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_default_vpc.this[0]",
            "attribute": [
                "instance_tenancy"
            ]
        },
        {
            "resource": "module.vpc.aws_default_vpc.this[0]",
            "attribute": [
                "enable_dns_support"
            ]
        },
        {
            "resource": "module.vpc.aws_vpc.this[0]",
            "attribute": [
                "main_route_table_id"
            ]
        },
        {
            "resource": "module.db_disabled.module.db_instance.aws_db_instance.this[0]",
            "attribute": [
                "engine_version_actual"
            ]
        },
        {
            "resource": "module.vpc.aws_network_acl.intra[0]",
            "attribute": [
                "id"
            ]
        },
        {
            "resource": "module.vpc.aws_route.public_internet_gateway_ipv6[0]",
            "attribute": [
                "id"
            ]
        },
        {
            "resource": "module.db_default.module.db_instance.aws_db_instance.this[0]",
            "attribute": [
                "name"
            ]
        },
        {
            "resource": "module.db_default.module.db_instance.aws_db_instance.this[0]",
            "attribute": [
                "address"
            ]
        },
        {
            "resource": "module.vpc.aws_route_table.database",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_subnet.intra",
            "attribute": []
        },
        {
            "resource": "module.db_default.module.db_instance.aws_db_instance.this[0]",
            "attribute": [
                "availability_zone"
            ]
        },
        {
            "resource": "module.db_default.module.db_instance.aws_db_instance.this[0]",
            "attribute": [
                "hosted_zone_id"
            ]
        },
        {
            "resource": "module.vpc.aws_vpc_ipv4_cidr_block_association.this[0]",
            "attribute": [
                "vpc_id"
            ]
        },
        {
            "resource": "module.security_group.aws_security_group.this_name_prefix",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_network_acl.outpost[0]",
            "attribute": [
                "id"
            ]
        },
        {
            "resource": "module.vpc.aws_route.database_ipv6_egress[0]",
            "attribute": [
                "id"
            ]
        },
        {
            "resource": "module.vpc.aws_db_subnet_group.database[0]",
            "attribute": [
                "name"
            ]
        },
        {
            "resource": "module.db.module.db_instance.aws_db_instance.this[0]",
            "attribute": [
                "endpoint"
            ]
        },
        {
            "resource": "module.db.module.db_instance.random_id.snapshot_identifier[0]",
            "attribute": [
                "hex"
            ]
        },
        {
            "resource": "module.db.module.db_subnet_group.aws_db_subnet_group.this[0]",
            "attribute": [
                "id"
            ]
        },
        {
            "resource": "module.db_default.module.db_instance.aws_db_instance.this[0]",
            "attribute": [
                "id"
            ]
        },
        {
            "resource": "module.db.module.db_instance.aws_db_instance.this[0]",
            "attribute": [
                "address"
            ]
        },
        {
            "resource": "module.vpc.aws_default_vpc.this[0]",
            "attribute": [
                "default_network_acl_id"
            ]
        },
        {
            "resource": "module.vpc.aws_network_acl.outpost[0]",
            "attribute": [
                "arn"
            ]
        },
        {
            "resource": "module.vpc.aws_network_acl.elasticache[0]",
            "attribute": [
                "arn"
            ]
        },
        {
            "resource": "module.security_group.aws_security_group.this[0]",
            "attribute": [
                "owner_id"
            ]
        },
        {
            "resource": "module.security_group.aws_security_group.this_name_prefix[0]",
            "attribute": [
                "name"
            ]
        },
        {
            "resource": "module.vpc.aws_cloudwatch_log_group.flow_log[0]",
            "attribute": [
                "arn"
            ]
        },
        {
            "resource": "module.vpc.aws_route_table.public[0]",
            "attribute": [
                "id"
            ]
        },
        {
            "resource": "module.db_disabled.module.db_parameter_group.aws_db_parameter_group.this[0]",
            "attribute": [
                "id"
            ]
        },
        {
            "resource": "module.db_disabled.module.db_instance.aws_db_instance.this[0]",
            "attribute": [
                "status"
            ]
        },
        {
            "resource": "module.db_default.module.db_instance.aws_db_instance.this[0]",
            "attribute": [
                "password"
            ]
        },
        {
            "resource": "module.db_default.module.db_instance.aws_db_instance.this[0]",
            "attribute": [
                "username"
            ]
        },
        {
            "resource": "module.db_default.module.db_parameter_group.aws_db_parameter_group.this[0]",
            "attribute": [
                "id"
            ]
        },
        {
            "resource": "module.vpc.aws_vpc.this[0]",
            "attribute": [
                "owner_id"
            ]
        },
        {
            "resource": "module.db.module.db_instance.aws_db_instance.this[0]",
            "attribute": [
                "status"
            ]
        },
        {
            "resource": "module.vpc.aws_nat_gateway.this",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_db_subnet_group.database[0]",
            "attribute": [
                "id"
            ]
        },
        {
            "resource": "module.db_default.module.db_subnet_group.aws_db_subnet_group.this[0]",
            "attribute": [
                "arn"
            ]
        },
        {
            "resource": "module.vpc.aws_eip.nat",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_subnet.outpost",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_vpn_gateway.this[0]",
            "attribute": [
                "id"
            ]
        },
        {
            "resource": "module.vpc.aws_redshift_subnet_group.redshift[0]",
            "attribute": [
                "id"
            ]
        },
        {
            "resource": "module.vpc.aws_route_table_association.redshift_public",
            "attribute": []
        }
    ]
}
